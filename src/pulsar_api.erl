%% -*- coding: utf-8 -*-
%% @private
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.10.0
-module(pulsar_api).

-export([encode_msg/2, encode_msg/3]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/3, merge_msgs/4]).
-export([verify_msg/2, verify_msg/3]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_group_names/0]).
-export([get_msg_or_group_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export(['enum_symbol_by_value_Schema.Type'/1, 'enum_value_by_symbol_Schema.Type'/1]).
-export([enum_symbol_by_value_CompressionType/1, enum_value_by_symbol_CompressionType/1]).
-export([enum_symbol_by_value_ServerError/1, enum_value_by_symbol_ServerError/1]).
-export([enum_symbol_by_value_AuthMethod/1, enum_value_by_symbol_AuthMethod/1]).
-export([enum_symbol_by_value_ProtocolVersion/1, enum_value_by_symbol_ProtocolVersion/1]).
-export([enum_symbol_by_value_KeySharedMode/1, enum_value_by_symbol_KeySharedMode/1]).
-export(['enum_symbol_by_value_CommandSubscribe.SubType'/1, 'enum_value_by_symbol_CommandSubscribe.SubType'/1]).
-export(['enum_symbol_by_value_CommandSubscribe.InitialPosition'/1, 'enum_value_by_symbol_CommandSubscribe.InitialPosition'/1]).
-export(['enum_symbol_by_value_CommandPartitionedTopicMetadataResponse.LookupType'/1, 'enum_value_by_symbol_CommandPartitionedTopicMetadataResponse.LookupType'/1]).
-export(['enum_symbol_by_value_CommandLookupTopicResponse.LookupType'/1, 'enum_value_by_symbol_CommandLookupTopicResponse.LookupType'/1]).
-export(['enum_symbol_by_value_CommandAck.AckType'/1, 'enum_value_by_symbol_CommandAck.AckType'/1]).
-export(['enum_symbol_by_value_CommandAck.ValidationError'/1, 'enum_value_by_symbol_CommandAck.ValidationError'/1]).
-export(['enum_symbol_by_value_CommandGetTopicsOfNamespace.Mode'/1, 'enum_value_by_symbol_CommandGetTopicsOfNamespace.Mode'/1]).
-export([enum_symbol_by_value_TxnAction/1, enum_value_by_symbol_TxnAction/1]).
-export(['enum_symbol_by_value_BaseCommand.Type'/1, 'enum_value_by_symbol_BaseCommand.Type'/1]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([fqbin_to_service_name/1]).
-export([service_name_to_fqbin/1]).
-export([fqbins_to_service_and_rpc_name/2]).
-export([service_and_rpc_name_to_fqbins/2]).
-export([fqbin_to_msg_name/1]).
-export([msg_name_to_fqbin/1]).
-export([fqbin_to_enum_name/1]).
-export([enum_name_to_fqbin/1]).
-export([get_package_name/0]).
-export([uses_packages/0]).
-export([source_basename/0]).
-export([get_all_source_basenames/0]).
-export([get_all_proto_names/0]).
-export([get_msg_containment/1]).
-export([get_pkg_containment/1]).
-export([get_service_containment/1]).
-export([get_rpc_containment/1]).
-export([get_enum_containment/1]).
-export([get_proto_by_msg_name_as_fqbin/1]).
-export([get_proto_by_service_name_as_fqbin/1]).
-export([get_proto_by_enum_name_as_fqbin/1]).
-export([get_protos_by_pkg_name_as_fqbin/1]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).


%% enumerated types
-type 'Schema.Type'() :: 'None' | 'String' | 'Json' | 'Protobuf' | 'Avro' | 'Bool' | 'Int8' | 'Int16' | 'Int32' | 'Int64' | 'Float' | 'Double' | 'Date' | 'Time' | 'Timestamp' | 'KeyValue' | 'Instant' | 'LocalDate' | 'LocalTime' | 'LocalDateTime' | 'ProtobufNative'.
-type 'CompressionType'() :: 'NONE' | 'LZ4' | 'ZLIB' | 'ZSTD' | 'SNAPPY'.
-type 'ServerError'() :: 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound'.
-type 'AuthMethod'() :: 'AuthMethodNone' | 'AuthMethodYcaV1' | 'AuthMethodAthens'.
-type 'ProtocolVersion'() :: v0 | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 | v10 | v11 | v12 | v13 | v14 | v15.
-type 'KeySharedMode'() :: 'AUTO_SPLIT' | 'STICKY'.
-type 'CommandSubscribe.SubType'() :: 'Exclusive' | 'Shared' | 'Failover' | 'Key_Shared'.
-type 'CommandSubscribe.InitialPosition'() :: 'Latest' | 'Earliest'.
-type 'CommandPartitionedTopicMetadataResponse.LookupType'() :: 'Success' | 'Failed'.
-type 'CommandLookupTopicResponse.LookupType'() :: 'Redirect' | 'Connect' | 'Failed'.
-type 'CommandAck.AckType'() :: 'Individual' | 'Cumulative'.
-type 'CommandAck.ValidationError'() :: 'UncompressedSizeCorruption' | 'DecompressionError' | 'ChecksumMismatch' | 'BatchDeSerializeError' | 'DecryptionError'.
-type 'CommandGetTopicsOfNamespace.Mode'() :: 'PERSISTENT' | 'NON_PERSISTENT' | 'ALL'.
-type 'TxnAction'() :: 'COMMIT' | 'ABORT'.
-type 'BaseCommand.Type'() :: 'CONNECT' | 'CONNECTED' | 'SUBSCRIBE' | 'PRODUCER' | 'SEND' | 'SEND_RECEIPT' | 'SEND_ERROR' | 'MESSAGE' | 'ACK' | 'FLOW' | 'UNSUBSCRIBE' | 'SUCCESS' | 'ERROR' | 'CLOSE_PRODUCER' | 'CLOSE_CONSUMER' | 'PRODUCER_SUCCESS' | 'PING' | 'PONG' | 'REDELIVER_UNACKNOWLEDGED_MESSAGES' | 'PARTITIONED_METADATA' | 'PARTITIONED_METADATA_RESPONSE' | 'LOOKUP' | 'LOOKUP_RESPONSE' | 'CONSUMER_STATS' | 'CONSUMER_STATS_RESPONSE' | 'REACHED_END_OF_TOPIC' | 'SEEK' | 'GET_LAST_MESSAGE_ID' | 'GET_LAST_MESSAGE_ID_RESPONSE' | 'ACTIVE_CONSUMER_CHANGE' | 'GET_TOPICS_OF_NAMESPACE' | 'GET_TOPICS_OF_NAMESPACE_RESPONSE' | 'GET_SCHEMA' | 'GET_SCHEMA_RESPONSE' | 'AUTH_CHALLENGE' | 'AUTH_RESPONSE' | 'ACK_RESPONSE' | 'GET_OR_CREATE_SCHEMA' | 'GET_OR_CREATE_SCHEMA_RESPONSE' | 'NEW_TXN' | 'NEW_TXN_RESPONSE' | 'ADD_PARTITION_TO_TXN' | 'ADD_PARTITION_TO_TXN_RESPONSE' | 'ADD_SUBSCRIPTION_TO_TXN' | 'ADD_SUBSCRIPTION_TO_TXN_RESPONSE' | 'END_TXN' | 'END_TXN_RESPONSE' | 'END_TXN_ON_PARTITION' | 'END_TXN_ON_PARTITION_RESPONSE' | 'END_TXN_ON_SUBSCRIPTION' | 'END_TXN_ON_SUBSCRIPTION_RESPONSE'.
-export_type(['Schema.Type'/0, 'CompressionType'/0, 'ServerError'/0, 'AuthMethod'/0, 'ProtocolVersion'/0, 'KeySharedMode'/0, 'CommandSubscribe.SubType'/0, 'CommandSubscribe.InitialPosition'/0, 'CommandPartitionedTopicMetadataResponse.LookupType'/0, 'CommandLookupTopicResponse.LookupType'/0, 'CommandAck.AckType'/0, 'CommandAck.ValidationError'/0, 'CommandGetTopicsOfNamespace.Mode'/0, 'TxnAction'/0, 'BaseCommand.Type'/0]).

%% message types
-type 'Schema'() ::
      #{name                    := iodata(),        % = 1
        schema_data             := iodata(),        % = 3
        type                    := 'None' | 'String' | 'Json' | 'Protobuf' | 'Avro' | 'Bool' | 'Int8' | 'Int16' | 'Int32' | 'Int64' | 'Float' | 'Double' | 'Date' | 'Time' | 'Timestamp' | 'KeyValue' | 'Instant' | 'LocalDate' | 'LocalTime' | 'LocalDateTime' | 'ProtobufNative' | integer(), % = 4, enum Schema.Type
        properties              => ['KeyValue'()]   % = 5
       }.

-type 'MessageIdData'() ::
      #{ledgerId                := non_neg_integer(), % = 1, 32 bits
        entryId                 := non_neg_integer(), % = 2, 32 bits
        partition               => integer(),       % = 3, 32 bits
        batch_index             => integer(),       % = 4, 32 bits
        ack_set                 => [integer()],     % = 5, 32 bits
        batch_size              => integer()        % = 6, 32 bits
       }.

-type 'KeyValue'() ::
      #{key                     := iodata(),        % = 1
        value                   := iodata()         % = 2
       }.

-type 'KeyLongValue'() ::
      #{key                     := iodata(),        % = 1
        value                   := non_neg_integer() % = 2, 32 bits
       }.

-type 'IntRange'() ::
      #{start                   := integer(),       % = 1, 32 bits
        'end'                   := integer()        % = 2, 32 bits
       }.

-type 'EncryptionKeys'() ::
      #{key                     := iodata(),        % = 1
        value                   := iodata(),        % = 2
        metadata                => ['KeyValue'()]   % = 3
       }.

-type 'MessageMetadata'() ::
      #{producer_name           := iodata(),        % = 1
        sequence_id             := non_neg_integer(), % = 2, 32 bits
        publish_time            := non_neg_integer(), % = 3, 32 bits
        properties              => ['KeyValue'()],  % = 4
        replicated_from         => iodata(),        % = 5
        partition_key           => iodata(),        % = 6
        replicate_to            => [iodata()],      % = 7
        compression             => 'NONE' | 'LZ4' | 'ZLIB' | 'ZSTD' | 'SNAPPY' | integer(), % = 8, enum CompressionType
        uncompressed_size       => non_neg_integer(), % = 9, 32 bits
        num_messages_in_batch   => integer(),       % = 11, 32 bits
        event_time              => non_neg_integer(), % = 12, 32 bits
        encryption_keys         => ['EncryptionKeys'()], % = 13
        encryption_algo         => iodata(),        % = 14
        encryption_param        => iodata(),        % = 15
        schema_version          => iodata(),        % = 16
        partition_key_b64_encoded => boolean() | 0 | 1, % = 17
        ordering_key            => iodata(),        % = 18
        deliver_at_time         => integer(),       % = 19, 32 bits
        marker_type             => integer(),       % = 20, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 22, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 23, 32 bits
        highest_sequence_id     => non_neg_integer(), % = 24, 32 bits
        null_value              => boolean() | 0 | 1, % = 25
        uuid                    => iodata(),        % = 26
        num_chunks_from_msg     => integer(),       % = 27, 32 bits
        total_chunk_msg_size    => integer(),       % = 28, 32 bits
        chunk_id                => integer(),       % = 29, 32 bits
        null_partition_key      => boolean() | 0 | 1 % = 30
       }.

-type 'SingleMessageMetadata'() ::
      #{properties              => ['KeyValue'()],  % = 1
        partition_key           => iodata(),        % = 2
        payload_size            := integer(),       % = 3, 32 bits
        compacted_out           => boolean() | 0 | 1, % = 4
        event_time              => non_neg_integer(), % = 5, 32 bits
        partition_key_b64_encoded => boolean() | 0 | 1, % = 6
        ordering_key            => iodata(),        % = 7
        sequence_id             => non_neg_integer(), % = 8, 32 bits
        null_value              => boolean() | 0 | 1, % = 9
        null_partition_key      => boolean() | 0 | 1 % = 10
       }.

-type 'CommandConnect'() ::
      #{client_version          := iodata(),        % = 1
        auth_method             => 'AuthMethodNone' | 'AuthMethodYcaV1' | 'AuthMethodAthens' | integer(), % = 2, enum AuthMethod
        auth_method_name        => iodata(),        % = 5
        auth_data               => iodata(),        % = 3
        protocol_version        => integer(),       % = 4, 32 bits
        proxy_to_broker_url     => iodata(),        % = 6
        original_principal      => iodata(),        % = 7
        original_auth_data      => iodata(),        % = 8
        original_auth_method    => iodata(),        % = 9
        feature_flags           => 'FeatureFlags'() % = 10
       }.

-type 'FeatureFlags'() ::
      #{supports_auth_refresh   => boolean() | 0 | 1 % = 1
       }.

-type 'CommandConnected'() ::
      #{server_version          := iodata(),        % = 1
        protocol_version        => integer(),       % = 2, 32 bits
        max_message_size        => integer()        % = 3, 32 bits
       }.

-type 'CommandAuthResponse'() ::
      #{client_version          => iodata(),        % = 1
        response                => 'AuthData'(),    % = 2
        protocol_version        => integer()        % = 3, 32 bits
       }.

-type 'CommandAuthChallenge'() ::
      #{server_version          => iodata(),        % = 1
        challenge               => 'AuthData'(),    % = 2
        protocol_version        => integer()        % = 3, 32 bits
       }.

-type 'AuthData'() ::
      #{auth_method_name        => iodata(),        % = 1
        auth_data               => iodata()         % = 2
       }.

-type 'KeySharedMeta'() ::
      #{keySharedMode           := 'AUTO_SPLIT' | 'STICKY' | integer(), % = 1, enum KeySharedMode
        hashRanges              => ['IntRange'()],  % = 3
        allowOutOfOrderDelivery => boolean() | 0 | 1 % = 4
       }.

-type 'CommandSubscribe'() ::
      #{topic                   := iodata(),        % = 1
        subscription            := iodata(),        % = 2
        subType                 := 'Exclusive' | 'Shared' | 'Failover' | 'Key_Shared' | integer(), % = 3, enum CommandSubscribe.SubType
        consumer_id             := non_neg_integer(), % = 4, 32 bits
        request_id              := non_neg_integer(), % = 5, 32 bits
        consumer_name           => iodata(),        % = 6
        priority_level          => integer(),       % = 7, 32 bits
        durable                 => boolean() | 0 | 1, % = 8
        start_message_id        => 'MessageIdData'(), % = 9
        metadata                => ['KeyValue'()],  % = 10
        read_compacted          => boolean() | 0 | 1, % = 11
        schema                  => 'Schema'(),      % = 12
        initialPosition         => 'Latest' | 'Earliest' | integer(), % = 13, enum CommandSubscribe.InitialPosition
        replicate_subscription_state => boolean() | 0 | 1, % = 14
        force_topic_creation    => boolean() | 0 | 1, % = 15
        start_message_rollback_duration_sec => non_neg_integer(), % = 16, 32 bits
        keySharedMeta           => 'KeySharedMeta'() % = 17
       }.

-type 'CommandPartitionedTopicMetadata'() ::
      #{topic                   := iodata(),        % = 1
        request_id              := non_neg_integer(), % = 2, 32 bits
        original_principal      => iodata(),        % = 3
        original_auth_data      => iodata(),        % = 4
        original_auth_method    => iodata()         % = 5
       }.

-type 'CommandPartitionedTopicMetadataResponse'() ::
      #{partitions              => non_neg_integer(), % = 1, 32 bits
        request_id              := non_neg_integer(), % = 2, 32 bits
        response                => 'Success' | 'Failed' | integer(), % = 3, enum CommandPartitionedTopicMetadataResponse.LookupType
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 4, enum ServerError
        message                 => iodata()         % = 5
       }.

-type 'CommandLookupTopic'() ::
      #{topic                   := iodata(),        % = 1
        request_id              := non_neg_integer(), % = 2, 32 bits
        authoritative           => boolean() | 0 | 1, % = 3
        original_principal      => iodata(),        % = 4
        original_auth_data      => iodata(),        % = 5
        original_auth_method    => iodata(),        % = 6
        advertised_listener_name => iodata()        % = 7
       }.

-type 'CommandLookupTopicResponse'() ::
      #{brokerServiceUrl        => iodata(),        % = 1
        brokerServiceUrlTls     => iodata(),        % = 2
        response                => 'Redirect' | 'Connect' | 'Failed' | integer(), % = 3, enum CommandLookupTopicResponse.LookupType
        request_id              := non_neg_integer(), % = 4, 32 bits
        authoritative           => boolean() | 0 | 1, % = 5
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 6, enum ServerError
        message                 => iodata(),        % = 7
        proxy_through_service_url => boolean() | 0 | 1 % = 8
       }.

-type 'CommandProducer'() ::
      #{topic                   := iodata(),        % = 1
        producer_id             := non_neg_integer(), % = 2, 32 bits
        request_id              := non_neg_integer(), % = 3, 32 bits
        producer_name           => iodata(),        % = 4
        encrypted               => boolean() | 0 | 1, % = 5
        metadata                => ['KeyValue'()],  % = 6
        schema                  => 'Schema'(),      % = 7
        epoch                   => non_neg_integer(), % = 8, 32 bits
        user_provided_producer_name => boolean() | 0 | 1 % = 9
       }.

-type 'CommandSend'() ::
      #{producer_id             := non_neg_integer(), % = 1, 32 bits
        sequence_id             := non_neg_integer(), % = 2, 32 bits
        num_messages            => integer(),       % = 3, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 4, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 5, 32 bits
        highest_sequence_id     => non_neg_integer(), % = 6, 32 bits
        is_chunk                => boolean() | 0 | 1 % = 7
       }.

-type 'CommandSendReceipt'() ::
      #{producer_id             := non_neg_integer(), % = 1, 32 bits
        sequence_id             := non_neg_integer(), % = 2, 32 bits
        message_id              => 'MessageIdData'(), % = 3
        highest_sequence_id     => non_neg_integer() % = 4, 32 bits
       }.

-type 'CommandSendError'() ::
      #{producer_id             := non_neg_integer(), % = 1, 32 bits
        sequence_id             := non_neg_integer(), % = 2, 32 bits
        error                   := 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 3, enum ServerError
        message                 := iodata()         % = 4
       }.

-type 'CommandMessage'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        message_id              := 'MessageIdData'(), % = 2
        redelivery_count        => non_neg_integer(), % = 3, 32 bits
        ack_set                 => [integer()]      % = 4, 32 bits
       }.

-type 'CommandAck'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        ack_type                := 'Individual' | 'Cumulative' | integer(), % = 2, enum CommandAck.AckType
        message_id              => ['MessageIdData'()], % = 3
        validation_error        => 'UncompressedSizeCorruption' | 'DecompressionError' | 'ChecksumMismatch' | 'BatchDeSerializeError' | 'DecryptionError' | integer(), % = 4, enum CommandAck.ValidationError
        properties              => ['KeyLongValue'()], % = 5
        txnid_least_bits        => non_neg_integer(), % = 6, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 7, 32 bits
        request_id              => non_neg_integer() % = 8, 32 bits
       }.

-type 'CommandAckResponse'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 4, enum ServerError
        message                 => iodata(),        % = 5
        request_id              => non_neg_integer() % = 6, 32 bits
       }.

-type 'CommandActiveConsumerChange'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        is_active               => boolean() | 0 | 1 % = 2
       }.

-type 'CommandFlow'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        messagePermits          := non_neg_integer() % = 2, 32 bits
       }.

-type 'CommandUnsubscribe'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        request_id              := non_neg_integer() % = 2, 32 bits
       }.

-type 'CommandSeek'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        request_id              := non_neg_integer(), % = 2, 32 bits
        message_id              => 'MessageIdData'(), % = 3
        message_publish_time    => non_neg_integer() % = 4, 32 bits
       }.

-type 'CommandReachedEndOfTopic'() ::
      #{consumer_id             := non_neg_integer() % = 1, 32 bits
       }.

-type 'CommandCloseProducer'() ::
      #{producer_id             := non_neg_integer(), % = 1, 32 bits
        request_id              := non_neg_integer() % = 2, 32 bits
       }.

-type 'CommandCloseConsumer'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        request_id              := non_neg_integer() % = 2, 32 bits
       }.

-type 'CommandRedeliverUnacknowledgedMessages'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        message_ids             => ['MessageIdData'()] % = 2
       }.

-type 'CommandSuccess'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        schema                  => 'Schema'()       % = 2
       }.

-type 'CommandProducerSuccess'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        producer_name           := iodata(),        % = 2
        last_sequence_id        => integer(),       % = 3, 32 bits
        schema_version          => iodata()         % = 4
       }.

-type 'CommandError'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        error                   := 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 2, enum ServerError
        message                 := iodata()         % = 3
       }.

-type 'CommandPing'() ::
      #{
       }.

-type 'CommandPong'() ::
      #{
       }.

-type 'CommandConsumerStats'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        consumer_id             := non_neg_integer() % = 4, 32 bits
       }.

-type 'CommandConsumerStatsResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        error_code              => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 2, enum ServerError
        error_message           => iodata(),        % = 3
        msgRateOut              => float() | integer() | infinity | '-infinity' | nan, % = 4
        msgThroughputOut        => float() | integer() | infinity | '-infinity' | nan, % = 5
        msgRateRedeliver        => float() | integer() | infinity | '-infinity' | nan, % = 6
        consumerName            => iodata(),        % = 7
        availablePermits        => non_neg_integer(), % = 8, 32 bits
        unackedMessages         => non_neg_integer(), % = 9, 32 bits
        blockedConsumerOnUnackedMsgs => boolean() | 0 | 1, % = 10
        address                 => iodata(),        % = 11
        connectedSince          => iodata(),        % = 12
        type                    => iodata(),        % = 13
        msgRateExpired          => float() | integer() | infinity | '-infinity' | nan, % = 14
        msgBacklog              => non_neg_integer() % = 15, 32 bits
       }.

-type 'CommandGetLastMessageId'() ::
      #{consumer_id             := non_neg_integer(), % = 1, 32 bits
        request_id              := non_neg_integer() % = 2, 32 bits
       }.

-type 'CommandGetLastMessageIdResponse'() ::
      #{last_message_id         := 'MessageIdData'(), % = 1
        request_id              := non_neg_integer(), % = 2, 32 bits
        consumer_mark_delete_position => 'MessageIdData'() % = 3
       }.

-type 'CommandGetTopicsOfNamespace'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        namespace               := iodata(),        % = 2
        mode                    => 'PERSISTENT' | 'NON_PERSISTENT' | 'ALL' | integer() % = 3, enum CommandGetTopicsOfNamespace.Mode
       }.

-type 'CommandGetTopicsOfNamespaceResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        topics                  => [iodata()]       % = 2
       }.

-type 'CommandGetSchema'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        topic                   := iodata(),        % = 2
        schema_version          => iodata()         % = 3
       }.

-type 'CommandGetSchemaResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        error_code              => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 2, enum ServerError
        error_message           => iodata(),        % = 3
        schema                  => 'Schema'(),      % = 4
        schema_version          => iodata()         % = 5
       }.

-type 'CommandGetOrCreateSchema'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        topic                   := iodata(),        % = 2
        schema                  := 'Schema'()       % = 3
       }.

-type 'CommandGetOrCreateSchemaResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        error_code              => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 2, enum ServerError
        error_message           => iodata(),        % = 3
        schema_version          => iodata()         % = 4
       }.

-type 'CommandNewTxn'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txn_ttl_seconds         => non_neg_integer(), % = 2, 32 bits
        tc_id                   => non_neg_integer() % = 3, 32 bits
       }.

-type 'CommandNewTxnResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 4, enum ServerError
        message                 => iodata()         % = 5
       }.

-type 'CommandAddPartitionToTxn'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        partitions              => [iodata()]       % = 4
       }.

-type 'CommandAddPartitionToTxnResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 4, enum ServerError
        message                 => iodata()         % = 5
       }.

-type 'Subscription'() ::
      #{topic                   := iodata(),        % = 1
        subscription            := iodata()         % = 2
       }.

-type 'CommandAddSubscriptionToTxn'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        subscription            => ['Subscription'()] % = 4
       }.

-type 'CommandAddSubscriptionToTxnResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 4, enum ServerError
        message                 => iodata()         % = 5
       }.

-type 'CommandEndTxn'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        txn_action              => 'COMMIT' | 'ABORT' | integer(), % = 4, enum TxnAction
        message_id              => ['MessageIdData'()] % = 5
       }.

-type 'CommandEndTxnResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 4, enum ServerError
        message                 => iodata()         % = 5
       }.

-type 'CommandEndTxnOnPartition'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        topic                   => iodata(),        % = 4
        txn_action              => 'COMMIT' | 'ABORT' | integer(), % = 5, enum TxnAction
        message_id              => ['MessageIdData'()] % = 6
       }.

-type 'CommandEndTxnOnPartitionResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 4, enum ServerError
        message                 => iodata()         % = 5
       }.

-type 'CommandEndTxnOnSubscription'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        subscription            => 'Subscription'(), % = 4
        txn_action              => 'COMMIT' | 'ABORT' | integer() % = 5, enum TxnAction
       }.

-type 'CommandEndTxnOnSubscriptionResponse'() ::
      #{request_id              := non_neg_integer(), % = 1, 32 bits
        txnid_least_bits        => non_neg_integer(), % = 2, 32 bits
        txnid_most_bits         => non_neg_integer(), % = 3, 32 bits
        error                   => 'UnknownError' | 'MetadataError' | 'PersistenceError' | 'AuthenticationError' | 'AuthorizationError' | 'ConsumerBusy' | 'ServiceNotReady' | 'ProducerBlockedQuotaExceededError' | 'ProducerBlockedQuotaExceededException' | 'ChecksumError' | 'UnsupportedVersionError' | 'TopicNotFound' | 'SubscriptionNotFound' | 'ConsumerNotFound' | 'TooManyRequests' | 'TopicTerminatedError' | 'ProducerBusy' | 'InvalidTopicName' | 'IncompatibleSchema' | 'ConsumerAssignError' | 'TransactionCoordinatorNotFound' | 'InvalidTxnStatus' | 'NotAllowedError' | 'TransactionConflict' | 'TransactionNotFound' | integer(), % = 4, enum ServerError
        message                 => iodata()         % = 5
       }.

-type 'BaseCommand'() ::
      #{type                    := 'CONNECT' | 'CONNECTED' | 'SUBSCRIBE' | 'PRODUCER' | 'SEND' | 'SEND_RECEIPT' | 'SEND_ERROR' | 'MESSAGE' | 'ACK' | 'FLOW' | 'UNSUBSCRIBE' | 'SUCCESS' | 'ERROR' | 'CLOSE_PRODUCER' | 'CLOSE_CONSUMER' | 'PRODUCER_SUCCESS' | 'PING' | 'PONG' | 'REDELIVER_UNACKNOWLEDGED_MESSAGES' | 'PARTITIONED_METADATA' | 'PARTITIONED_METADATA_RESPONSE' | 'LOOKUP' | 'LOOKUP_RESPONSE' | 'CONSUMER_STATS' | 'CONSUMER_STATS_RESPONSE' | 'REACHED_END_OF_TOPIC' | 'SEEK' | 'GET_LAST_MESSAGE_ID' | 'GET_LAST_MESSAGE_ID_RESPONSE' | 'ACTIVE_CONSUMER_CHANGE' | 'GET_TOPICS_OF_NAMESPACE' | 'GET_TOPICS_OF_NAMESPACE_RESPONSE' | 'GET_SCHEMA' | 'GET_SCHEMA_RESPONSE' | 'AUTH_CHALLENGE' | 'AUTH_RESPONSE' | 'ACK_RESPONSE' | 'GET_OR_CREATE_SCHEMA' | 'GET_OR_CREATE_SCHEMA_RESPONSE' | 'NEW_TXN' | 'NEW_TXN_RESPONSE' | 'ADD_PARTITION_TO_TXN' | 'ADD_PARTITION_TO_TXN_RESPONSE' | 'ADD_SUBSCRIPTION_TO_TXN' | 'ADD_SUBSCRIPTION_TO_TXN_RESPONSE' | 'END_TXN' | 'END_TXN_RESPONSE' | 'END_TXN_ON_PARTITION' | 'END_TXN_ON_PARTITION_RESPONSE' | 'END_TXN_ON_SUBSCRIPTION' | 'END_TXN_ON_SUBSCRIPTION_RESPONSE' | integer(), % = 1, enum BaseCommand.Type
        connect                 => 'CommandConnect'(), % = 2
        connected               => 'CommandConnected'(), % = 3
        subscribe               => 'CommandSubscribe'(), % = 4
        producer                => 'CommandProducer'(), % = 5
        send                    => 'CommandSend'(), % = 6
        send_receipt            => 'CommandSendReceipt'(), % = 7
        send_error              => 'CommandSendError'(), % = 8
        message                 => 'CommandMessage'(), % = 9
        ack                     => 'CommandAck'(),  % = 10
        flow                    => 'CommandFlow'(), % = 11
        unsubscribe             => 'CommandUnsubscribe'(), % = 12
        success                 => 'CommandSuccess'(), % = 13
        error                   => 'CommandError'(), % = 14
        close_producer          => 'CommandCloseProducer'(), % = 15
        close_consumer          => 'CommandCloseConsumer'(), % = 16
        producer_success        => 'CommandProducerSuccess'(), % = 17
        ping                    => 'CommandPing'(), % = 18
        pong                    => 'CommandPong'(), % = 19
        redeliverUnacknowledgedMessages => 'CommandRedeliverUnacknowledgedMessages'(), % = 20
        partitionMetadata       => 'CommandPartitionedTopicMetadata'(), % = 21
        partitionMetadataResponse => 'CommandPartitionedTopicMetadataResponse'(), % = 22
        lookupTopic             => 'CommandLookupTopic'(), % = 23
        lookupTopicResponse     => 'CommandLookupTopicResponse'(), % = 24
        consumerStats           => 'CommandConsumerStats'(), % = 25
        consumerStatsResponse   => 'CommandConsumerStatsResponse'(), % = 26
        reachedEndOfTopic       => 'CommandReachedEndOfTopic'(), % = 27
        seek                    => 'CommandSeek'(), % = 28
        getLastMessageId        => 'CommandGetLastMessageId'(), % = 29
        getLastMessageIdResponse => 'CommandGetLastMessageIdResponse'(), % = 30
        active_consumer_change  => 'CommandActiveConsumerChange'(), % = 31
        getTopicsOfNamespace    => 'CommandGetTopicsOfNamespace'(), % = 32
        getTopicsOfNamespaceResponse => 'CommandGetTopicsOfNamespaceResponse'(), % = 33
        getSchema               => 'CommandGetSchema'(), % = 34
        getSchemaResponse       => 'CommandGetSchemaResponse'(), % = 35
        authChallenge           => 'CommandAuthChallenge'(), % = 36
        authResponse            => 'CommandAuthResponse'(), % = 37
        ackResponse             => 'CommandAckResponse'(), % = 38
        getOrCreateSchema       => 'CommandGetOrCreateSchema'(), % = 39
        getOrCreateSchemaResponse => 'CommandGetOrCreateSchemaResponse'(), % = 40
        newTxn                  => 'CommandNewTxn'(), % = 50
        newTxnResponse          => 'CommandNewTxnResponse'(), % = 51
        addPartitionToTxn       => 'CommandAddPartitionToTxn'(), % = 52
        addPartitionToTxnResponse => 'CommandAddPartitionToTxnResponse'(), % = 53
        addSubscriptionToTxn    => 'CommandAddSubscriptionToTxn'(), % = 54
        addSubscriptionToTxnResponse => 'CommandAddSubscriptionToTxnResponse'(), % = 55
        endTxn                  => 'CommandEndTxn'(), % = 56
        endTxnResponse          => 'CommandEndTxnResponse'(), % = 57
        endTxnOnPartition       => 'CommandEndTxnOnPartition'(), % = 58
        endTxnOnPartitionResponse => 'CommandEndTxnOnPartitionResponse'(), % = 59
        endTxnOnSubscription    => 'CommandEndTxnOnSubscription'(), % = 60
        endTxnOnSubscriptionResponse => 'CommandEndTxnOnSubscriptionResponse'() % = 61
       }.

-export_type(['Schema'/0, 'MessageIdData'/0, 'KeyValue'/0, 'KeyLongValue'/0, 'IntRange'/0, 'EncryptionKeys'/0, 'MessageMetadata'/0, 'SingleMessageMetadata'/0, 'CommandConnect'/0, 'FeatureFlags'/0, 'CommandConnected'/0, 'CommandAuthResponse'/0, 'CommandAuthChallenge'/0, 'AuthData'/0, 'KeySharedMeta'/0, 'CommandSubscribe'/0, 'CommandPartitionedTopicMetadata'/0, 'CommandPartitionedTopicMetadataResponse'/0, 'CommandLookupTopic'/0, 'CommandLookupTopicResponse'/0, 'CommandProducer'/0, 'CommandSend'/0, 'CommandSendReceipt'/0, 'CommandSendError'/0, 'CommandMessage'/0, 'CommandAck'/0, 'CommandAckResponse'/0, 'CommandActiveConsumerChange'/0, 'CommandFlow'/0, 'CommandUnsubscribe'/0, 'CommandSeek'/0, 'CommandReachedEndOfTopic'/0, 'CommandCloseProducer'/0, 'CommandCloseConsumer'/0, 'CommandRedeliverUnacknowledgedMessages'/0, 'CommandSuccess'/0, 'CommandProducerSuccess'/0, 'CommandError'/0, 'CommandPing'/0, 'CommandPong'/0, 'CommandConsumerStats'/0, 'CommandConsumerStatsResponse'/0, 'CommandGetLastMessageId'/0, 'CommandGetLastMessageIdResponse'/0, 'CommandGetTopicsOfNamespace'/0, 'CommandGetTopicsOfNamespaceResponse'/0, 'CommandGetSchema'/0, 'CommandGetSchemaResponse'/0, 'CommandGetOrCreateSchema'/0, 'CommandGetOrCreateSchemaResponse'/0, 'CommandNewTxn'/0, 'CommandNewTxnResponse'/0, 'CommandAddPartitionToTxn'/0, 'CommandAddPartitionToTxnResponse'/0, 'Subscription'/0, 'CommandAddSubscriptionToTxn'/0, 'CommandAddSubscriptionToTxnResponse'/0, 'CommandEndTxn'/0, 'CommandEndTxnResponse'/0, 'CommandEndTxnOnPartition'/0, 'CommandEndTxnOnPartitionResponse'/0, 'CommandEndTxnOnSubscription'/0, 'CommandEndTxnOnSubscriptionResponse'/0, 'BaseCommand'/0]).

-spec encode_msg('Schema'() | 'MessageIdData'() | 'KeyValue'() | 'KeyLongValue'() | 'IntRange'() | 'EncryptionKeys'() | 'MessageMetadata'() | 'SingleMessageMetadata'() | 'CommandConnect'() | 'FeatureFlags'() | 'CommandConnected'() | 'CommandAuthResponse'() | 'CommandAuthChallenge'() | 'AuthData'() | 'KeySharedMeta'() | 'CommandSubscribe'() | 'CommandPartitionedTopicMetadata'() | 'CommandPartitionedTopicMetadataResponse'() | 'CommandLookupTopic'() | 'CommandLookupTopicResponse'() | 'CommandProducer'() | 'CommandSend'() | 'CommandSendReceipt'() | 'CommandSendError'() | 'CommandMessage'() | 'CommandAck'() | 'CommandAckResponse'() | 'CommandActiveConsumerChange'() | 'CommandFlow'() | 'CommandUnsubscribe'() | 'CommandSeek'() | 'CommandReachedEndOfTopic'() | 'CommandCloseProducer'() | 'CommandCloseConsumer'() | 'CommandRedeliverUnacknowledgedMessages'() | 'CommandSuccess'() | 'CommandProducerSuccess'() | 'CommandError'() | 'CommandPing'() | 'CommandPong'() | 'CommandConsumerStats'() | 'CommandConsumerStatsResponse'() | 'CommandGetLastMessageId'() | 'CommandGetLastMessageIdResponse'() | 'CommandGetTopicsOfNamespace'() | 'CommandGetTopicsOfNamespaceResponse'() | 'CommandGetSchema'() | 'CommandGetSchemaResponse'() | 'CommandGetOrCreateSchema'() | 'CommandGetOrCreateSchemaResponse'() | 'CommandNewTxn'() | 'CommandNewTxnResponse'() | 'CommandAddPartitionToTxn'() | 'CommandAddPartitionToTxnResponse'() | 'Subscription'() | 'CommandAddSubscriptionToTxn'() | 'CommandAddSubscriptionToTxnResponse'() | 'CommandEndTxn'() | 'CommandEndTxnResponse'() | 'CommandEndTxnOnPartition'() | 'CommandEndTxnOnPartitionResponse'() | 'CommandEndTxnOnSubscription'() | 'CommandEndTxnOnSubscriptionResponse'() | 'BaseCommand'(), atom()) -> binary().
encode_msg(Msg, MsgName) when is_atom(MsgName) ->
    encode_msg(Msg, MsgName, []).

-spec encode_msg('Schema'() | 'MessageIdData'() | 'KeyValue'() | 'KeyLongValue'() | 'IntRange'() | 'EncryptionKeys'() | 'MessageMetadata'() | 'SingleMessageMetadata'() | 'CommandConnect'() | 'FeatureFlags'() | 'CommandConnected'() | 'CommandAuthResponse'() | 'CommandAuthChallenge'() | 'AuthData'() | 'KeySharedMeta'() | 'CommandSubscribe'() | 'CommandPartitionedTopicMetadata'() | 'CommandPartitionedTopicMetadataResponse'() | 'CommandLookupTopic'() | 'CommandLookupTopicResponse'() | 'CommandProducer'() | 'CommandSend'() | 'CommandSendReceipt'() | 'CommandSendError'() | 'CommandMessage'() | 'CommandAck'() | 'CommandAckResponse'() | 'CommandActiveConsumerChange'() | 'CommandFlow'() | 'CommandUnsubscribe'() | 'CommandSeek'() | 'CommandReachedEndOfTopic'() | 'CommandCloseProducer'() | 'CommandCloseConsumer'() | 'CommandRedeliverUnacknowledgedMessages'() | 'CommandSuccess'() | 'CommandProducerSuccess'() | 'CommandError'() | 'CommandPing'() | 'CommandPong'() | 'CommandConsumerStats'() | 'CommandConsumerStatsResponse'() | 'CommandGetLastMessageId'() | 'CommandGetLastMessageIdResponse'() | 'CommandGetTopicsOfNamespace'() | 'CommandGetTopicsOfNamespaceResponse'() | 'CommandGetSchema'() | 'CommandGetSchemaResponse'() | 'CommandGetOrCreateSchema'() | 'CommandGetOrCreateSchemaResponse'() | 'CommandNewTxn'() | 'CommandNewTxnResponse'() | 'CommandAddPartitionToTxn'() | 'CommandAddPartitionToTxnResponse'() | 'Subscription'() | 'CommandAddSubscriptionToTxn'() | 'CommandAddSubscriptionToTxnResponse'() | 'CommandEndTxn'() | 'CommandEndTxnResponse'() | 'CommandEndTxnOnPartition'() | 'CommandEndTxnOnPartitionResponse'() | 'CommandEndTxnOnSubscription'() | 'CommandEndTxnOnSubscriptionResponse'() | 'BaseCommand'(), atom(), list()) -> binary().
encode_msg(Msg, MsgName, Opts) ->
    case proplists:get_bool(verify, Opts) of
        true -> verify_msg(Msg, MsgName, Opts);
        false -> ok
    end,
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'Schema' ->
            encode_msg_Schema(id(Msg, TrUserData), TrUserData);
        'MessageIdData' ->
            encode_msg_MessageIdData(id(Msg, TrUserData),
                                     TrUserData);
        'KeyValue' ->
            encode_msg_KeyValue(id(Msg, TrUserData), TrUserData);
        'KeyLongValue' ->
            encode_msg_KeyLongValue(id(Msg, TrUserData),
                                    TrUserData);
        'IntRange' ->
            encode_msg_IntRange(id(Msg, TrUserData), TrUserData);
        'EncryptionKeys' ->
            encode_msg_EncryptionKeys(id(Msg, TrUserData),
                                      TrUserData);
        'MessageMetadata' ->
            encode_msg_MessageMetadata(id(Msg, TrUserData),
                                       TrUserData);
        'SingleMessageMetadata' ->
            encode_msg_SingleMessageMetadata(id(Msg, TrUserData),
                                             TrUserData);
        'CommandConnect' ->
            encode_msg_CommandConnect(id(Msg, TrUserData),
                                      TrUserData);
        'FeatureFlags' ->
            encode_msg_FeatureFlags(id(Msg, TrUserData),
                                    TrUserData);
        'CommandConnected' ->
            encode_msg_CommandConnected(id(Msg, TrUserData),
                                        TrUserData);
        'CommandAuthResponse' ->
            encode_msg_CommandAuthResponse(id(Msg, TrUserData),
                                           TrUserData);
        'CommandAuthChallenge' ->
            encode_msg_CommandAuthChallenge(id(Msg, TrUserData),
                                            TrUserData);
        'AuthData' ->
            encode_msg_AuthData(id(Msg, TrUserData), TrUserData);
        'KeySharedMeta' ->
            encode_msg_KeySharedMeta(id(Msg, TrUserData),
                                     TrUserData);
        'CommandSubscribe' ->
            encode_msg_CommandSubscribe(id(Msg, TrUserData),
                                        TrUserData);
        'CommandPartitionedTopicMetadata' ->
            encode_msg_CommandPartitionedTopicMetadata(id(Msg,
                                                          TrUserData),
                                                       TrUserData);
        'CommandPartitionedTopicMetadataResponse' ->
            encode_msg_CommandPartitionedTopicMetadataResponse(id(Msg,
                                                                  TrUserData),
                                                               TrUserData);
        'CommandLookupTopic' ->
            encode_msg_CommandLookupTopic(id(Msg, TrUserData),
                                          TrUserData);
        'CommandLookupTopicResponse' ->
            encode_msg_CommandLookupTopicResponse(id(Msg,
                                                     TrUserData),
                                                  TrUserData);
        'CommandProducer' ->
            encode_msg_CommandProducer(id(Msg, TrUserData),
                                       TrUserData);
        'CommandSend' ->
            encode_msg_CommandSend(id(Msg, TrUserData), TrUserData);
        'CommandSendReceipt' ->
            encode_msg_CommandSendReceipt(id(Msg, TrUserData),
                                          TrUserData);
        'CommandSendError' ->
            encode_msg_CommandSendError(id(Msg, TrUserData),
                                        TrUserData);
        'CommandMessage' ->
            encode_msg_CommandMessage(id(Msg, TrUserData),
                                      TrUserData);
        'CommandAck' ->
            encode_msg_CommandAck(id(Msg, TrUserData), TrUserData);
        'CommandAckResponse' ->
            encode_msg_CommandAckResponse(id(Msg, TrUserData),
                                          TrUserData);
        'CommandActiveConsumerChange' ->
            encode_msg_CommandActiveConsumerChange(id(Msg,
                                                      TrUserData),
                                                   TrUserData);
        'CommandFlow' ->
            encode_msg_CommandFlow(id(Msg, TrUserData), TrUserData);
        'CommandUnsubscribe' ->
            encode_msg_CommandUnsubscribe(id(Msg, TrUserData),
                                          TrUserData);
        'CommandSeek' ->
            encode_msg_CommandSeek(id(Msg, TrUserData), TrUserData);
        'CommandReachedEndOfTopic' ->
            encode_msg_CommandReachedEndOfTopic(id(Msg, TrUserData),
                                                TrUserData);
        'CommandCloseProducer' ->
            encode_msg_CommandCloseProducer(id(Msg, TrUserData),
                                            TrUserData);
        'CommandCloseConsumer' ->
            encode_msg_CommandCloseConsumer(id(Msg, TrUserData),
                                            TrUserData);
        'CommandRedeliverUnacknowledgedMessages' ->
            encode_msg_CommandRedeliverUnacknowledgedMessages(id(Msg,
                                                                 TrUserData),
                                                              TrUserData);
        'CommandSuccess' ->
            encode_msg_CommandSuccess(id(Msg, TrUserData),
                                      TrUserData);
        'CommandProducerSuccess' ->
            encode_msg_CommandProducerSuccess(id(Msg, TrUserData),
                                              TrUserData);
        'CommandError' ->
            encode_msg_CommandError(id(Msg, TrUserData),
                                    TrUserData);
        'CommandPing' ->
            encode_msg_CommandPing(id(Msg, TrUserData), TrUserData);
        'CommandPong' ->
            encode_msg_CommandPong(id(Msg, TrUserData), TrUserData);
        'CommandConsumerStats' ->
            encode_msg_CommandConsumerStats(id(Msg, TrUserData),
                                            TrUserData);
        'CommandConsumerStatsResponse' ->
            encode_msg_CommandConsumerStatsResponse(id(Msg,
                                                       TrUserData),
                                                    TrUserData);
        'CommandGetLastMessageId' ->
            encode_msg_CommandGetLastMessageId(id(Msg, TrUserData),
                                               TrUserData);
        'CommandGetLastMessageIdResponse' ->
            encode_msg_CommandGetLastMessageIdResponse(id(Msg,
                                                          TrUserData),
                                                       TrUserData);
        'CommandGetTopicsOfNamespace' ->
            encode_msg_CommandGetTopicsOfNamespace(id(Msg,
                                                      TrUserData),
                                                   TrUserData);
        'CommandGetTopicsOfNamespaceResponse' ->
            encode_msg_CommandGetTopicsOfNamespaceResponse(id(Msg,
                                                              TrUserData),
                                                           TrUserData);
        'CommandGetSchema' ->
            encode_msg_CommandGetSchema(id(Msg, TrUserData),
                                        TrUserData);
        'CommandGetSchemaResponse' ->
            encode_msg_CommandGetSchemaResponse(id(Msg, TrUserData),
                                                TrUserData);
        'CommandGetOrCreateSchema' ->
            encode_msg_CommandGetOrCreateSchema(id(Msg, TrUserData),
                                                TrUserData);
        'CommandGetOrCreateSchemaResponse' ->
            encode_msg_CommandGetOrCreateSchemaResponse(id(Msg,
                                                           TrUserData),
                                                        TrUserData);
        'CommandNewTxn' ->
            encode_msg_CommandNewTxn(id(Msg, TrUserData),
                                     TrUserData);
        'CommandNewTxnResponse' ->
            encode_msg_CommandNewTxnResponse(id(Msg, TrUserData),
                                             TrUserData);
        'CommandAddPartitionToTxn' ->
            encode_msg_CommandAddPartitionToTxn(id(Msg, TrUserData),
                                                TrUserData);
        'CommandAddPartitionToTxnResponse' ->
            encode_msg_CommandAddPartitionToTxnResponse(id(Msg,
                                                           TrUserData),
                                                        TrUserData);
        'Subscription' ->
            encode_msg_Subscription(id(Msg, TrUserData),
                                    TrUserData);
        'CommandAddSubscriptionToTxn' ->
            encode_msg_CommandAddSubscriptionToTxn(id(Msg,
                                                      TrUserData),
                                                   TrUserData);
        'CommandAddSubscriptionToTxnResponse' ->
            encode_msg_CommandAddSubscriptionToTxnResponse(id(Msg,
                                                              TrUserData),
                                                           TrUserData);
        'CommandEndTxn' ->
            encode_msg_CommandEndTxn(id(Msg, TrUserData),
                                     TrUserData);
        'CommandEndTxnResponse' ->
            encode_msg_CommandEndTxnResponse(id(Msg, TrUserData),
                                             TrUserData);
        'CommandEndTxnOnPartition' ->
            encode_msg_CommandEndTxnOnPartition(id(Msg, TrUserData),
                                                TrUserData);
        'CommandEndTxnOnPartitionResponse' ->
            encode_msg_CommandEndTxnOnPartitionResponse(id(Msg,
                                                           TrUserData),
                                                        TrUserData);
        'CommandEndTxnOnSubscription' ->
            encode_msg_CommandEndTxnOnSubscription(id(Msg,
                                                      TrUserData),
                                                   TrUserData);
        'CommandEndTxnOnSubscriptionResponse' ->
            encode_msg_CommandEndTxnOnSubscriptionResponse(id(Msg,
                                                              TrUserData),
                                                           TrUserData);
        'BaseCommand' ->
            encode_msg_BaseCommand(id(Msg, TrUserData), TrUserData)
    end.


encode_msg_Schema(Msg, TrUserData) ->
    encode_msg_Schema(Msg, <<>>, TrUserData).


encode_msg_Schema(#{name := F1, schema_data := F2,
                    type := F3} =
                      M,
                  Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_type_bytes(TrF2, <<B1/binary, 26>>, TrUserData)
         end,
    B3 = begin
             TrF3 = id(F3, TrUserData),
             'e_enum_Schema.Type'(TrF3,
                                  <<B2/binary, 32>>,
                                  TrUserData)
         end,
    case M of
        #{properties := F4} ->
            TrF4 = id(F4, TrUserData),
            if TrF4 == [] -> B3;
               true -> e_field_Schema_properties(TrF4, B3, TrUserData)
            end;
        _ -> B3
    end.

encode_msg_MessageIdData(Msg, TrUserData) ->
    encode_msg_MessageIdData(Msg, <<>>, TrUserData).


encode_msg_MessageIdData(#{ledgerId := F1,
                           entryId := F2} =
                             M,
                         Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = case M of
             #{partition := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_int32(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{batch_index := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_type_int32(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{ack_set := F5} ->
                 TrF5 = id(F5, TrUserData),
                 if TrF5 == [] -> B4;
                    true ->
                        e_field_MessageIdData_ack_set(TrF5, B4, TrUserData)
                 end;
             _ -> B4
         end,
    case M of
        #{batch_size := F6} ->
            begin
                TrF6 = id(F6, TrUserData),
                e_type_int32(TrF6, <<B5/binary, 48>>, TrUserData)
            end;
        _ -> B5
    end.

encode_msg_KeyValue(Msg, TrUserData) ->
    encode_msg_KeyValue(Msg, <<>>, TrUserData).


encode_msg_KeyValue(#{key := F1, value := F2}, Bin,
                    TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
    end.

encode_msg_KeyLongValue(Msg, TrUserData) ->
    encode_msg_KeyLongValue(Msg, <<>>, TrUserData).


encode_msg_KeyLongValue(#{key := F1, value := F2}, Bin,
                        TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
    end.

encode_msg_IntRange(Msg, TrUserData) ->
    encode_msg_IntRange(Msg, <<>>, TrUserData).


encode_msg_IntRange(#{start := F1, 'end' := F2}, Bin,
                    TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_int32(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_type_int32(TrF2, <<B1/binary, 16>>, TrUserData)
    end.

encode_msg_EncryptionKeys(Msg, TrUserData) ->
    encode_msg_EncryptionKeys(Msg, <<>>, TrUserData).


encode_msg_EncryptionKeys(#{key := F1, value := F2} = M,
                          Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_type_bytes(TrF2, <<B1/binary, 18>>, TrUserData)
         end,
    case M of
        #{metadata := F3} ->
            TrF3 = id(F3, TrUserData),
            if TrF3 == [] -> B2;
               true ->
                   e_field_EncryptionKeys_metadata(TrF3, B2, TrUserData)
            end;
        _ -> B2
    end.

encode_msg_MessageMetadata(Msg, TrUserData) ->
    encode_msg_MessageMetadata(Msg, <<>>, TrUserData).


encode_msg_MessageMetadata(#{producer_name := F1,
                             sequence_id := F2, publish_time := F3} =
                               M,
                           Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = begin
             TrF3 = id(F3, TrUserData),
             e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
         end,
    B4 = case M of
             #{properties := F4} ->
                 TrF4 = id(F4, TrUserData),
                 if TrF4 == [] -> B3;
                    true ->
                        e_field_MessageMetadata_properties(TrF4, B3, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{replicated_from := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{partition_key := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_type_string(TrF6, <<B5/binary, 50>>, TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{replicate_to := F7} ->
                 TrF7 = id(F7, TrUserData),
                 if TrF7 == [] -> B6;
                    true ->
                        e_field_MessageMetadata_replicate_to(TrF7,
                                                             B6,
                                                             TrUserData)
                 end;
             _ -> B6
         end,
    B8 = case M of
             #{compression := F8} ->
                 begin
                     TrF8 = id(F8, TrUserData),
                     e_enum_CompressionType(TrF8,
                                            <<B7/binary, 64>>,
                                            TrUserData)
                 end;
             _ -> B7
         end,
    B9 = case M of
             #{uncompressed_size := F9} ->
                 begin
                     TrF9 = id(F9, TrUserData),
                     e_varint(TrF9, <<B8/binary, 72>>, TrUserData)
                 end;
             _ -> B8
         end,
    B10 = case M of
              #{num_messages_in_batch := F10} ->
                  begin
                      TrF10 = id(F10, TrUserData),
                      e_type_int32(TrF10, <<B9/binary, 88>>, TrUserData)
                  end;
              _ -> B9
          end,
    B11 = case M of
              #{event_time := F11} ->
                  begin
                      TrF11 = id(F11, TrUserData),
                      e_varint(TrF11, <<B10/binary, 96>>, TrUserData)
                  end;
              _ -> B10
          end,
    B12 = case M of
              #{encryption_keys := F12} ->
                  TrF12 = id(F12, TrUserData),
                  if TrF12 == [] -> B11;
                     true ->
                         e_field_MessageMetadata_encryption_keys(TrF12,
                                                                 B11,
                                                                 TrUserData)
                  end;
              _ -> B11
          end,
    B13 = case M of
              #{encryption_algo := F13} ->
                  begin
                      TrF13 = id(F13, TrUserData),
                      e_type_string(TrF13, <<B12/binary, 114>>, TrUserData)
                  end;
              _ -> B12
          end,
    B14 = case M of
              #{encryption_param := F14} ->
                  begin
                      TrF14 = id(F14, TrUserData),
                      e_type_bytes(TrF14, <<B13/binary, 122>>, TrUserData)
                  end;
              _ -> B13
          end,
    B15 = case M of
              #{schema_version := F15} ->
                  begin
                      TrF15 = id(F15, TrUserData),
                      e_type_bytes(TrF15, <<B14/binary, 130, 1>>, TrUserData)
                  end;
              _ -> B14
          end,
    B16 = case M of
              #{partition_key_b64_encoded := F16} ->
                  begin
                      TrF16 = id(F16, TrUserData),
                      e_type_bool(TrF16, <<B15/binary, 136, 1>>, TrUserData)
                  end;
              _ -> B15
          end,
    B17 = case M of
              #{ordering_key := F17} ->
                  begin
                      TrF17 = id(F17, TrUserData),
                      e_type_bytes(TrF17, <<B16/binary, 146, 1>>, TrUserData)
                  end;
              _ -> B16
          end,
    B18 = case M of
              #{deliver_at_time := F18} ->
                  begin
                      TrF18 = id(F18, TrUserData),
                      e_type_int64(TrF18, <<B17/binary, 152, 1>>, TrUserData)
                  end;
              _ -> B17
          end,
    B19 = case M of
              #{marker_type := F19} ->
                  begin
                      TrF19 = id(F19, TrUserData),
                      e_type_int32(TrF19, <<B18/binary, 160, 1>>, TrUserData)
                  end;
              _ -> B18
          end,
    B20 = case M of
              #{txnid_least_bits := F20} ->
                  begin
                      TrF20 = id(F20, TrUserData),
                      e_varint(TrF20, <<B19/binary, 176, 1>>, TrUserData)
                  end;
              _ -> B19
          end,
    B21 = case M of
              #{txnid_most_bits := F21} ->
                  begin
                      TrF21 = id(F21, TrUserData),
                      e_varint(TrF21, <<B20/binary, 184, 1>>, TrUserData)
                  end;
              _ -> B20
          end,
    B22 = case M of
              #{highest_sequence_id := F22} ->
                  begin
                      TrF22 = id(F22, TrUserData),
                      e_varint(TrF22, <<B21/binary, 192, 1>>, TrUserData)
                  end;
              _ -> B21
          end,
    B23 = case M of
              #{null_value := F23} ->
                  begin
                      TrF23 = id(F23, TrUserData),
                      e_type_bool(TrF23, <<B22/binary, 200, 1>>, TrUserData)
                  end;
              _ -> B22
          end,
    B24 = case M of
              #{uuid := F24} ->
                  begin
                      TrF24 = id(F24, TrUserData),
                      e_type_string(TrF24, <<B23/binary, 210, 1>>, TrUserData)
                  end;
              _ -> B23
          end,
    B25 = case M of
              #{num_chunks_from_msg := F25} ->
                  begin
                      TrF25 = id(F25, TrUserData),
                      e_type_int32(TrF25, <<B24/binary, 216, 1>>, TrUserData)
                  end;
              _ -> B24
          end,
    B26 = case M of
              #{total_chunk_msg_size := F26} ->
                  begin
                      TrF26 = id(F26, TrUserData),
                      e_type_int32(TrF26, <<B25/binary, 224, 1>>, TrUserData)
                  end;
              _ -> B25
          end,
    B27 = case M of
              #{chunk_id := F27} ->
                  begin
                      TrF27 = id(F27, TrUserData),
                      e_type_int32(TrF27, <<B26/binary, 232, 1>>, TrUserData)
                  end;
              _ -> B26
          end,
    case M of
        #{null_partition_key := F28} ->
            begin
                TrF28 = id(F28, TrUserData),
                e_type_bool(TrF28, <<B27/binary, 240, 1>>, TrUserData)
            end;
        _ -> B27
    end.

encode_msg_SingleMessageMetadata(Msg, TrUserData) ->
    encode_msg_SingleMessageMetadata(Msg, <<>>, TrUserData).


encode_msg_SingleMessageMetadata(#{payload_size := F3} =
                                     M,
                                 Bin, TrUserData) ->
    B1 = case M of
             #{properties := F1} ->
                 TrF1 = id(F1, TrUserData),
                 if TrF1 == [] -> Bin;
                    true ->
                        e_field_SingleMessageMetadata_properties(TrF1,
                                                                 Bin,
                                                                 TrUserData)
                 end;
             _ -> Bin
         end,
    B2 = case M of
             #{partition_key := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = begin
             TrF3 = id(F3, TrUserData),
             e_type_int32(TrF3, <<B2/binary, 24>>, TrUserData)
         end,
    B4 = case M of
             #{compacted_out := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_type_bool(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{event_time := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_varint(TrF5, <<B4/binary, 40>>, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{partition_key_b64_encoded := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_type_bool(TrF6, <<B5/binary, 48>>, TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{ordering_key := F7} ->
                 begin
                     TrF7 = id(F7, TrUserData),
                     e_type_bytes(TrF7, <<B6/binary, 58>>, TrUserData)
                 end;
             _ -> B6
         end,
    B8 = case M of
             #{sequence_id := F8} ->
                 begin
                     TrF8 = id(F8, TrUserData),
                     e_varint(TrF8, <<B7/binary, 64>>, TrUserData)
                 end;
             _ -> B7
         end,
    B9 = case M of
             #{null_value := F9} ->
                 begin
                     TrF9 = id(F9, TrUserData),
                     e_type_bool(TrF9, <<B8/binary, 72>>, TrUserData)
                 end;
             _ -> B8
         end,
    case M of
        #{null_partition_key := F10} ->
            begin
                TrF10 = id(F10, TrUserData),
                e_type_bool(TrF10, <<B9/binary, 80>>, TrUserData)
            end;
        _ -> B9
    end.

encode_msg_CommandConnect(Msg, TrUserData) ->
    encode_msg_CommandConnect(Msg, <<>>, TrUserData).


encode_msg_CommandConnect(#{client_version := F1} = M,
                          Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = case M of
             #{auth_method := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_enum_AuthMethod(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{auth_method_name := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_string(TrF3, <<B2/binary, 42>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{auth_data := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_type_bytes(TrF4, <<B3/binary, 26>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{protocol_version := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_type_int32(TrF5, <<B4/binary, 32>>, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{proxy_to_broker_url := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_type_string(TrF6, <<B5/binary, 50>>, TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{original_principal := F7} ->
                 begin
                     TrF7 = id(F7, TrUserData),
                     e_type_string(TrF7, <<B6/binary, 58>>, TrUserData)
                 end;
             _ -> B6
         end,
    B8 = case M of
             #{original_auth_data := F8} ->
                 begin
                     TrF8 = id(F8, TrUserData),
                     e_type_string(TrF8, <<B7/binary, 66>>, TrUserData)
                 end;
             _ -> B7
         end,
    B9 = case M of
             #{original_auth_method := F9} ->
                 begin
                     TrF9 = id(F9, TrUserData),
                     e_type_string(TrF9, <<B8/binary, 74>>, TrUserData)
                 end;
             _ -> B8
         end,
    case M of
        #{feature_flags := F10} ->
            begin
                TrF10 = id(F10, TrUserData),
                e_mfield_CommandConnect_feature_flags(TrF10,
                                                      <<B9/binary, 82>>,
                                                      TrUserData)
            end;
        _ -> B9
    end.

encode_msg_FeatureFlags(Msg, TrUserData) ->
    encode_msg_FeatureFlags(Msg, <<>>, TrUserData).


encode_msg_FeatureFlags(#{} = M, Bin, TrUserData) ->
    case M of
        #{supports_auth_refresh := F1} ->
            begin
                TrF1 = id(F1, TrUserData),
                e_type_bool(TrF1, <<Bin/binary, 8>>, TrUserData)
            end;
        _ -> Bin
    end.

encode_msg_CommandConnected(Msg, TrUserData) ->
    encode_msg_CommandConnected(Msg, <<>>, TrUserData).


encode_msg_CommandConnected(#{server_version := F1} = M,
                            Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = case M of
             #{protocol_version := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_type_int32(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    case M of
        #{max_message_size := F3} ->
            begin
                TrF3 = id(F3, TrUserData),
                e_type_int32(TrF3, <<B2/binary, 24>>, TrUserData)
            end;
        _ -> B2
    end.

encode_msg_CommandAuthResponse(Msg, TrUserData) ->
    encode_msg_CommandAuthResponse(Msg, <<>>, TrUserData).


encode_msg_CommandAuthResponse(#{} = M, Bin,
                               TrUserData) ->
    B1 = case M of
             #{client_version := F1} ->
                 begin
                     TrF1 = id(F1, TrUserData),
                     e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                 end;
             _ -> Bin
         end,
    B2 = case M of
             #{response := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_mfield_CommandAuthResponse_response(TrF2,
                                                           <<B1/binary, 18>>,
                                                           TrUserData)
                 end;
             _ -> B1
         end,
    case M of
        #{protocol_version := F3} ->
            begin
                TrF3 = id(F3, TrUserData),
                e_type_int32(TrF3, <<B2/binary, 24>>, TrUserData)
            end;
        _ -> B2
    end.

encode_msg_CommandAuthChallenge(Msg, TrUserData) ->
    encode_msg_CommandAuthChallenge(Msg, <<>>, TrUserData).


encode_msg_CommandAuthChallenge(#{} = M, Bin,
                                TrUserData) ->
    B1 = case M of
             #{server_version := F1} ->
                 begin
                     TrF1 = id(F1, TrUserData),
                     e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                 end;
             _ -> Bin
         end,
    B2 = case M of
             #{challenge := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_mfield_CommandAuthChallenge_challenge(TrF2,
                                                             <<B1/binary, 18>>,
                                                             TrUserData)
                 end;
             _ -> B1
         end,
    case M of
        #{protocol_version := F3} ->
            begin
                TrF3 = id(F3, TrUserData),
                e_type_int32(TrF3, <<B2/binary, 24>>, TrUserData)
            end;
        _ -> B2
    end.

encode_msg_AuthData(Msg, TrUserData) ->
    encode_msg_AuthData(Msg, <<>>, TrUserData).


encode_msg_AuthData(#{} = M, Bin, TrUserData) ->
    B1 = case M of
             #{auth_method_name := F1} ->
                 begin
                     TrF1 = id(F1, TrUserData),
                     e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                 end;
             _ -> Bin
         end,
    case M of
        #{auth_data := F2} ->
            begin
                TrF2 = id(F2, TrUserData),
                e_type_bytes(TrF2, <<B1/binary, 18>>, TrUserData)
            end;
        _ -> B1
    end.

encode_msg_KeySharedMeta(Msg, TrUserData) ->
    encode_msg_KeySharedMeta(Msg, <<>>, TrUserData).


encode_msg_KeySharedMeta(#{keySharedMode := F1} = M,
                         Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_enum_KeySharedMode(TrF1,
                                  <<Bin/binary, 8>>,
                                  TrUserData)
         end,
    B2 = case M of
             #{hashRanges := F2} ->
                 TrF2 = id(F2, TrUserData),
                 if TrF2 == [] -> B1;
                    true ->
                        e_field_KeySharedMeta_hashRanges(TrF2, B1, TrUserData)
                 end;
             _ -> B1
         end,
    case M of
        #{allowOutOfOrderDelivery := F3} ->
            begin
                TrF3 = id(F3, TrUserData),
                e_type_bool(TrF3, <<B2/binary, 32>>, TrUserData)
            end;
        _ -> B2
    end.

encode_msg_CommandSubscribe(Msg, TrUserData) ->
    encode_msg_CommandSubscribe(Msg, <<>>, TrUserData).


encode_msg_CommandSubscribe(#{topic := F1,
                              subscription := F2, subType := F3,
                              consumer_id := F4, request_id := F5} =
                                M,
                            Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
         end,
    B3 = begin
             TrF3 = id(F3, TrUserData),
             'e_enum_CommandSubscribe.SubType'(TrF3,
                                               <<B2/binary, 24>>,
                                               TrUserData)
         end,
    B4 = begin
             TrF4 = id(F4, TrUserData),
             e_varint(TrF4, <<B3/binary, 32>>, TrUserData)
         end,
    B5 = begin
             TrF5 = id(F5, TrUserData),
             e_varint(TrF5, <<B4/binary, 40>>, TrUserData)
         end,
    B6 = case M of
             #{consumer_name := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_type_string(TrF6, <<B5/binary, 50>>, TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{priority_level := F7} ->
                 begin
                     TrF7 = id(F7, TrUserData),
                     e_type_int32(TrF7, <<B6/binary, 56>>, TrUserData)
                 end;
             _ -> B6
         end,
    B8 = case M of
             #{durable := F8} ->
                 begin
                     TrF8 = id(F8, TrUserData),
                     e_type_bool(TrF8, <<B7/binary, 64>>, TrUserData)
                 end;
             _ -> B7
         end,
    B9 = case M of
             #{start_message_id := F9} ->
                 begin
                     TrF9 = id(F9, TrUserData),
                     e_mfield_CommandSubscribe_start_message_id(TrF9,
                                                                <<B8/binary,
                                                                  74>>,
                                                                TrUserData)
                 end;
             _ -> B8
         end,
    B10 = case M of
              #{metadata := F10} ->
                  TrF10 = id(F10, TrUserData),
                  if TrF10 == [] -> B9;
                     true ->
                         e_field_CommandSubscribe_metadata(TrF10,
                                                           B9,
                                                           TrUserData)
                  end;
              _ -> B9
          end,
    B11 = case M of
              #{read_compacted := F11} ->
                  begin
                      TrF11 = id(F11, TrUserData),
                      e_type_bool(TrF11, <<B10/binary, 88>>, TrUserData)
                  end;
              _ -> B10
          end,
    B12 = case M of
              #{schema := F12} ->
                  begin
                      TrF12 = id(F12, TrUserData),
                      e_mfield_CommandSubscribe_schema(TrF12,
                                                       <<B11/binary, 98>>,
                                                       TrUserData)
                  end;
              _ -> B11
          end,
    B13 = case M of
              #{initialPosition := F13} ->
                  begin
                      TrF13 = id(F13, TrUserData),
                      'e_enum_CommandSubscribe.InitialPosition'(TrF13,
                                                                <<B12/binary,
                                                                  104>>,
                                                                TrUserData)
                  end;
              _ -> B12
          end,
    B14 = case M of
              #{replicate_subscription_state := F14} ->
                  begin
                      TrF14 = id(F14, TrUserData),
                      e_type_bool(TrF14, <<B13/binary, 112>>, TrUserData)
                  end;
              _ -> B13
          end,
    B15 = case M of
              #{force_topic_creation := F15} ->
                  begin
                      TrF15 = id(F15, TrUserData),
                      e_type_bool(TrF15, <<B14/binary, 120>>, TrUserData)
                  end;
              _ -> B14
          end,
    B16 = case M of
              #{start_message_rollback_duration_sec := F16} ->
                  begin
                      TrF16 = id(F16, TrUserData),
                      e_varint(TrF16, <<B15/binary, 128, 1>>, TrUserData)
                  end;
              _ -> B15
          end,
    case M of
        #{keySharedMeta := F17} ->
            begin
                TrF17 = id(F17, TrUserData),
                e_mfield_CommandSubscribe_keySharedMeta(TrF17,
                                                        <<B16/binary, 138, 1>>,
                                                        TrUserData)
            end;
        _ -> B16
    end.

encode_msg_CommandPartitionedTopicMetadata(Msg,
                                           TrUserData) ->
    encode_msg_CommandPartitionedTopicMetadata(Msg,
                                               <<>>,
                                               TrUserData).


encode_msg_CommandPartitionedTopicMetadata(#{topic :=
                                                 F1,
                                             request_id := F2} =
                                               M,
                                           Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = case M of
             #{original_principal := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{original_auth_data := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{original_auth_method := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandPartitionedTopicMetadataResponse(Msg,
                                                   TrUserData) ->
    encode_msg_CommandPartitionedTopicMetadataResponse(Msg,
                                                       <<>>,
                                                       TrUserData).


encode_msg_CommandPartitionedTopicMetadataResponse(#{request_id
                                                         := F2} =
                                                       M,
                                                   Bin, TrUserData) ->
    B1 = case M of
             #{partitions := F1} ->
                 begin
                     TrF1 = id(F1, TrUserData),
                     e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                 end;
             _ -> Bin
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = case M of
             #{response := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     'e_enum_CommandPartitionedTopicMetadataResponse.LookupType'(TrF3,
                                                                                 <<B2/binary,
                                                                                   24>>,
                                                                                 TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_ServerError(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{message := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandLookupTopic(Msg, TrUserData) ->
    encode_msg_CommandLookupTopic(Msg, <<>>, TrUserData).


encode_msg_CommandLookupTopic(#{topic := F1,
                                request_id := F2} =
                                  M,
                              Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = case M of
             #{authoritative := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_bool(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{original_principal := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{original_auth_data := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{original_auth_method := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_type_string(TrF6, <<B5/binary, 50>>, TrUserData)
                 end;
             _ -> B5
         end,
    case M of
        #{advertised_listener_name := F7} ->
            begin
                TrF7 = id(F7, TrUserData),
                e_type_string(TrF7, <<B6/binary, 58>>, TrUserData)
            end;
        _ -> B6
    end.

encode_msg_CommandLookupTopicResponse(Msg,
                                      TrUserData) ->
    encode_msg_CommandLookupTopicResponse(Msg,
                                          <<>>,
                                          TrUserData).


encode_msg_CommandLookupTopicResponse(#{request_id :=
                                            F4} =
                                          M,
                                      Bin, TrUserData) ->
    B1 = case M of
             #{brokerServiceUrl := F1} ->
                 begin
                     TrF1 = id(F1, TrUserData),
                     e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                 end;
             _ -> Bin
         end,
    B2 = case M of
             #{brokerServiceUrlTls := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{response := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     'e_enum_CommandLookupTopicResponse.LookupType'(TrF3,
                                                                    <<B2/binary,
                                                                      24>>,
                                                                    TrUserData)
                 end;
             _ -> B2
         end,
    B4 = begin
             TrF4 = id(F4, TrUserData),
             e_varint(TrF4, <<B3/binary, 32>>, TrUserData)
         end,
    B5 = case M of
             #{authoritative := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_type_bool(TrF5, <<B4/binary, 40>>, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{error := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_enum_ServerError(TrF6, <<B5/binary, 48>>, TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{message := F7} ->
                 begin
                     TrF7 = id(F7, TrUserData),
                     e_type_string(TrF7, <<B6/binary, 58>>, TrUserData)
                 end;
             _ -> B6
         end,
    case M of
        #{proxy_through_service_url := F8} ->
            begin
                TrF8 = id(F8, TrUserData),
                e_type_bool(TrF8, <<B7/binary, 64>>, TrUserData)
            end;
        _ -> B7
    end.

encode_msg_CommandProducer(Msg, TrUserData) ->
    encode_msg_CommandProducer(Msg, <<>>, TrUserData).


encode_msg_CommandProducer(#{topic := F1,
                             producer_id := F2, request_id := F3} =
                               M,
                           Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = begin
             TrF3 = id(F3, TrUserData),
             e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
         end,
    B4 = case M of
             #{producer_name := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{encrypted := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_type_bool(TrF5, <<B4/binary, 40>>, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{metadata := F6} ->
                 TrF6 = id(F6, TrUserData),
                 if TrF6 == [] -> B5;
                    true ->
                        e_field_CommandProducer_metadata(TrF6, B5, TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{schema := F7} ->
                 begin
                     TrF7 = id(F7, TrUserData),
                     e_mfield_CommandProducer_schema(TrF7,
                                                     <<B6/binary, 58>>,
                                                     TrUserData)
                 end;
             _ -> B6
         end,
    B8 = case M of
             #{epoch := F8} ->
                 begin
                     TrF8 = id(F8, TrUserData),
                     e_varint(TrF8, <<B7/binary, 64>>, TrUserData)
                 end;
             _ -> B7
         end,
    case M of
        #{user_provided_producer_name := F9} ->
            begin
                TrF9 = id(F9, TrUserData),
                e_type_bool(TrF9, <<B8/binary, 72>>, TrUserData)
            end;
        _ -> B8
    end.

encode_msg_CommandSend(Msg, TrUserData) ->
    encode_msg_CommandSend(Msg, <<>>, TrUserData).


encode_msg_CommandSend(#{producer_id := F1,
                         sequence_id := F2} =
                           M,
                       Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = case M of
             #{num_messages := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_int32(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{txnid_least_bits := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_varint(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{txnid_most_bits := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_varint(TrF5, <<B4/binary, 40>>, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{highest_sequence_id := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_varint(TrF6, <<B5/binary, 48>>, TrUserData)
                 end;
             _ -> B5
         end,
    case M of
        #{is_chunk := F7} ->
            begin
                TrF7 = id(F7, TrUserData),
                e_type_bool(TrF7, <<B6/binary, 56>>, TrUserData)
            end;
        _ -> B6
    end.

encode_msg_CommandSendReceipt(Msg, TrUserData) ->
    encode_msg_CommandSendReceipt(Msg, <<>>, TrUserData).


encode_msg_CommandSendReceipt(#{producer_id := F1,
                                sequence_id := F2} =
                                  M,
                              Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = case M of
             #{message_id := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_mfield_CommandSendReceipt_message_id(TrF3,
                                                            <<B2/binary, 26>>,
                                                            TrUserData)
                 end;
             _ -> B2
         end,
    case M of
        #{highest_sequence_id := F4} ->
            begin
                TrF4 = id(F4, TrUserData),
                e_varint(TrF4, <<B3/binary, 32>>, TrUserData)
            end;
        _ -> B3
    end.

encode_msg_CommandSendError(Msg, TrUserData) ->
    encode_msg_CommandSendError(Msg, <<>>, TrUserData).


encode_msg_CommandSendError(#{producer_id := F1,
                              sequence_id := F2, error := F3, message := F4},
                            Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = begin
             TrF3 = id(F3, TrUserData),
             e_enum_ServerError(TrF3, <<B2/binary, 24>>, TrUserData)
         end,
    begin
        TrF4 = id(F4, TrUserData),
        e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
    end.

encode_msg_CommandMessage(Msg, TrUserData) ->
    encode_msg_CommandMessage(Msg, <<>>, TrUserData).


encode_msg_CommandMessage(#{consumer_id := F1,
                            message_id := F2} =
                              M,
                          Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_mfield_CommandMessage_message_id(TrF2,
                                                <<B1/binary, 18>>,
                                                TrUserData)
         end,
    B3 = case M of
             #{redelivery_count := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    case M of
        #{ack_set := F4} ->
            TrF4 = id(F4, TrUserData),
            if TrF4 == [] -> B3;
               true ->
                   e_field_CommandMessage_ack_set(TrF4, B3, TrUserData)
            end;
        _ -> B3
    end.

encode_msg_CommandAck(Msg, TrUserData) ->
    encode_msg_CommandAck(Msg, <<>>, TrUserData).


encode_msg_CommandAck(#{consumer_id := F1,
                        ack_type := F2} =
                          M,
                      Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             'e_enum_CommandAck.AckType'(TrF2,
                                         <<B1/binary, 16>>,
                                         TrUserData)
         end,
    B3 = case M of
             #{message_id := F3} ->
                 TrF3 = id(F3, TrUserData),
                 if TrF3 == [] -> B2;
                    true ->
                        e_field_CommandAck_message_id(TrF3, B2, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{validation_error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     'e_enum_CommandAck.ValidationError'(TrF4,
                                                         <<B3/binary, 32>>,
                                                         TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{properties := F5} ->
                 TrF5 = id(F5, TrUserData),
                 if TrF5 == [] -> B4;
                    true ->
                        e_field_CommandAck_properties(TrF5, B4, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{txnid_least_bits := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_varint(TrF6, <<B5/binary, 48>>, TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{txnid_most_bits := F7} ->
                 begin
                     TrF7 = id(F7, TrUserData),
                     e_varint(TrF7, <<B6/binary, 56>>, TrUserData)
                 end;
             _ -> B6
         end,
    case M of
        #{request_id := F8} ->
            begin
                TrF8 = id(F8, TrUserData),
                e_varint(TrF8, <<B7/binary, 64>>, TrUserData)
            end;
        _ -> B7
    end.

encode_msg_CommandAckResponse(Msg, TrUserData) ->
    encode_msg_CommandAckResponse(Msg, <<>>, TrUserData).


encode_msg_CommandAckResponse(#{consumer_id := F1} = M,
                              Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_ServerError(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{message := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
                 end;
             _ -> B4
         end,
    case M of
        #{request_id := F6} ->
            begin
                TrF6 = id(F6, TrUserData),
                e_varint(TrF6, <<B5/binary, 48>>, TrUserData)
            end;
        _ -> B5
    end.

encode_msg_CommandActiveConsumerChange(Msg,
                                       TrUserData) ->
    encode_msg_CommandActiveConsumerChange(Msg,
                                           <<>>,
                                           TrUserData).


encode_msg_CommandActiveConsumerChange(#{consumer_id :=
                                             F1} =
                                           M,
                                       Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    case M of
        #{is_active := F2} ->
            begin
                TrF2 = id(F2, TrUserData),
                e_type_bool(TrF2, <<B1/binary, 16>>, TrUserData)
            end;
        _ -> B1
    end.

encode_msg_CommandFlow(Msg, TrUserData) ->
    encode_msg_CommandFlow(Msg, <<>>, TrUserData).


encode_msg_CommandFlow(#{consumer_id := F1,
                         messagePermits := F2},
                       Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
    end.

encode_msg_CommandUnsubscribe(Msg, TrUserData) ->
    encode_msg_CommandUnsubscribe(Msg, <<>>, TrUserData).


encode_msg_CommandUnsubscribe(#{consumer_id := F1,
                                request_id := F2},
                              Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
    end.

encode_msg_CommandSeek(Msg, TrUserData) ->
    encode_msg_CommandSeek(Msg, <<>>, TrUserData).


encode_msg_CommandSeek(#{consumer_id := F1,
                         request_id := F2} =
                           M,
                       Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    B3 = case M of
             #{message_id := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_mfield_CommandSeek_message_id(TrF3,
                                                     <<B2/binary, 26>>,
                                                     TrUserData)
                 end;
             _ -> B2
         end,
    case M of
        #{message_publish_time := F4} ->
            begin
                TrF4 = id(F4, TrUserData),
                e_varint(TrF4, <<B3/binary, 32>>, TrUserData)
            end;
        _ -> B3
    end.

encode_msg_CommandReachedEndOfTopic(Msg, TrUserData) ->
    encode_msg_CommandReachedEndOfTopic(Msg,
                                        <<>>,
                                        TrUserData).


encode_msg_CommandReachedEndOfTopic(#{consumer_id :=
                                          F1},
                                    Bin, TrUserData) ->
    begin
        TrF1 = id(F1, TrUserData),
        e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
    end.

encode_msg_CommandCloseProducer(Msg, TrUserData) ->
    encode_msg_CommandCloseProducer(Msg, <<>>, TrUserData).


encode_msg_CommandCloseProducer(#{producer_id := F1,
                                  request_id := F2},
                                Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
    end.

encode_msg_CommandCloseConsumer(Msg, TrUserData) ->
    encode_msg_CommandCloseConsumer(Msg, <<>>, TrUserData).


encode_msg_CommandCloseConsumer(#{consumer_id := F1,
                                  request_id := F2},
                                Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
    end.

encode_msg_CommandRedeliverUnacknowledgedMessages(Msg,
                                                  TrUserData) ->
    encode_msg_CommandRedeliverUnacknowledgedMessages(Msg,
                                                      <<>>,
                                                      TrUserData).


encode_msg_CommandRedeliverUnacknowledgedMessages(#{consumer_id
                                                        := F1} =
                                                      M,
                                                  Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    case M of
        #{message_ids := F2} ->
            TrF2 = id(F2, TrUserData),
            if TrF2 == [] -> B1;
               true ->
                   e_field_CommandRedeliverUnacknowledgedMessages_message_ids(TrF2,
                                                                              B1,
                                                                              TrUserData)
            end;
        _ -> B1
    end.

encode_msg_CommandSuccess(Msg, TrUserData) ->
    encode_msg_CommandSuccess(Msg, <<>>, TrUserData).


encode_msg_CommandSuccess(#{request_id := F1} = M, Bin,
                          TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    case M of
        #{schema := F2} ->
            begin
                TrF2 = id(F2, TrUserData),
                e_mfield_CommandSuccess_schema(TrF2,
                                               <<B1/binary, 18>>,
                                               TrUserData)
            end;
        _ -> B1
    end.

encode_msg_CommandProducerSuccess(Msg, TrUserData) ->
    encode_msg_CommandProducerSuccess(Msg,
                                      <<>>,
                                      TrUserData).


encode_msg_CommandProducerSuccess(#{request_id := F1,
                                    producer_name := F2} =
                                      M,
                                  Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
         end,
    B3 = case M of
             #{last_sequence_id := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_int64(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    case M of
        #{schema_version := F4} ->
            begin
                TrF4 = id(F4, TrUserData),
                e_type_bytes(TrF4, <<B3/binary, 34>>, TrUserData)
            end;
        _ -> B3
    end.

encode_msg_CommandError(Msg, TrUserData) ->
    encode_msg_CommandError(Msg, <<>>, TrUserData).


encode_msg_CommandError(#{request_id := F1, error := F2,
                          message := F3},
                        Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_enum_ServerError(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    begin
        TrF3 = id(F3, TrUserData),
        e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
    end.

encode_msg_CommandPing(_Msg, _TrUserData) -> <<>>.

encode_msg_CommandPong(_Msg, _TrUserData) -> <<>>.

encode_msg_CommandConsumerStats(Msg, TrUserData) ->
    encode_msg_CommandConsumerStats(Msg, <<>>, TrUserData).


encode_msg_CommandConsumerStats(#{request_id := F1,
                                  consumer_id := F2},
                                Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_varint(TrF2, <<B1/binary, 32>>, TrUserData)
    end.

encode_msg_CommandConsumerStatsResponse(Msg,
                                        TrUserData) ->
    encode_msg_CommandConsumerStatsResponse(Msg,
                                            <<>>,
                                            TrUserData).


encode_msg_CommandConsumerStatsResponse(#{request_id :=
                                              F1} =
                                            M,
                                        Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{error_code := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_enum_ServerError(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{error_message := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{msgRateOut := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_type_double(TrF4, <<B3/binary, 33>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{msgThroughputOut := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_type_double(TrF5, <<B4/binary, 41>>, TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{msgRateRedeliver := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_type_double(TrF6, <<B5/binary, 49>>, TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{consumerName := F7} ->
                 begin
                     TrF7 = id(F7, TrUserData),
                     e_type_string(TrF7, <<B6/binary, 58>>, TrUserData)
                 end;
             _ -> B6
         end,
    B8 = case M of
             #{availablePermits := F8} ->
                 begin
                     TrF8 = id(F8, TrUserData),
                     e_varint(TrF8, <<B7/binary, 64>>, TrUserData)
                 end;
             _ -> B7
         end,
    B9 = case M of
             #{unackedMessages := F9} ->
                 begin
                     TrF9 = id(F9, TrUserData),
                     e_varint(TrF9, <<B8/binary, 72>>, TrUserData)
                 end;
             _ -> B8
         end,
    B10 = case M of
              #{blockedConsumerOnUnackedMsgs := F10} ->
                  begin
                      TrF10 = id(F10, TrUserData),
                      e_type_bool(TrF10, <<B9/binary, 80>>, TrUserData)
                  end;
              _ -> B9
          end,
    B11 = case M of
              #{address := F11} ->
                  begin
                      TrF11 = id(F11, TrUserData),
                      e_type_string(TrF11, <<B10/binary, 90>>, TrUserData)
                  end;
              _ -> B10
          end,
    B12 = case M of
              #{connectedSince := F12} ->
                  begin
                      TrF12 = id(F12, TrUserData),
                      e_type_string(TrF12, <<B11/binary, 98>>, TrUserData)
                  end;
              _ -> B11
          end,
    B13 = case M of
              #{type := F13} ->
                  begin
                      TrF13 = id(F13, TrUserData),
                      e_type_string(TrF13, <<B12/binary, 106>>, TrUserData)
                  end;
              _ -> B12
          end,
    B14 = case M of
              #{msgRateExpired := F14} ->
                  begin
                      TrF14 = id(F14, TrUserData),
                      e_type_double(TrF14, <<B13/binary, 113>>, TrUserData)
                  end;
              _ -> B13
          end,
    case M of
        #{msgBacklog := F15} ->
            begin
                TrF15 = id(F15, TrUserData),
                e_varint(TrF15, <<B14/binary, 120>>, TrUserData)
            end;
        _ -> B14
    end.

encode_msg_CommandGetLastMessageId(Msg, TrUserData) ->
    encode_msg_CommandGetLastMessageId(Msg,
                                       <<>>,
                                       TrUserData).


encode_msg_CommandGetLastMessageId(#{consumer_id := F1,
                                     request_id := F2},
                                   Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
    end.

encode_msg_CommandGetLastMessageIdResponse(Msg,
                                           TrUserData) ->
    encode_msg_CommandGetLastMessageIdResponse(Msg,
                                               <<>>,
                                               TrUserData).


encode_msg_CommandGetLastMessageIdResponse(#{last_message_id
                                                 := F1,
                                             request_id := F2} =
                                               M,
                                           Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_mfield_CommandGetLastMessageIdResponse_last_message_id(TrF1,
                                                                      <<Bin/binary,
                                                                        10>>,
                                                                      TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
         end,
    case M of
        #{consumer_mark_delete_position := F3} ->
            begin
                TrF3 = id(F3, TrUserData),
                e_mfield_CommandGetLastMessageIdResponse_consumer_mark_delete_position(TrF3,
                                                                                       <<B2/binary,
                                                                                         26>>,
                                                                                       TrUserData)
            end;
        _ -> B2
    end.

encode_msg_CommandGetTopicsOfNamespace(Msg,
                                       TrUserData) ->
    encode_msg_CommandGetTopicsOfNamespace(Msg,
                                           <<>>,
                                           TrUserData).


encode_msg_CommandGetTopicsOfNamespace(#{request_id :=
                                             F1,
                                         namespace := F2} =
                                           M,
                                       Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
         end,
    case M of
        #{mode := F3} ->
            begin
                TrF3 = id(F3, TrUserData),
                'e_enum_CommandGetTopicsOfNamespace.Mode'(TrF3,
                                                          <<B2/binary, 24>>,
                                                          TrUserData)
            end;
        _ -> B2
    end.

encode_msg_CommandGetTopicsOfNamespaceResponse(Msg,
                                               TrUserData) ->
    encode_msg_CommandGetTopicsOfNamespaceResponse(Msg,
                                                   <<>>,
                                                   TrUserData).


encode_msg_CommandGetTopicsOfNamespaceResponse(#{request_id
                                                     := F1} =
                                                   M,
                                               Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    case M of
        #{topics := F2} ->
            TrF2 = id(F2, TrUserData),
            if TrF2 == [] -> B1;
               true ->
                   e_field_CommandGetTopicsOfNamespaceResponse_topics(TrF2,
                                                                      B1,
                                                                      TrUserData)
            end;
        _ -> B1
    end.

encode_msg_CommandGetSchema(Msg, TrUserData) ->
    encode_msg_CommandGetSchema(Msg, <<>>, TrUserData).


encode_msg_CommandGetSchema(#{request_id := F1,
                              topic := F2} =
                                M,
                            Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
         end,
    case M of
        #{schema_version := F3} ->
            begin
                TrF3 = id(F3, TrUserData),
                e_type_bytes(TrF3, <<B2/binary, 26>>, TrUserData)
            end;
        _ -> B2
    end.

encode_msg_CommandGetSchemaResponse(Msg, TrUserData) ->
    encode_msg_CommandGetSchemaResponse(Msg,
                                        <<>>,
                                        TrUserData).


encode_msg_CommandGetSchemaResponse(#{request_id :=
                                          F1} =
                                        M,
                                    Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{error_code := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_enum_ServerError(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{error_message := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{schema := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_mfield_CommandGetSchemaResponse_schema(TrF4,
                                                              <<B3/binary, 34>>,
                                                              TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{schema_version := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_bytes(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandGetOrCreateSchema(Msg, TrUserData) ->
    encode_msg_CommandGetOrCreateSchema(Msg,
                                        <<>>,
                                        TrUserData).


encode_msg_CommandGetOrCreateSchema(#{request_id := F1,
                                      topic := F2, schema := F3},
                                    Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
         end,
    begin
        TrF3 = id(F3, TrUserData),
        e_mfield_CommandGetOrCreateSchema_schema(TrF3,
                                                 <<B2/binary, 26>>,
                                                 TrUserData)
    end.

encode_msg_CommandGetOrCreateSchemaResponse(Msg,
                                            TrUserData) ->
    encode_msg_CommandGetOrCreateSchemaResponse(Msg,
                                                <<>>,
                                                TrUserData).


encode_msg_CommandGetOrCreateSchemaResponse(#{request_id
                                                  := F1} =
                                                M,
                                            Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{error_code := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_enum_ServerError(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{error_message := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
                 end;
             _ -> B2
         end,
    case M of
        #{schema_version := F4} ->
            begin
                TrF4 = id(F4, TrUserData),
                e_type_bytes(TrF4, <<B3/binary, 34>>, TrUserData)
            end;
        _ -> B3
    end.

encode_msg_CommandNewTxn(Msg, TrUserData) ->
    encode_msg_CommandNewTxn(Msg, <<>>, TrUserData).


encode_msg_CommandNewTxn(#{request_id := F1} = M, Bin,
                         TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txn_ttl_seconds := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    case M of
        #{tc_id := F3} ->
            begin
                TrF3 = id(F3, TrUserData),
                e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
            end;
        _ -> B2
    end.

encode_msg_CommandNewTxnResponse(Msg, TrUserData) ->
    encode_msg_CommandNewTxnResponse(Msg, <<>>, TrUserData).


encode_msg_CommandNewTxnResponse(#{request_id := F1} =
                                     M,
                                 Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_ServerError(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{message := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandAddPartitionToTxn(Msg, TrUserData) ->
    encode_msg_CommandAddPartitionToTxn(Msg,
                                        <<>>,
                                        TrUserData).


encode_msg_CommandAddPartitionToTxn(#{request_id :=
                                          F1} =
                                        M,
                                    Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    case M of
        #{partitions := F4} ->
            TrF4 = id(F4, TrUserData),
            if TrF4 == [] -> B3;
               true ->
                   e_field_CommandAddPartitionToTxn_partitions(TrF4,
                                                               B3,
                                                               TrUserData)
            end;
        _ -> B3
    end.

encode_msg_CommandAddPartitionToTxnResponse(Msg,
                                            TrUserData) ->
    encode_msg_CommandAddPartitionToTxnResponse(Msg,
                                                <<>>,
                                                TrUserData).


encode_msg_CommandAddPartitionToTxnResponse(#{request_id
                                                  := F1} =
                                                M,
                                            Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_ServerError(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{message := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_Subscription(Msg, TrUserData) ->
    encode_msg_Subscription(Msg, <<>>, TrUserData).


encode_msg_Subscription(#{topic := F1,
                          subscription := F2},
                        Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
         end,
    begin
        TrF2 = id(F2, TrUserData),
        e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
    end.

encode_msg_CommandAddSubscriptionToTxn(Msg,
                                       TrUserData) ->
    encode_msg_CommandAddSubscriptionToTxn(Msg,
                                           <<>>,
                                           TrUserData).


encode_msg_CommandAddSubscriptionToTxn(#{request_id :=
                                             F1} =
                                           M,
                                       Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    case M of
        #{subscription := F4} ->
            TrF4 = id(F4, TrUserData),
            if TrF4 == [] -> B3;
               true ->
                   e_field_CommandAddSubscriptionToTxn_subscription(TrF4,
                                                                    B3,
                                                                    TrUserData)
            end;
        _ -> B3
    end.

encode_msg_CommandAddSubscriptionToTxnResponse(Msg,
                                               TrUserData) ->
    encode_msg_CommandAddSubscriptionToTxnResponse(Msg,
                                                   <<>>,
                                                   TrUserData).


encode_msg_CommandAddSubscriptionToTxnResponse(#{request_id
                                                     := F1} =
                                                   M,
                                               Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_ServerError(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{message := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandEndTxn(Msg, TrUserData) ->
    encode_msg_CommandEndTxn(Msg, <<>>, TrUserData).


encode_msg_CommandEndTxn(#{request_id := F1} = M, Bin,
                         TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{txn_action := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_TxnAction(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{message_id := F5} ->
            TrF5 = id(F5, TrUserData),
            if TrF5 == [] -> B4;
               true ->
                   e_field_CommandEndTxn_message_id(TrF5, B4, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandEndTxnResponse(Msg, TrUserData) ->
    encode_msg_CommandEndTxnResponse(Msg, <<>>, TrUserData).


encode_msg_CommandEndTxnResponse(#{request_id := F1} =
                                     M,
                                 Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_ServerError(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{message := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandEndTxnOnPartition(Msg, TrUserData) ->
    encode_msg_CommandEndTxnOnPartition(Msg,
                                        <<>>,
                                        TrUserData).


encode_msg_CommandEndTxnOnPartition(#{request_id :=
                                          F1} =
                                        M,
                                    Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{topic := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{txn_action := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_enum_TxnAction(TrF5, <<B4/binary, 40>>, TrUserData)
                 end;
             _ -> B4
         end,
    case M of
        #{message_id := F6} ->
            TrF6 = id(F6, TrUserData),
            if TrF6 == [] -> B5;
               true ->
                   e_field_CommandEndTxnOnPartition_message_id(TrF6,
                                                               B5,
                                                               TrUserData)
            end;
        _ -> B5
    end.

encode_msg_CommandEndTxnOnPartitionResponse(Msg,
                                            TrUserData) ->
    encode_msg_CommandEndTxnOnPartitionResponse(Msg,
                                                <<>>,
                                                TrUserData).


encode_msg_CommandEndTxnOnPartitionResponse(#{request_id
                                                  := F1} =
                                                M,
                                            Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_ServerError(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{message := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandEndTxnOnSubscription(Msg,
                                       TrUserData) ->
    encode_msg_CommandEndTxnOnSubscription(Msg,
                                           <<>>,
                                           TrUserData).


encode_msg_CommandEndTxnOnSubscription(#{request_id :=
                                             F1} =
                                           M,
                                       Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{subscription := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_mfield_CommandEndTxnOnSubscription_subscription(TrF4,
                                                                       <<B3/binary,
                                                                         34>>,
                                                                       TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{txn_action := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_enum_TxnAction(TrF5, <<B4/binary, 40>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_CommandEndTxnOnSubscriptionResponse(Msg,
                                               TrUserData) ->
    encode_msg_CommandEndTxnOnSubscriptionResponse(Msg,
                                                   <<>>,
                                                   TrUserData).


encode_msg_CommandEndTxnOnSubscriptionResponse(#{request_id
                                                     := F1} =
                                                   M,
                                               Bin, TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
         end,
    B2 = case M of
             #{txnid_least_bits := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{txnid_most_bits := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{error := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_enum_ServerError(TrF4, <<B3/binary, 32>>, TrUserData)
                 end;
             _ -> B3
         end,
    case M of
        #{message := F5} ->
            begin
                TrF5 = id(F5, TrUserData),
                e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
            end;
        _ -> B4
    end.

encode_msg_BaseCommand(Msg, TrUserData) ->
    encode_msg_BaseCommand(Msg, <<>>, TrUserData).


encode_msg_BaseCommand(#{type := F1} = M, Bin,
                       TrUserData) ->
    B1 = begin
             TrF1 = id(F1, TrUserData),
             'e_enum_BaseCommand.Type'(TrF1,
                                       <<Bin/binary, 8>>,
                                       TrUserData)
         end,
    B2 = case M of
             #{connect := F2} ->
                 begin
                     TrF2 = id(F2, TrUserData),
                     e_mfield_BaseCommand_connect(TrF2,
                                                  <<B1/binary, 18>>,
                                                  TrUserData)
                 end;
             _ -> B1
         end,
    B3 = case M of
             #{connected := F3} ->
                 begin
                     TrF3 = id(F3, TrUserData),
                     e_mfield_BaseCommand_connected(TrF3,
                                                    <<B2/binary, 26>>,
                                                    TrUserData)
                 end;
             _ -> B2
         end,
    B4 = case M of
             #{subscribe := F4} ->
                 begin
                     TrF4 = id(F4, TrUserData),
                     e_mfield_BaseCommand_subscribe(TrF4,
                                                    <<B3/binary, 34>>,
                                                    TrUserData)
                 end;
             _ -> B3
         end,
    B5 = case M of
             #{producer := F5} ->
                 begin
                     TrF5 = id(F5, TrUserData),
                     e_mfield_BaseCommand_producer(TrF5,
                                                   <<B4/binary, 42>>,
                                                   TrUserData)
                 end;
             _ -> B4
         end,
    B6 = case M of
             #{send := F6} ->
                 begin
                     TrF6 = id(F6, TrUserData),
                     e_mfield_BaseCommand_send(TrF6,
                                               <<B5/binary, 50>>,
                                               TrUserData)
                 end;
             _ -> B5
         end,
    B7 = case M of
             #{send_receipt := F7} ->
                 begin
                     TrF7 = id(F7, TrUserData),
                     e_mfield_BaseCommand_send_receipt(TrF7,
                                                       <<B6/binary, 58>>,
                                                       TrUserData)
                 end;
             _ -> B6
         end,
    B8 = case M of
             #{send_error := F8} ->
                 begin
                     TrF8 = id(F8, TrUserData),
                     e_mfield_BaseCommand_send_error(TrF8,
                                                     <<B7/binary, 66>>,
                                                     TrUserData)
                 end;
             _ -> B7
         end,
    B9 = case M of
             #{message := F9} ->
                 begin
                     TrF9 = id(F9, TrUserData),
                     e_mfield_BaseCommand_message(TrF9,
                                                  <<B8/binary, 74>>,
                                                  TrUserData)
                 end;
             _ -> B8
         end,
    B10 = case M of
              #{ack := F10} ->
                  begin
                      TrF10 = id(F10, TrUserData),
                      e_mfield_BaseCommand_ack(TrF10,
                                               <<B9/binary, 82>>,
                                               TrUserData)
                  end;
              _ -> B9
          end,
    B11 = case M of
              #{flow := F11} ->
                  begin
                      TrF11 = id(F11, TrUserData),
                      e_mfield_BaseCommand_flow(TrF11,
                                                <<B10/binary, 90>>,
                                                TrUserData)
                  end;
              _ -> B10
          end,
    B12 = case M of
              #{unsubscribe := F12} ->
                  begin
                      TrF12 = id(F12, TrUserData),
                      e_mfield_BaseCommand_unsubscribe(TrF12,
                                                       <<B11/binary, 98>>,
                                                       TrUserData)
                  end;
              _ -> B11
          end,
    B13 = case M of
              #{success := F13} ->
                  begin
                      TrF13 = id(F13, TrUserData),
                      e_mfield_BaseCommand_success(TrF13,
                                                   <<B12/binary, 106>>,
                                                   TrUserData)
                  end;
              _ -> B12
          end,
    B14 = case M of
              #{error := F14} ->
                  begin
                      TrF14 = id(F14, TrUserData),
                      e_mfield_BaseCommand_error(TrF14,
                                                 <<B13/binary, 114>>,
                                                 TrUserData)
                  end;
              _ -> B13
          end,
    B15 = case M of
              #{close_producer := F15} ->
                  begin
                      TrF15 = id(F15, TrUserData),
                      e_mfield_BaseCommand_close_producer(TrF15,
                                                          <<B14/binary, 122>>,
                                                          TrUserData)
                  end;
              _ -> B14
          end,
    B16 = case M of
              #{close_consumer := F16} ->
                  begin
                      TrF16 = id(F16, TrUserData),
                      e_mfield_BaseCommand_close_consumer(TrF16,
                                                          <<B15/binary, 130,
                                                            1>>,
                                                          TrUserData)
                  end;
              _ -> B15
          end,
    B17 = case M of
              #{producer_success := F17} ->
                  begin
                      TrF17 = id(F17, TrUserData),
                      e_mfield_BaseCommand_producer_success(TrF17,
                                                            <<B16/binary, 138,
                                                              1>>,
                                                            TrUserData)
                  end;
              _ -> B16
          end,
    B18 = case M of
              #{ping := F18} ->
                  begin
                      TrF18 = id(F18, TrUserData),
                      e_mfield_BaseCommand_ping(TrF18,
                                                <<B17/binary, 146, 1>>,
                                                TrUserData)
                  end;
              _ -> B17
          end,
    B19 = case M of
              #{pong := F19} ->
                  begin
                      TrF19 = id(F19, TrUserData),
                      e_mfield_BaseCommand_pong(TrF19,
                                                <<B18/binary, 154, 1>>,
                                                TrUserData)
                  end;
              _ -> B18
          end,
    B20 = case M of
              #{redeliverUnacknowledgedMessages := F20} ->
                  begin
                      TrF20 = id(F20, TrUserData),
                      e_mfield_BaseCommand_redeliverUnacknowledgedMessages(TrF20,
                                                                           <<B19/binary,
                                                                             162,
                                                                             1>>,
                                                                           TrUserData)
                  end;
              _ -> B19
          end,
    B21 = case M of
              #{partitionMetadata := F21} ->
                  begin
                      TrF21 = id(F21, TrUserData),
                      e_mfield_BaseCommand_partitionMetadata(TrF21,
                                                             <<B20/binary, 170,
                                                               1>>,
                                                             TrUserData)
                  end;
              _ -> B20
          end,
    B22 = case M of
              #{partitionMetadataResponse := F22} ->
                  begin
                      TrF22 = id(F22, TrUserData),
                      e_mfield_BaseCommand_partitionMetadataResponse(TrF22,
                                                                     <<B21/binary,
                                                                       178, 1>>,
                                                                     TrUserData)
                  end;
              _ -> B21
          end,
    B23 = case M of
              #{lookupTopic := F23} ->
                  begin
                      TrF23 = id(F23, TrUserData),
                      e_mfield_BaseCommand_lookupTopic(TrF23,
                                                       <<B22/binary, 186, 1>>,
                                                       TrUserData)
                  end;
              _ -> B22
          end,
    B24 = case M of
              #{lookupTopicResponse := F24} ->
                  begin
                      TrF24 = id(F24, TrUserData),
                      e_mfield_BaseCommand_lookupTopicResponse(TrF24,
                                                               <<B23/binary,
                                                                 194, 1>>,
                                                               TrUserData)
                  end;
              _ -> B23
          end,
    B25 = case M of
              #{consumerStats := F25} ->
                  begin
                      TrF25 = id(F25, TrUserData),
                      e_mfield_BaseCommand_consumerStats(TrF25,
                                                         <<B24/binary, 202, 1>>,
                                                         TrUserData)
                  end;
              _ -> B24
          end,
    B26 = case M of
              #{consumerStatsResponse := F26} ->
                  begin
                      TrF26 = id(F26, TrUserData),
                      e_mfield_BaseCommand_consumerStatsResponse(TrF26,
                                                                 <<B25/binary,
                                                                   210, 1>>,
                                                                 TrUserData)
                  end;
              _ -> B25
          end,
    B27 = case M of
              #{reachedEndOfTopic := F27} ->
                  begin
                      TrF27 = id(F27, TrUserData),
                      e_mfield_BaseCommand_reachedEndOfTopic(TrF27,
                                                             <<B26/binary, 218,
                                                               1>>,
                                                             TrUserData)
                  end;
              _ -> B26
          end,
    B28 = case M of
              #{seek := F28} ->
                  begin
                      TrF28 = id(F28, TrUserData),
                      e_mfield_BaseCommand_seek(TrF28,
                                                <<B27/binary, 226, 1>>,
                                                TrUserData)
                  end;
              _ -> B27
          end,
    B29 = case M of
              #{getLastMessageId := F29} ->
                  begin
                      TrF29 = id(F29, TrUserData),
                      e_mfield_BaseCommand_getLastMessageId(TrF29,
                                                            <<B28/binary, 234,
                                                              1>>,
                                                            TrUserData)
                  end;
              _ -> B28
          end,
    B30 = case M of
              #{getLastMessageIdResponse := F30} ->
                  begin
                      TrF30 = id(F30, TrUserData),
                      e_mfield_BaseCommand_getLastMessageIdResponse(TrF30,
                                                                    <<B29/binary,
                                                                      242, 1>>,
                                                                    TrUserData)
                  end;
              _ -> B29
          end,
    B31 = case M of
              #{active_consumer_change := F31} ->
                  begin
                      TrF31 = id(F31, TrUserData),
                      e_mfield_BaseCommand_active_consumer_change(TrF31,
                                                                  <<B30/binary,
                                                                    250, 1>>,
                                                                  TrUserData)
                  end;
              _ -> B30
          end,
    B32 = case M of
              #{getTopicsOfNamespace := F32} ->
                  begin
                      TrF32 = id(F32, TrUserData),
                      e_mfield_BaseCommand_getTopicsOfNamespace(TrF32,
                                                                <<B31/binary,
                                                                  130, 2>>,
                                                                TrUserData)
                  end;
              _ -> B31
          end,
    B33 = case M of
              #{getTopicsOfNamespaceResponse := F33} ->
                  begin
                      TrF33 = id(F33, TrUserData),
                      e_mfield_BaseCommand_getTopicsOfNamespaceResponse(TrF33,
                                                                        <<B32/binary,
                                                                          138,
                                                                          2>>,
                                                                        TrUserData)
                  end;
              _ -> B32
          end,
    B34 = case M of
              #{getSchema := F34} ->
                  begin
                      TrF34 = id(F34, TrUserData),
                      e_mfield_BaseCommand_getSchema(TrF34,
                                                     <<B33/binary, 146, 2>>,
                                                     TrUserData)
                  end;
              _ -> B33
          end,
    B35 = case M of
              #{getSchemaResponse := F35} ->
                  begin
                      TrF35 = id(F35, TrUserData),
                      e_mfield_BaseCommand_getSchemaResponse(TrF35,
                                                             <<B34/binary, 154,
                                                               2>>,
                                                             TrUserData)
                  end;
              _ -> B34
          end,
    B36 = case M of
              #{authChallenge := F36} ->
                  begin
                      TrF36 = id(F36, TrUserData),
                      e_mfield_BaseCommand_authChallenge(TrF36,
                                                         <<B35/binary, 162, 2>>,
                                                         TrUserData)
                  end;
              _ -> B35
          end,
    B37 = case M of
              #{authResponse := F37} ->
                  begin
                      TrF37 = id(F37, TrUserData),
                      e_mfield_BaseCommand_authResponse(TrF37,
                                                        <<B36/binary, 170, 2>>,
                                                        TrUserData)
                  end;
              _ -> B36
          end,
    B38 = case M of
              #{ackResponse := F38} ->
                  begin
                      TrF38 = id(F38, TrUserData),
                      e_mfield_BaseCommand_ackResponse(TrF38,
                                                       <<B37/binary, 178, 2>>,
                                                       TrUserData)
                  end;
              _ -> B37
          end,
    B39 = case M of
              #{getOrCreateSchema := F39} ->
                  begin
                      TrF39 = id(F39, TrUserData),
                      e_mfield_BaseCommand_getOrCreateSchema(TrF39,
                                                             <<B38/binary, 186,
                                                               2>>,
                                                             TrUserData)
                  end;
              _ -> B38
          end,
    B40 = case M of
              #{getOrCreateSchemaResponse := F40} ->
                  begin
                      TrF40 = id(F40, TrUserData),
                      e_mfield_BaseCommand_getOrCreateSchemaResponse(TrF40,
                                                                     <<B39/binary,
                                                                       194, 2>>,
                                                                     TrUserData)
                  end;
              _ -> B39
          end,
    B41 = case M of
              #{newTxn := F41} ->
                  begin
                      TrF41 = id(F41, TrUserData),
                      e_mfield_BaseCommand_newTxn(TrF41,
                                                  <<B40/binary, 146, 3>>,
                                                  TrUserData)
                  end;
              _ -> B40
          end,
    B42 = case M of
              #{newTxnResponse := F42} ->
                  begin
                      TrF42 = id(F42, TrUserData),
                      e_mfield_BaseCommand_newTxnResponse(TrF42,
                                                          <<B41/binary, 154,
                                                            3>>,
                                                          TrUserData)
                  end;
              _ -> B41
          end,
    B43 = case M of
              #{addPartitionToTxn := F43} ->
                  begin
                      TrF43 = id(F43, TrUserData),
                      e_mfield_BaseCommand_addPartitionToTxn(TrF43,
                                                             <<B42/binary, 162,
                                                               3>>,
                                                             TrUserData)
                  end;
              _ -> B42
          end,
    B44 = case M of
              #{addPartitionToTxnResponse := F44} ->
                  begin
                      TrF44 = id(F44, TrUserData),
                      e_mfield_BaseCommand_addPartitionToTxnResponse(TrF44,
                                                                     <<B43/binary,
                                                                       170, 3>>,
                                                                     TrUserData)
                  end;
              _ -> B43
          end,
    B45 = case M of
              #{addSubscriptionToTxn := F45} ->
                  begin
                      TrF45 = id(F45, TrUserData),
                      e_mfield_BaseCommand_addSubscriptionToTxn(TrF45,
                                                                <<B44/binary,
                                                                  178, 3>>,
                                                                TrUserData)
                  end;
              _ -> B44
          end,
    B46 = case M of
              #{addSubscriptionToTxnResponse := F46} ->
                  begin
                      TrF46 = id(F46, TrUserData),
                      e_mfield_BaseCommand_addSubscriptionToTxnResponse(TrF46,
                                                                        <<B45/binary,
                                                                          186,
                                                                          3>>,
                                                                        TrUserData)
                  end;
              _ -> B45
          end,
    B47 = case M of
              #{endTxn := F47} ->
                  begin
                      TrF47 = id(F47, TrUserData),
                      e_mfield_BaseCommand_endTxn(TrF47,
                                                  <<B46/binary, 194, 3>>,
                                                  TrUserData)
                  end;
              _ -> B46
          end,
    B48 = case M of
              #{endTxnResponse := F48} ->
                  begin
                      TrF48 = id(F48, TrUserData),
                      e_mfield_BaseCommand_endTxnResponse(TrF48,
                                                          <<B47/binary, 202,
                                                            3>>,
                                                          TrUserData)
                  end;
              _ -> B47
          end,
    B49 = case M of
              #{endTxnOnPartition := F49} ->
                  begin
                      TrF49 = id(F49, TrUserData),
                      e_mfield_BaseCommand_endTxnOnPartition(TrF49,
                                                             <<B48/binary, 210,
                                                               3>>,
                                                             TrUserData)
                  end;
              _ -> B48
          end,
    B50 = case M of
              #{endTxnOnPartitionResponse := F50} ->
                  begin
                      TrF50 = id(F50, TrUserData),
                      e_mfield_BaseCommand_endTxnOnPartitionResponse(TrF50,
                                                                     <<B49/binary,
                                                                       218, 3>>,
                                                                     TrUserData)
                  end;
              _ -> B49
          end,
    B51 = case M of
              #{endTxnOnSubscription := F51} ->
                  begin
                      TrF51 = id(F51, TrUserData),
                      e_mfield_BaseCommand_endTxnOnSubscription(TrF51,
                                                                <<B50/binary,
                                                                  226, 3>>,
                                                                TrUserData)
                  end;
              _ -> B50
          end,
    case M of
        #{endTxnOnSubscriptionResponse := F52} ->
            begin
                TrF52 = id(F52, TrUserData),
                e_mfield_BaseCommand_endTxnOnSubscriptionResponse(TrF52,
                                                                  <<B51/binary,
                                                                    234, 3>>,
                                                                  TrUserData)
            end;
        _ -> B51
    end.

e_mfield_Schema_properties(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_KeyValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_Schema_properties([Elem | Rest], Bin,
                          TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 = e_mfield_Schema_properties(id(Elem, TrUserData),
                                      Bin2,
                                      TrUserData),
    e_field_Schema_properties(Rest, Bin3, TrUserData);
e_field_Schema_properties([], Bin, _TrUserData) -> Bin.

e_field_MessageIdData_ack_set([Elem | Rest], Bin,
                              TrUserData) ->
    Bin2 = <<Bin/binary, 40>>,
    Bin3 = e_type_int64(id(Elem, TrUserData),
                        Bin2,
                        TrUserData),
    e_field_MessageIdData_ack_set(Rest, Bin3, TrUserData);
e_field_MessageIdData_ack_set([], Bin, _TrUserData) ->
    Bin.

e_mfield_EncryptionKeys_metadata(Msg, Bin,
                                 TrUserData) ->
    SubBin = encode_msg_KeyValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_EncryptionKeys_metadata([Elem | Rest], Bin,
                                TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_mfield_EncryptionKeys_metadata(id(Elem,
                                               TrUserData),
                                            Bin2,
                                            TrUserData),
    e_field_EncryptionKeys_metadata(Rest, Bin3, TrUserData);
e_field_EncryptionKeys_metadata([], Bin, _TrUserData) ->
    Bin.

e_mfield_MessageMetadata_properties(Msg, Bin,
                                    TrUserData) ->
    SubBin = encode_msg_KeyValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_MessageMetadata_properties([Elem | Rest], Bin,
                                   TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 = e_mfield_MessageMetadata_properties(id(Elem,
                                                  TrUserData),
                                               Bin2,
                                               TrUserData),
    e_field_MessageMetadata_properties(Rest,
                                       Bin3,
                                       TrUserData);
e_field_MessageMetadata_properties([], Bin,
                                   _TrUserData) ->
    Bin.

e_field_MessageMetadata_replicate_to([Elem | Rest], Bin,
                                     TrUserData) ->
    Bin2 = <<Bin/binary, 58>>,
    Bin3 = e_type_string(id(Elem, TrUserData),
                         Bin2,
                         TrUserData),
    e_field_MessageMetadata_replicate_to(Rest,
                                         Bin3,
                                         TrUserData);
e_field_MessageMetadata_replicate_to([], Bin,
                                     _TrUserData) ->
    Bin.

e_mfield_MessageMetadata_encryption_keys(Msg, Bin,
                                         TrUserData) ->
    SubBin = encode_msg_EncryptionKeys(Msg,
                                       <<>>,
                                       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_MessageMetadata_encryption_keys([Elem | Rest],
                                        Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 106>>,
    Bin3 = e_mfield_MessageMetadata_encryption_keys(id(Elem,
                                                       TrUserData),
                                                    Bin2,
                                                    TrUserData),
    e_field_MessageMetadata_encryption_keys(Rest,
                                            Bin3,
                                            TrUserData);
e_field_MessageMetadata_encryption_keys([], Bin,
                                        _TrUserData) ->
    Bin.

e_mfield_SingleMessageMetadata_properties(Msg, Bin,
                                          TrUserData) ->
    SubBin = encode_msg_KeyValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_SingleMessageMetadata_properties([Elem | Rest],
                                         Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 10>>,
    Bin3 =
        e_mfield_SingleMessageMetadata_properties(id(Elem,
                                                     TrUserData),
                                                  Bin2,
                                                  TrUserData),
    e_field_SingleMessageMetadata_properties(Rest,
                                             Bin3,
                                             TrUserData);
e_field_SingleMessageMetadata_properties([], Bin,
                                         _TrUserData) ->
    Bin.

e_mfield_CommandConnect_feature_flags(Msg, Bin,
                                      TrUserData) ->
    SubBin = encode_msg_FeatureFlags(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandAuthResponse_response(Msg, Bin,
                                      TrUserData) ->
    SubBin = encode_msg_AuthData(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandAuthChallenge_challenge(Msg, Bin,
                                        TrUserData) ->
    SubBin = encode_msg_AuthData(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_KeySharedMeta_hashRanges(Msg, Bin,
                                  TrUserData) ->
    SubBin = encode_msg_IntRange(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_KeySharedMeta_hashRanges([Elem | Rest], Bin,
                                 TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_mfield_KeySharedMeta_hashRanges(id(Elem,
                                                TrUserData),
                                             Bin2,
                                             TrUserData),
    e_field_KeySharedMeta_hashRanges(Rest,
                                     Bin3,
                                     TrUserData);
e_field_KeySharedMeta_hashRanges([], Bin,
                                 _TrUserData) ->
    Bin.

e_mfield_CommandSubscribe_start_message_id(Msg, Bin,
                                           TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandSubscribe_metadata(Msg, Bin,
                                   TrUserData) ->
    SubBin = encode_msg_KeyValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandSubscribe_metadata([Elem | Rest], Bin,
                                  TrUserData) ->
    Bin2 = <<Bin/binary, 82>>,
    Bin3 = e_mfield_CommandSubscribe_metadata(id(Elem,
                                                 TrUserData),
                                              Bin2,
                                              TrUserData),
    e_field_CommandSubscribe_metadata(Rest,
                                      Bin3,
                                      TrUserData);
e_field_CommandSubscribe_metadata([], Bin,
                                  _TrUserData) ->
    Bin.

e_mfield_CommandSubscribe_schema(Msg, Bin,
                                 TrUserData) ->
    SubBin = encode_msg_Schema(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandSubscribe_keySharedMeta(Msg, Bin,
                                        TrUserData) ->
    SubBin = encode_msg_KeySharedMeta(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandProducer_metadata(Msg, Bin,
                                  TrUserData) ->
    SubBin = encode_msg_KeyValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandProducer_metadata([Elem | Rest], Bin,
                                 TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 = e_mfield_CommandProducer_metadata(id(Elem,
                                                TrUserData),
                                             Bin2,
                                             TrUserData),
    e_field_CommandProducer_metadata(Rest,
                                     Bin3,
                                     TrUserData);
e_field_CommandProducer_metadata([], Bin,
                                 _TrUserData) ->
    Bin.

e_mfield_CommandProducer_schema(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_Schema(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandSendReceipt_message_id(Msg, Bin,
                                       TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandMessage_message_id(Msg, Bin,
                                   TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandMessage_ack_set([Elem | Rest], Bin,
                               TrUserData) ->
    Bin2 = <<Bin/binary, 32>>,
    Bin3 = e_type_int64(id(Elem, TrUserData),
                        Bin2,
                        TrUserData),
    e_field_CommandMessage_ack_set(Rest, Bin3, TrUserData);
e_field_CommandMessage_ack_set([], Bin, _TrUserData) ->
    Bin.

e_mfield_CommandAck_message_id(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandAck_message_id([Elem | Rest], Bin,
                              TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_mfield_CommandAck_message_id(id(Elem,
                                             TrUserData),
                                          Bin2,
                                          TrUserData),
    e_field_CommandAck_message_id(Rest, Bin3, TrUserData);
e_field_CommandAck_message_id([], Bin, _TrUserData) ->
    Bin.

e_mfield_CommandAck_properties(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_KeyLongValue(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandAck_properties([Elem | Rest], Bin,
                              TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 = e_mfield_CommandAck_properties(id(Elem,
                                             TrUserData),
                                          Bin2,
                                          TrUserData),
    e_field_CommandAck_properties(Rest, Bin3, TrUserData);
e_field_CommandAck_properties([], Bin, _TrUserData) ->
    Bin.

e_mfield_CommandSeek_message_id(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandRedeliverUnacknowledgedMessages_message_ids(Msg,
                                                            Bin, TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandRedeliverUnacknowledgedMessages_message_ids([Elem
                                                            | Rest],
                                                           Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 =
        e_mfield_CommandRedeliverUnacknowledgedMessages_message_ids(id(Elem,
                                                                       TrUserData),
                                                                    Bin2,
                                                                    TrUserData),
    e_field_CommandRedeliverUnacknowledgedMessages_message_ids(Rest,
                                                               Bin3,
                                                               TrUserData);
e_field_CommandRedeliverUnacknowledgedMessages_message_ids([],
                                                           Bin, _TrUserData) ->
    Bin.

e_mfield_CommandSuccess_schema(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_Schema(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandGetLastMessageIdResponse_last_message_id(Msg,
                                                         Bin, TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandGetLastMessageIdResponse_consumer_mark_delete_position(Msg,
                                                                       Bin,
                                                                       TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandGetTopicsOfNamespaceResponse_topics([Elem
                                                    | Rest],
                                                   Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData),
                         Bin2,
                         TrUserData),
    e_field_CommandGetTopicsOfNamespaceResponse_topics(Rest,
                                                       Bin3,
                                                       TrUserData);
e_field_CommandGetTopicsOfNamespaceResponse_topics([],
                                                   Bin, _TrUserData) ->
    Bin.

e_mfield_CommandGetSchemaResponse_schema(Msg, Bin,
                                         TrUserData) ->
    SubBin = encode_msg_Schema(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_CommandGetOrCreateSchema_schema(Msg, Bin,
                                         TrUserData) ->
    SubBin = encode_msg_Schema(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandAddPartitionToTxn_partitions([Elem
                                             | Rest],
                                            Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 = e_type_string(id(Elem, TrUserData),
                         Bin2,
                         TrUserData),
    e_field_CommandAddPartitionToTxn_partitions(Rest,
                                                Bin3,
                                                TrUserData);
e_field_CommandAddPartitionToTxn_partitions([], Bin,
                                            _TrUserData) ->
    Bin.

e_mfield_CommandAddSubscriptionToTxn_subscription(Msg,
                                                  Bin, TrUserData) ->
    SubBin = encode_msg_Subscription(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandAddSubscriptionToTxn_subscription([Elem
                                                  | Rest],
                                                 Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 =
        e_mfield_CommandAddSubscriptionToTxn_subscription(id(Elem,
                                                             TrUserData),
                                                          Bin2,
                                                          TrUserData),
    e_field_CommandAddSubscriptionToTxn_subscription(Rest,
                                                     Bin3,
                                                     TrUserData);
e_field_CommandAddSubscriptionToTxn_subscription([],
                                                 Bin, _TrUserData) ->
    Bin.

e_mfield_CommandEndTxn_message_id(Msg, Bin,
                                  TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandEndTxn_message_id([Elem | Rest], Bin,
                                 TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 = e_mfield_CommandEndTxn_message_id(id(Elem,
                                                TrUserData),
                                             Bin2,
                                             TrUserData),
    e_field_CommandEndTxn_message_id(Rest,
                                     Bin3,
                                     TrUserData);
e_field_CommandEndTxn_message_id([], Bin,
                                 _TrUserData) ->
    Bin.

e_mfield_CommandEndTxnOnPartition_message_id(Msg, Bin,
                                             TrUserData) ->
    SubBin = encode_msg_MessageIdData(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_CommandEndTxnOnPartition_message_id([Elem
                                             | Rest],
                                            Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 =
        e_mfield_CommandEndTxnOnPartition_message_id(id(Elem,
                                                        TrUserData),
                                                     Bin2,
                                                     TrUserData),
    e_field_CommandEndTxnOnPartition_message_id(Rest,
                                                Bin3,
                                                TrUserData);
e_field_CommandEndTxnOnPartition_message_id([], Bin,
                                            _TrUserData) ->
    Bin.

e_mfield_CommandEndTxnOnSubscription_subscription(Msg,
                                                  Bin, TrUserData) ->
    SubBin = encode_msg_Subscription(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_connect(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandConnect(Msg,
                                       <<>>,
                                       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_connected(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandConnected(Msg,
                                         <<>>,
                                         TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_subscribe(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandSubscribe(Msg,
                                         <<>>,
                                         TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_producer(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandProducer(Msg,
                                        <<>>,
                                        TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_send(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandSend(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_send_receipt(Msg, Bin,
                                  TrUserData) ->
    SubBin = encode_msg_CommandSendReceipt(Msg,
                                           <<>>,
                                           TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_send_error(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandSendError(Msg,
                                         <<>>,
                                         TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_message(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandMessage(Msg,
                                       <<>>,
                                       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_ack(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandAck(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_flow(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandFlow(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_unsubscribe(Msg, Bin,
                                 TrUserData) ->
    SubBin = encode_msg_CommandUnsubscribe(Msg,
                                           <<>>,
                                           TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_success(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandSuccess(Msg,
                                       <<>>,
                                       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_error(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandError(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_close_producer(Msg, Bin,
                                    TrUserData) ->
    SubBin = encode_msg_CommandCloseProducer(Msg,
                                             <<>>,
                                             TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_close_consumer(Msg, Bin,
                                    TrUserData) ->
    SubBin = encode_msg_CommandCloseConsumer(Msg,
                                             <<>>,
                                             TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_producer_success(Msg, Bin,
                                      TrUserData) ->
    SubBin = encode_msg_CommandProducerSuccess(Msg,
                                               <<>>,
                                               TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_ping(_Msg, Bin, _TrUserData) ->
    <<Bin/binary, 0>>.

e_mfield_BaseCommand_pong(_Msg, Bin, _TrUserData) ->
    <<Bin/binary, 0>>.

e_mfield_BaseCommand_redeliverUnacknowledgedMessages(Msg,
                                                     Bin, TrUserData) ->
    SubBin =
        encode_msg_CommandRedeliverUnacknowledgedMessages(Msg,
                                                          <<>>,
                                                          TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_partitionMetadata(Msg, Bin,
                                       TrUserData) ->
    SubBin = encode_msg_CommandPartitionedTopicMetadata(Msg,
                                                        <<>>,
                                                        TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_partitionMetadataResponse(Msg, Bin,
                                               TrUserData) ->
    SubBin =
        encode_msg_CommandPartitionedTopicMetadataResponse(Msg,
                                                           <<>>,
                                                           TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_lookupTopic(Msg, Bin,
                                 TrUserData) ->
    SubBin = encode_msg_CommandLookupTopic(Msg,
                                           <<>>,
                                           TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_lookupTopicResponse(Msg, Bin,
                                         TrUserData) ->
    SubBin = encode_msg_CommandLookupTopicResponse(Msg,
                                                   <<>>,
                                                   TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_consumerStats(Msg, Bin,
                                   TrUserData) ->
    SubBin = encode_msg_CommandConsumerStats(Msg,
                                             <<>>,
                                             TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_consumerStatsResponse(Msg, Bin,
                                           TrUserData) ->
    SubBin = encode_msg_CommandConsumerStatsResponse(Msg,
                                                     <<>>,
                                                     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_reachedEndOfTopic(Msg, Bin,
                                       TrUserData) ->
    SubBin = encode_msg_CommandReachedEndOfTopic(Msg,
                                                 <<>>,
                                                 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_seek(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandSeek(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_getLastMessageId(Msg, Bin,
                                      TrUserData) ->
    SubBin = encode_msg_CommandGetLastMessageId(Msg,
                                                <<>>,
                                                TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_getLastMessageIdResponse(Msg, Bin,
                                              TrUserData) ->
    SubBin = encode_msg_CommandGetLastMessageIdResponse(Msg,
                                                        <<>>,
                                                        TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_active_consumer_change(Msg, Bin,
                                            TrUserData) ->
    SubBin = encode_msg_CommandActiveConsumerChange(Msg,
                                                    <<>>,
                                                    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_getTopicsOfNamespace(Msg, Bin,
                                          TrUserData) ->
    SubBin = encode_msg_CommandGetTopicsOfNamespace(Msg,
                                                    <<>>,
                                                    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_getTopicsOfNamespaceResponse(Msg,
                                                  Bin, TrUserData) ->
    SubBin =
        encode_msg_CommandGetTopicsOfNamespaceResponse(Msg,
                                                       <<>>,
                                                       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_getSchema(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandGetSchema(Msg,
                                         <<>>,
                                         TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_getSchemaResponse(Msg, Bin,
                                       TrUserData) ->
    SubBin = encode_msg_CommandGetSchemaResponse(Msg,
                                                 <<>>,
                                                 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_authChallenge(Msg, Bin,
                                   TrUserData) ->
    SubBin = encode_msg_CommandAuthChallenge(Msg,
                                             <<>>,
                                             TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_authResponse(Msg, Bin,
                                  TrUserData) ->
    SubBin = encode_msg_CommandAuthResponse(Msg,
                                            <<>>,
                                            TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_ackResponse(Msg, Bin,
                                 TrUserData) ->
    SubBin = encode_msg_CommandAckResponse(Msg,
                                           <<>>,
                                           TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_getOrCreateSchema(Msg, Bin,
                                       TrUserData) ->
    SubBin = encode_msg_CommandGetOrCreateSchema(Msg,
                                                 <<>>,
                                                 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_getOrCreateSchemaResponse(Msg, Bin,
                                               TrUserData) ->
    SubBin =
        encode_msg_CommandGetOrCreateSchemaResponse(Msg,
                                                    <<>>,
                                                    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_newTxn(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandNewTxn(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_newTxnResponse(Msg, Bin,
                                    TrUserData) ->
    SubBin = encode_msg_CommandNewTxnResponse(Msg,
                                              <<>>,
                                              TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_addPartitionToTxn(Msg, Bin,
                                       TrUserData) ->
    SubBin = encode_msg_CommandAddPartitionToTxn(Msg,
                                                 <<>>,
                                                 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_addPartitionToTxnResponse(Msg, Bin,
                                               TrUserData) ->
    SubBin =
        encode_msg_CommandAddPartitionToTxnResponse(Msg,
                                                    <<>>,
                                                    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_addSubscriptionToTxn(Msg, Bin,
                                          TrUserData) ->
    SubBin = encode_msg_CommandAddSubscriptionToTxn(Msg,
                                                    <<>>,
                                                    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_addSubscriptionToTxnResponse(Msg,
                                                  Bin, TrUserData) ->
    SubBin =
        encode_msg_CommandAddSubscriptionToTxnResponse(Msg,
                                                       <<>>,
                                                       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_endTxn(Msg, Bin, TrUserData) ->
    SubBin = encode_msg_CommandEndTxn(Msg,
                                      <<>>,
                                      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_endTxnResponse(Msg, Bin,
                                    TrUserData) ->
    SubBin = encode_msg_CommandEndTxnResponse(Msg,
                                              <<>>,
                                              TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_endTxnOnPartition(Msg, Bin,
                                       TrUserData) ->
    SubBin = encode_msg_CommandEndTxnOnPartition(Msg,
                                                 <<>>,
                                                 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_endTxnOnPartitionResponse(Msg, Bin,
                                               TrUserData) ->
    SubBin =
        encode_msg_CommandEndTxnOnPartitionResponse(Msg,
                                                    <<>>,
                                                    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_endTxnOnSubscription(Msg, Bin,
                                          TrUserData) ->
    SubBin = encode_msg_CommandEndTxnOnSubscription(Msg,
                                                    <<>>,
                                                    TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_BaseCommand_endTxnOnSubscriptionResponse(Msg,
                                                  Bin, TrUserData) ->
    SubBin =
        encode_msg_CommandEndTxnOnSubscriptionResponse(Msg,
                                                       <<>>,
                                                       TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_enum_Schema.Type'('None', Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_Schema.Type'('String', Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_Schema.Type'('Json', Bin, _TrUserData) ->
    <<Bin/binary, 2>>;
'e_enum_Schema.Type'('Protobuf', Bin, _TrUserData) ->
    <<Bin/binary, 3>>;
'e_enum_Schema.Type'('Avro', Bin, _TrUserData) ->
    <<Bin/binary, 4>>;
'e_enum_Schema.Type'('Bool', Bin, _TrUserData) ->
    <<Bin/binary, 5>>;
'e_enum_Schema.Type'('Int8', Bin, _TrUserData) ->
    <<Bin/binary, 6>>;
'e_enum_Schema.Type'('Int16', Bin, _TrUserData) ->
    <<Bin/binary, 7>>;
'e_enum_Schema.Type'('Int32', Bin, _TrUserData) ->
    <<Bin/binary, 8>>;
'e_enum_Schema.Type'('Int64', Bin, _TrUserData) ->
    <<Bin/binary, 9>>;
'e_enum_Schema.Type'('Float', Bin, _TrUserData) ->
    <<Bin/binary, 10>>;
'e_enum_Schema.Type'('Double', Bin, _TrUserData) ->
    <<Bin/binary, 11>>;
'e_enum_Schema.Type'('Date', Bin, _TrUserData) ->
    <<Bin/binary, 12>>;
'e_enum_Schema.Type'('Time', Bin, _TrUserData) ->
    <<Bin/binary, 13>>;
'e_enum_Schema.Type'('Timestamp', Bin, _TrUserData) ->
    <<Bin/binary, 14>>;
'e_enum_Schema.Type'('KeyValue', Bin, _TrUserData) ->
    <<Bin/binary, 15>>;
'e_enum_Schema.Type'('Instant', Bin, _TrUserData) ->
    <<Bin/binary, 16>>;
'e_enum_Schema.Type'('LocalDate', Bin, _TrUserData) ->
    <<Bin/binary, 17>>;
'e_enum_Schema.Type'('LocalTime', Bin, _TrUserData) ->
    <<Bin/binary, 18>>;
'e_enum_Schema.Type'('LocalDateTime', Bin,
                     _TrUserData) ->
    <<Bin/binary, 19>>;
'e_enum_Schema.Type'('ProtobufNative', Bin,
                     _TrUserData) ->
    <<Bin/binary, 20>>;
'e_enum_Schema.Type'(V, Bin, _TrUserData) ->
    e_varint(V, Bin).

e_enum_CompressionType('NONE', Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
e_enum_CompressionType('LZ4', Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
e_enum_CompressionType('ZLIB', Bin, _TrUserData) ->
    <<Bin/binary, 2>>;
e_enum_CompressionType('ZSTD', Bin, _TrUserData) ->
    <<Bin/binary, 3>>;
e_enum_CompressionType('SNAPPY', Bin, _TrUserData) ->
    <<Bin/binary, 4>>;
e_enum_CompressionType(V, Bin, _TrUserData) ->
    e_varint(V, Bin).

e_enum_ServerError('UnknownError', Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
e_enum_ServerError('MetadataError', Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
e_enum_ServerError('PersistenceError', Bin,
                   _TrUserData) ->
    <<Bin/binary, 2>>;
e_enum_ServerError('AuthenticationError', Bin,
                   _TrUserData) ->
    <<Bin/binary, 3>>;
e_enum_ServerError('AuthorizationError', Bin,
                   _TrUserData) ->
    <<Bin/binary, 4>>;
e_enum_ServerError('ConsumerBusy', Bin, _TrUserData) ->
    <<Bin/binary, 5>>;
e_enum_ServerError('ServiceNotReady', Bin,
                   _TrUserData) ->
    <<Bin/binary, 6>>;
e_enum_ServerError('ProducerBlockedQuotaExceededError',
                   Bin, _TrUserData) ->
    <<Bin/binary, 7>>;
e_enum_ServerError('ProducerBlockedQuotaExceededException',
                   Bin, _TrUserData) ->
    <<Bin/binary, 8>>;
e_enum_ServerError('ChecksumError', Bin, _TrUserData) ->
    <<Bin/binary, 9>>;
e_enum_ServerError('UnsupportedVersionError', Bin,
                   _TrUserData) ->
    <<Bin/binary, 10>>;
e_enum_ServerError('TopicNotFound', Bin, _TrUserData) ->
    <<Bin/binary, 11>>;
e_enum_ServerError('SubscriptionNotFound', Bin,
                   _TrUserData) ->
    <<Bin/binary, 12>>;
e_enum_ServerError('ConsumerNotFound', Bin,
                   _TrUserData) ->
    <<Bin/binary, 13>>;
e_enum_ServerError('TooManyRequests', Bin,
                   _TrUserData) ->
    <<Bin/binary, 14>>;
e_enum_ServerError('TopicTerminatedError', Bin,
                   _TrUserData) ->
    <<Bin/binary, 15>>;
e_enum_ServerError('ProducerBusy', Bin, _TrUserData) ->
    <<Bin/binary, 16>>;
e_enum_ServerError('InvalidTopicName', Bin,
                   _TrUserData) ->
    <<Bin/binary, 17>>;
e_enum_ServerError('IncompatibleSchema', Bin,
                   _TrUserData) ->
    <<Bin/binary, 18>>;
e_enum_ServerError('ConsumerAssignError', Bin,
                   _TrUserData) ->
    <<Bin/binary, 19>>;
e_enum_ServerError('TransactionCoordinatorNotFound',
                   Bin, _TrUserData) ->
    <<Bin/binary, 20>>;
e_enum_ServerError('InvalidTxnStatus', Bin,
                   _TrUserData) ->
    <<Bin/binary, 21>>;
e_enum_ServerError('NotAllowedError', Bin,
                   _TrUserData) ->
    <<Bin/binary, 22>>;
e_enum_ServerError('TransactionConflict', Bin,
                   _TrUserData) ->
    <<Bin/binary, 23>>;
e_enum_ServerError('TransactionNotFound', Bin,
                   _TrUserData) ->
    <<Bin/binary, 24>>;
e_enum_ServerError(V, Bin, _TrUserData) ->
    e_varint(V, Bin).

e_enum_AuthMethod('AuthMethodNone', Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
e_enum_AuthMethod('AuthMethodYcaV1', Bin,
                  _TrUserData) ->
    <<Bin/binary, 1>>;
e_enum_AuthMethod('AuthMethodAthens', Bin,
                  _TrUserData) ->
    <<Bin/binary, 2>>;
e_enum_AuthMethod(V, Bin, _TrUserData) ->
    e_varint(V, Bin).

e_enum_KeySharedMode('AUTO_SPLIT', Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
e_enum_KeySharedMode('STICKY', Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
e_enum_KeySharedMode(V, Bin, _TrUserData) ->
    e_varint(V, Bin).

'e_enum_CommandSubscribe.SubType'('Exclusive', Bin,
                                  _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_CommandSubscribe.SubType'('Shared', Bin,
                                  _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_CommandSubscribe.SubType'('Failover', Bin,
                                  _TrUserData) ->
    <<Bin/binary, 2>>;
'e_enum_CommandSubscribe.SubType'('Key_Shared', Bin,
                                  _TrUserData) ->
    <<Bin/binary, 3>>;
'e_enum_CommandSubscribe.SubType'(V, Bin,
                                  _TrUserData) ->
    e_varint(V, Bin).

'e_enum_CommandSubscribe.InitialPosition'('Latest', Bin,
                                          _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_CommandSubscribe.InitialPosition'('Earliest',
                                          Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_CommandSubscribe.InitialPosition'(V, Bin,
                                          _TrUserData) ->
    e_varint(V, Bin).

'e_enum_CommandPartitionedTopicMetadataResponse.LookupType'('Success',
                                                            Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_CommandPartitionedTopicMetadataResponse.LookupType'('Failed',
                                                            Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_CommandPartitionedTopicMetadataResponse.LookupType'(V,
                                                            Bin, _TrUserData) ->
    e_varint(V, Bin).

'e_enum_CommandLookupTopicResponse.LookupType'('Redirect',
                                               Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_CommandLookupTopicResponse.LookupType'('Connect',
                                               Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_CommandLookupTopicResponse.LookupType'('Failed',
                                               Bin, _TrUserData) ->
    <<Bin/binary, 2>>;
'e_enum_CommandLookupTopicResponse.LookupType'(V, Bin,
                                               _TrUserData) ->
    e_varint(V, Bin).

'e_enum_CommandAck.AckType'('Individual', Bin,
                            _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_CommandAck.AckType'('Cumulative', Bin,
                            _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_CommandAck.AckType'(V, Bin, _TrUserData) ->
    e_varint(V, Bin).

'e_enum_CommandAck.ValidationError'('UncompressedSizeCorruption',
                                    Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_CommandAck.ValidationError'('DecompressionError',
                                    Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_CommandAck.ValidationError'('ChecksumMismatch',
                                    Bin, _TrUserData) ->
    <<Bin/binary, 2>>;
'e_enum_CommandAck.ValidationError'('BatchDeSerializeError',
                                    Bin, _TrUserData) ->
    <<Bin/binary, 3>>;
'e_enum_CommandAck.ValidationError'('DecryptionError',
                                    Bin, _TrUserData) ->
    <<Bin/binary, 4>>;
'e_enum_CommandAck.ValidationError'(V, Bin,
                                    _TrUserData) ->
    e_varint(V, Bin).

'e_enum_CommandGetTopicsOfNamespace.Mode'('PERSISTENT',
                                          Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_CommandGetTopicsOfNamespace.Mode'('NON_PERSISTENT',
                                          Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_CommandGetTopicsOfNamespace.Mode'('ALL', Bin,
                                          _TrUserData) ->
    <<Bin/binary, 2>>;
'e_enum_CommandGetTopicsOfNamespace.Mode'(V, Bin,
                                          _TrUserData) ->
    e_varint(V, Bin).

e_enum_TxnAction('COMMIT', Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
e_enum_TxnAction('ABORT', Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
e_enum_TxnAction(V, Bin, _TrUserData) ->
    e_varint(V, Bin).

'e_enum_BaseCommand.Type'('CONNECT', Bin,
                          _TrUserData) ->
    <<Bin/binary, 2>>;
'e_enum_BaseCommand.Type'('CONNECTED', Bin,
                          _TrUserData) ->
    <<Bin/binary, 3>>;
'e_enum_BaseCommand.Type'('SUBSCRIBE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 4>>;
'e_enum_BaseCommand.Type'('PRODUCER', Bin,
                          _TrUserData) ->
    <<Bin/binary, 5>>;
'e_enum_BaseCommand.Type'('SEND', Bin, _TrUserData) ->
    <<Bin/binary, 6>>;
'e_enum_BaseCommand.Type'('SEND_RECEIPT', Bin,
                          _TrUserData) ->
    <<Bin/binary, 7>>;
'e_enum_BaseCommand.Type'('SEND_ERROR', Bin,
                          _TrUserData) ->
    <<Bin/binary, 8>>;
'e_enum_BaseCommand.Type'('MESSAGE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 9>>;
'e_enum_BaseCommand.Type'('ACK', Bin, _TrUserData) ->
    <<Bin/binary, 10>>;
'e_enum_BaseCommand.Type'('FLOW', Bin, _TrUserData) ->
    <<Bin/binary, 11>>;
'e_enum_BaseCommand.Type'('UNSUBSCRIBE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 12>>;
'e_enum_BaseCommand.Type'('SUCCESS', Bin,
                          _TrUserData) ->
    <<Bin/binary, 13>>;
'e_enum_BaseCommand.Type'('ERROR', Bin, _TrUserData) ->
    <<Bin/binary, 14>>;
'e_enum_BaseCommand.Type'('CLOSE_PRODUCER', Bin,
                          _TrUserData) ->
    <<Bin/binary, 15>>;
'e_enum_BaseCommand.Type'('CLOSE_CONSUMER', Bin,
                          _TrUserData) ->
    <<Bin/binary, 16>>;
'e_enum_BaseCommand.Type'('PRODUCER_SUCCESS', Bin,
                          _TrUserData) ->
    <<Bin/binary, 17>>;
'e_enum_BaseCommand.Type'('PING', Bin, _TrUserData) ->
    <<Bin/binary, 18>>;
'e_enum_BaseCommand.Type'('PONG', Bin, _TrUserData) ->
    <<Bin/binary, 19>>;
'e_enum_BaseCommand.Type'('REDELIVER_UNACKNOWLEDGED_MESSAGES',
                          Bin, _TrUserData) ->
    <<Bin/binary, 20>>;
'e_enum_BaseCommand.Type'('PARTITIONED_METADATA', Bin,
                          _TrUserData) ->
    <<Bin/binary, 21>>;
'e_enum_BaseCommand.Type'('PARTITIONED_METADATA_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 22>>;
'e_enum_BaseCommand.Type'('LOOKUP', Bin, _TrUserData) ->
    <<Bin/binary, 23>>;
'e_enum_BaseCommand.Type'('LOOKUP_RESPONSE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 24>>;
'e_enum_BaseCommand.Type'('CONSUMER_STATS', Bin,
                          _TrUserData) ->
    <<Bin/binary, 25>>;
'e_enum_BaseCommand.Type'('CONSUMER_STATS_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 26>>;
'e_enum_BaseCommand.Type'('REACHED_END_OF_TOPIC', Bin,
                          _TrUserData) ->
    <<Bin/binary, 27>>;
'e_enum_BaseCommand.Type'('SEEK', Bin, _TrUserData) ->
    <<Bin/binary, 28>>;
'e_enum_BaseCommand.Type'('GET_LAST_MESSAGE_ID', Bin,
                          _TrUserData) ->
    <<Bin/binary, 29>>;
'e_enum_BaseCommand.Type'('GET_LAST_MESSAGE_ID_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 30>>;
'e_enum_BaseCommand.Type'('ACTIVE_CONSUMER_CHANGE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 31>>;
'e_enum_BaseCommand.Type'('GET_TOPICS_OF_NAMESPACE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 32>>;
'e_enum_BaseCommand.Type'('GET_TOPICS_OF_NAMESPACE_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 33>>;
'e_enum_BaseCommand.Type'('GET_SCHEMA', Bin,
                          _TrUserData) ->
    <<Bin/binary, 34>>;
'e_enum_BaseCommand.Type'('GET_SCHEMA_RESPONSE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 35>>;
'e_enum_BaseCommand.Type'('AUTH_CHALLENGE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 36>>;
'e_enum_BaseCommand.Type'('AUTH_RESPONSE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 37>>;
'e_enum_BaseCommand.Type'('ACK_RESPONSE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 38>>;
'e_enum_BaseCommand.Type'('GET_OR_CREATE_SCHEMA', Bin,
                          _TrUserData) ->
    <<Bin/binary, 39>>;
'e_enum_BaseCommand.Type'('GET_OR_CREATE_SCHEMA_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 40>>;
'e_enum_BaseCommand.Type'('NEW_TXN', Bin,
                          _TrUserData) ->
    <<Bin/binary, 50>>;
'e_enum_BaseCommand.Type'('NEW_TXN_RESPONSE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 51>>;
'e_enum_BaseCommand.Type'('ADD_PARTITION_TO_TXN', Bin,
                          _TrUserData) ->
    <<Bin/binary, 52>>;
'e_enum_BaseCommand.Type'('ADD_PARTITION_TO_TXN_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 53>>;
'e_enum_BaseCommand.Type'('ADD_SUBSCRIPTION_TO_TXN',
                          Bin, _TrUserData) ->
    <<Bin/binary, 54>>;
'e_enum_BaseCommand.Type'('ADD_SUBSCRIPTION_TO_TXN_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 55>>;
'e_enum_BaseCommand.Type'('END_TXN', Bin,
                          _TrUserData) ->
    <<Bin/binary, 56>>;
'e_enum_BaseCommand.Type'('END_TXN_RESPONSE', Bin,
                          _TrUserData) ->
    <<Bin/binary, 57>>;
'e_enum_BaseCommand.Type'('END_TXN_ON_PARTITION', Bin,
                          _TrUserData) ->
    <<Bin/binary, 58>>;
'e_enum_BaseCommand.Type'('END_TXN_ON_PARTITION_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 59>>;
'e_enum_BaseCommand.Type'('END_TXN_ON_SUBSCRIPTION',
                          Bin, _TrUserData) ->
    <<Bin/binary, 60>>;
'e_enum_BaseCommand.Type'('END_TXN_ON_SUBSCRIPTION_RESPONSE',
                          Bin, _TrUserData) ->
    <<Bin/binary, 61>>;
'e_enum_BaseCommand.Type'(V, Bin, _TrUserData) ->
    e_varint(V, Bin).

-compile({nowarn_unused_function,e_type_sint/3}).
e_type_sint(Value, Bin, _TrUserData) when Value >= 0 ->
    e_varint(Value * 2, Bin);
e_type_sint(Value, Bin, _TrUserData) ->
    e_varint(Value * -2 - 1, Bin).

-compile({nowarn_unused_function,e_type_int32/3}).
e_type_int32(Value, Bin, _TrUserData)
    when 0 =< Value, Value =< 127 ->
    <<Bin/binary, Value>>;
e_type_int32(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_int64/3}).
e_type_int64(Value, Bin, _TrUserData)
    when 0 =< Value, Value =< 127 ->
    <<Bin/binary, Value>>;
e_type_int64(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_bool/3}).
e_type_bool(true, Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
e_type_bool(false, Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
e_type_bool(1, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(0, Bin, _TrUserData) -> <<Bin/binary, 0>>.

-compile({nowarn_unused_function,e_type_string/3}).
e_type_string(S, Bin, _TrUserData) ->
    Utf8 = unicode:characters_to_binary(S),
    Bin2 = e_varint(byte_size(Utf8), Bin),
    <<Bin2/binary, Utf8/binary>>.

-compile({nowarn_unused_function,e_type_bytes/3}).
e_type_bytes(Bytes, Bin, _TrUserData)
    when is_binary(Bytes) ->
    Bin2 = e_varint(byte_size(Bytes), Bin),
    <<Bin2/binary, Bytes/binary>>;
e_type_bytes(Bytes, Bin, _TrUserData)
    when is_list(Bytes) ->
    BytesBin = iolist_to_binary(Bytes),
    Bin2 = e_varint(byte_size(BytesBin), Bin),
    <<Bin2/binary, BytesBin/binary>>.

-compile({nowarn_unused_function,e_type_fixed32/3}).
e_type_fixed32(Value, Bin, _TrUserData) ->
    <<Bin/binary, Value:32/little>>.

-compile({nowarn_unused_function,e_type_sfixed32/3}).
e_type_sfixed32(Value, Bin, _TrUserData) ->
    <<Bin/binary, Value:32/little-signed>>.

-compile({nowarn_unused_function,e_type_fixed64/3}).
e_type_fixed64(Value, Bin, _TrUserData) ->
    <<Bin/binary, Value:64/little>>.

-compile({nowarn_unused_function,e_type_sfixed64/3}).
e_type_sfixed64(Value, Bin, _TrUserData) ->
    <<Bin/binary, Value:64/little-signed>>.

-compile({nowarn_unused_function,e_type_float/3}).
e_type_float(V, Bin, _) when is_number(V) ->
    <<Bin/binary, V:32/little-float>>;
e_type_float(infinity, Bin, _) ->
    <<Bin/binary, 0:16, 128, 127>>;
e_type_float('-infinity', Bin, _) ->
    <<Bin/binary, 0:16, 128, 255>>;
e_type_float(nan, Bin, _) ->
    <<Bin/binary, 0:16, 192, 127>>.

-compile({nowarn_unused_function,e_type_double/3}).
e_type_double(V, Bin, _) when is_number(V) ->
    <<Bin/binary, V:64/little-float>>;
e_type_double(infinity, Bin, _) ->
    <<Bin/binary, 0:48, 240, 127>>;
e_type_double('-infinity', Bin, _) ->
    <<Bin/binary, 0:48, 240, 255>>;
e_type_double(nan, Bin, _) ->
    <<Bin/binary, 0:48, 248, 127>>.

-compile({nowarn_unused_function,e_varint/3}).
e_varint(N, Bin, _TrUserData) -> e_varint(N, Bin).

-compile({nowarn_unused_function,e_varint/2}).
e_varint(N, Bin) when N =< 127 -> <<Bin/binary, N>>;
e_varint(N, Bin) ->
    Bin2 = <<Bin/binary, (N band 127 bor 128)>>,
    e_varint(N bsr 7, Bin2).


decode_msg(Bin, MsgName) when is_binary(Bin) ->
    decode_msg(Bin, MsgName, []).

decode_msg(Bin, MsgName, Opts) when is_binary(Bin) ->
    TrUserData = proplists:get_value(user_data, Opts),
    decode_msg_1_catch(Bin, MsgName, TrUserData).

-ifdef('OTP_RELEASE').
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch Class:Reason:StackTrace -> error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-else.
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch Class:Reason ->
        StackTrace = erlang:get_stacktrace(),
        error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-endif.

decode_msg_2_doit('Schema', Bin, TrUserData) ->
    id(decode_msg_Schema(Bin, TrUserData), TrUserData);
decode_msg_2_doit('MessageIdData', Bin, TrUserData) ->
    id(decode_msg_MessageIdData(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('KeyValue', Bin, TrUserData) ->
    id(decode_msg_KeyValue(Bin, TrUserData), TrUserData);
decode_msg_2_doit('KeyLongValue', Bin, TrUserData) ->
    id(decode_msg_KeyLongValue(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('IntRange', Bin, TrUserData) ->
    id(decode_msg_IntRange(Bin, TrUserData), TrUserData);
decode_msg_2_doit('EncryptionKeys', Bin, TrUserData) ->
    id(decode_msg_EncryptionKeys(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('MessageMetadata', Bin, TrUserData) ->
    id(decode_msg_MessageMetadata(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('SingleMessageMetadata', Bin,
                  TrUserData) ->
    id(decode_msg_SingleMessageMetadata(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandConnect', Bin, TrUserData) ->
    id(decode_msg_CommandConnect(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('FeatureFlags', Bin, TrUserData) ->
    id(decode_msg_FeatureFlags(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandConnected', Bin,
                  TrUserData) ->
    id(decode_msg_CommandConnected(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandAuthResponse', Bin,
                  TrUserData) ->
    id(decode_msg_CommandAuthResponse(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandAuthChallenge', Bin,
                  TrUserData) ->
    id(decode_msg_CommandAuthChallenge(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('AuthData', Bin, TrUserData) ->
    id(decode_msg_AuthData(Bin, TrUserData), TrUserData);
decode_msg_2_doit('KeySharedMeta', Bin, TrUserData) ->
    id(decode_msg_KeySharedMeta(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandSubscribe', Bin,
                  TrUserData) ->
    id(decode_msg_CommandSubscribe(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandPartitionedTopicMetadata',
                  Bin, TrUserData) ->
    id(decode_msg_CommandPartitionedTopicMetadata(Bin,
                                                  TrUserData),
       TrUserData);
decode_msg_2_doit('CommandPartitionedTopicMetadataResponse',
                  Bin, TrUserData) ->
    id(decode_msg_CommandPartitionedTopicMetadataResponse(Bin,
                                                          TrUserData),
       TrUserData);
decode_msg_2_doit('CommandLookupTopic', Bin,
                  TrUserData) ->
    id(decode_msg_CommandLookupTopic(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandLookupTopicResponse', Bin,
                  TrUserData) ->
    id(decode_msg_CommandLookupTopicResponse(Bin,
                                             TrUserData),
       TrUserData);
decode_msg_2_doit('CommandProducer', Bin, TrUserData) ->
    id(decode_msg_CommandProducer(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandSend', Bin, TrUserData) ->
    id(decode_msg_CommandSend(Bin, TrUserData), TrUserData);
decode_msg_2_doit('CommandSendReceipt', Bin,
                  TrUserData) ->
    id(decode_msg_CommandSendReceipt(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandSendError', Bin,
                  TrUserData) ->
    id(decode_msg_CommandSendError(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandMessage', Bin, TrUserData) ->
    id(decode_msg_CommandMessage(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandAck', Bin, TrUserData) ->
    id(decode_msg_CommandAck(Bin, TrUserData), TrUserData);
decode_msg_2_doit('CommandAckResponse', Bin,
                  TrUserData) ->
    id(decode_msg_CommandAckResponse(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandActiveConsumerChange', Bin,
                  TrUserData) ->
    id(decode_msg_CommandActiveConsumerChange(Bin,
                                              TrUserData),
       TrUserData);
decode_msg_2_doit('CommandFlow', Bin, TrUserData) ->
    id(decode_msg_CommandFlow(Bin, TrUserData), TrUserData);
decode_msg_2_doit('CommandUnsubscribe', Bin,
                  TrUserData) ->
    id(decode_msg_CommandUnsubscribe(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandSeek', Bin, TrUserData) ->
    id(decode_msg_CommandSeek(Bin, TrUserData), TrUserData);
decode_msg_2_doit('CommandReachedEndOfTopic', Bin,
                  TrUserData) ->
    id(decode_msg_CommandReachedEndOfTopic(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandCloseProducer', Bin,
                  TrUserData) ->
    id(decode_msg_CommandCloseProducer(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandCloseConsumer', Bin,
                  TrUserData) ->
    id(decode_msg_CommandCloseConsumer(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandRedeliverUnacknowledgedMessages',
                  Bin, TrUserData) ->
    id(decode_msg_CommandRedeliverUnacknowledgedMessages(Bin,
                                                         TrUserData),
       TrUserData);
decode_msg_2_doit('CommandSuccess', Bin, TrUserData) ->
    id(decode_msg_CommandSuccess(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandProducerSuccess', Bin,
                  TrUserData) ->
    id(decode_msg_CommandProducerSuccess(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandError', Bin, TrUserData) ->
    id(decode_msg_CommandError(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandPing', Bin, TrUserData) ->
    id(decode_msg_CommandPing(Bin, TrUserData), TrUserData);
decode_msg_2_doit('CommandPong', Bin, TrUserData) ->
    id(decode_msg_CommandPong(Bin, TrUserData), TrUserData);
decode_msg_2_doit('CommandConsumerStats', Bin,
                  TrUserData) ->
    id(decode_msg_CommandConsumerStats(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandConsumerStatsResponse', Bin,
                  TrUserData) ->
    id(decode_msg_CommandConsumerStatsResponse(Bin,
                                               TrUserData),
       TrUserData);
decode_msg_2_doit('CommandGetLastMessageId', Bin,
                  TrUserData) ->
    id(decode_msg_CommandGetLastMessageId(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandGetLastMessageIdResponse',
                  Bin, TrUserData) ->
    id(decode_msg_CommandGetLastMessageIdResponse(Bin,
                                                  TrUserData),
       TrUserData);
decode_msg_2_doit('CommandGetTopicsOfNamespace', Bin,
                  TrUserData) ->
    id(decode_msg_CommandGetTopicsOfNamespace(Bin,
                                              TrUserData),
       TrUserData);
decode_msg_2_doit('CommandGetTopicsOfNamespaceResponse',
                  Bin, TrUserData) ->
    id(decode_msg_CommandGetTopicsOfNamespaceResponse(Bin,
                                                      TrUserData),
       TrUserData);
decode_msg_2_doit('CommandGetSchema', Bin,
                  TrUserData) ->
    id(decode_msg_CommandGetSchema(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandGetSchemaResponse', Bin,
                  TrUserData) ->
    id(decode_msg_CommandGetSchemaResponse(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandGetOrCreateSchema', Bin,
                  TrUserData) ->
    id(decode_msg_CommandGetOrCreateSchema(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandGetOrCreateSchemaResponse',
                  Bin, TrUserData) ->
    id(decode_msg_CommandGetOrCreateSchemaResponse(Bin,
                                                   TrUserData),
       TrUserData);
decode_msg_2_doit('CommandNewTxn', Bin, TrUserData) ->
    id(decode_msg_CommandNewTxn(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandNewTxnResponse', Bin,
                  TrUserData) ->
    id(decode_msg_CommandNewTxnResponse(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandAddPartitionToTxn', Bin,
                  TrUserData) ->
    id(decode_msg_CommandAddPartitionToTxn(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandAddPartitionToTxnResponse',
                  Bin, TrUserData) ->
    id(decode_msg_CommandAddPartitionToTxnResponse(Bin,
                                                   TrUserData),
       TrUserData);
decode_msg_2_doit('Subscription', Bin, TrUserData) ->
    id(decode_msg_Subscription(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandAddSubscriptionToTxn', Bin,
                  TrUserData) ->
    id(decode_msg_CommandAddSubscriptionToTxn(Bin,
                                              TrUserData),
       TrUserData);
decode_msg_2_doit('CommandAddSubscriptionToTxnResponse',
                  Bin, TrUserData) ->
    id(decode_msg_CommandAddSubscriptionToTxnResponse(Bin,
                                                      TrUserData),
       TrUserData);
decode_msg_2_doit('CommandEndTxn', Bin, TrUserData) ->
    id(decode_msg_CommandEndTxn(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandEndTxnResponse', Bin,
                  TrUserData) ->
    id(decode_msg_CommandEndTxnResponse(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandEndTxnOnPartition', Bin,
                  TrUserData) ->
    id(decode_msg_CommandEndTxnOnPartition(Bin, TrUserData),
       TrUserData);
decode_msg_2_doit('CommandEndTxnOnPartitionResponse',
                  Bin, TrUserData) ->
    id(decode_msg_CommandEndTxnOnPartitionResponse(Bin,
                                                   TrUserData),
       TrUserData);
decode_msg_2_doit('CommandEndTxnOnSubscription', Bin,
                  TrUserData) ->
    id(decode_msg_CommandEndTxnOnSubscription(Bin,
                                              TrUserData),
       TrUserData);
decode_msg_2_doit('CommandEndTxnOnSubscriptionResponse',
                  Bin, TrUserData) ->
    id(decode_msg_CommandEndTxnOnSubscriptionResponse(Bin,
                                                      TrUserData),
       TrUserData);
decode_msg_2_doit('BaseCommand', Bin, TrUserData) ->
    id(decode_msg_BaseCommand(Bin, TrUserData), TrUserData).



decode_msg_Schema(Bin, TrUserData) ->
    dfp_read_field_def_Schema(Bin,
                              0,
                              0,
                              id('$undef', TrUserData),
                              id('$undef', TrUserData),
                              id('$undef', TrUserData),
                              id([], TrUserData),
                              TrUserData).

dfp_read_field_def_Schema(<<10, Rest/binary>>, Z1, Z2,
                          F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_Schema_name(Rest,
                        Z1,
                        Z2,
                        F@_1,
                        F@_2,
                        F@_3,
                        F@_4,
                        TrUserData);
dfp_read_field_def_Schema(<<26, Rest/binary>>, Z1, Z2,
                          F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_Schema_schema_data(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               F@_3,
                               F@_4,
                               TrUserData);
dfp_read_field_def_Schema(<<32, Rest/binary>>, Z1, Z2,
                          F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_Schema_type(Rest,
                        Z1,
                        Z2,
                        F@_1,
                        F@_2,
                        F@_3,
                        F@_4,
                        TrUserData);
dfp_read_field_def_Schema(<<42, Rest/binary>>, Z1, Z2,
                          F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_Schema_properties(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              TrUserData);
dfp_read_field_def_Schema(<<>>, 0, 0, F@_1, F@_2, F@_3,
                          R1, TrUserData) ->
    S1 = #{name => F@_1, schema_data => F@_2, type => F@_3},
    if R1 == '$undef' -> S1;
       true -> S1#{properties => lists_reverse(R1, TrUserData)}
    end;
dfp_read_field_def_Schema(Other, Z1, Z2, F@_1, F@_2,
                          F@_3, F@_4, TrUserData) ->
    dg_read_field_def_Schema(Other,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             TrUserData).

dg_read_field_def_Schema(<<1:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_Schema(Rest,
                             N + 7,
                             X bsl N + Acc,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             TrUserData);
dg_read_field_def_Schema(<<0:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_Schema_name(Rest,
                                0,
                                0,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                TrUserData);
        26 ->
            d_field_Schema_schema_data(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       TrUserData);
        32 ->
            d_field_Schema_type(Rest,
                                0,
                                0,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                TrUserData);
        42 ->
            d_field_Schema_properties(Rest,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_Schema(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       TrUserData);
                1 ->
                    skip_64_Schema(Rest,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
                2 ->
                    skip_length_delimited_Schema(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 TrUserData);
                3 ->
                    skip_group_Schema(Rest,
                                      Key bsr 3,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData);
                5 ->
                    skip_32_Schema(Rest,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData)
            end
    end;
dg_read_field_def_Schema(<<>>, 0, 0, F@_1, F@_2, F@_3,
                         R1, TrUserData) ->
    S1 = #{name => F@_1, schema_data => F@_2, type => F@_3},
    if R1 == '$undef' -> S1;
       true -> S1#{properties => lists_reverse(R1, TrUserData)}
    end.

d_field_Schema_name(<<1:1, X:7, Rest/binary>>, N, Acc,
                    F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_Schema_name(Rest,
                        N + 7,
                        X bsl N + Acc,
                        F@_1,
                        F@_2,
                        F@_3,
                        F@_4,
                        TrUserData);
d_field_Schema_name(<<0:1, X:7, Rest/binary>>, N, Acc,
                    _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_Schema(RestF,
                              0,
                              0,
                              NewFValue,
                              F@_2,
                              F@_3,
                              F@_4,
                              TrUserData).

d_field_Schema_schema_data(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_Schema_schema_data(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               F@_3,
                               F@_4,
                               TrUserData);
d_field_Schema_schema_data(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, _, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_Schema(RestF,
                              0,
                              0,
                              F@_1,
                              NewFValue,
                              F@_3,
                              F@_4,
                              TrUserData).

d_field_Schema_type(<<1:1, X:7, Rest/binary>>, N, Acc,
                    F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_Schema_type(Rest,
                        N + 7,
                        X bsl N + Acc,
                        F@_1,
                        F@_2,
                        F@_3,
                        F@_4,
                        TrUserData);
d_field_Schema_type(<<0:1, X:7, Rest/binary>>, N, Acc,
                    F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id('d_enum_Schema.Type'(begin
                                                      <<Res:32/signed-native>> =
                                                          <<(X bsl N +
                                                                 Acc):32/unsigned-native>>,
                                                      id(Res, TrUserData)
                                                  end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_Schema(RestF,
                              0,
                              0,
                              F@_1,
                              F@_2,
                              NewFValue,
                              F@_4,
                              TrUserData).

d_field_Schema_properties(<<1:1, X:7, Rest/binary>>, N,
                          Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_Schema_properties(Rest,
                              N + 7,
                              X bsl N + Acc,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              TrUserData);
d_field_Schema_properties(<<0:1, X:7, Rest/binary>>, N,
                          Acc, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_KeyValue(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_Schema(RestF,
                              0,
                              0,
                              F@_1,
                              F@_2,
                              F@_3,
                              cons(NewFValue, Prev, TrUserData),
                              TrUserData).

skip_varint_Schema(<<1:1, _:7, Rest/binary>>, Z1, Z2,
                   F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    skip_varint_Schema(Rest,
                       Z1,
                       Z2,
                       F@_1,
                       F@_2,
                       F@_3,
                       F@_4,
                       TrUserData);
skip_varint_Schema(<<0:1, _:7, Rest/binary>>, Z1, Z2,
                   F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_Schema(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              TrUserData).

skip_length_delimited_Schema(<<1:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    skip_length_delimited_Schema(Rest,
                                 N + 7,
                                 X bsl N + Acc,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 TrUserData);
skip_length_delimited_Schema(<<0:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_Schema(Rest2,
                              0,
                              0,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              TrUserData).

skip_group_Schema(Bin, FNum, Z2, F@_1, F@_2, F@_3, F@_4,
                  TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_Schema(Rest,
                              0,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              TrUserData).

skip_32_Schema(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
               F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_Schema(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              TrUserData).

skip_64_Schema(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
               F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_Schema(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              TrUserData).

decode_msg_MessageIdData(Bin, TrUserData) ->
    dfp_read_field_def_MessageIdData(Bin,
                                     0,
                                     0,
                                     id('$undef', TrUserData),
                                     id('$undef', TrUserData),
                                     id('$undef', TrUserData),
                                     id('$undef', TrUserData),
                                     id([], TrUserData),
                                     id('$undef', TrUserData),
                                     TrUserData).

dfp_read_field_def_MessageIdData(<<8, Rest/binary>>, Z1,
                                 Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    d_field_MessageIdData_ledgerId(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   TrUserData);
dfp_read_field_def_MessageIdData(<<16, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    d_field_MessageIdData_entryId(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  TrUserData);
dfp_read_field_def_MessageIdData(<<24, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    d_field_MessageIdData_partition(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    TrUserData);
dfp_read_field_def_MessageIdData(<<32, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    d_field_MessageIdData_batch_index(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      TrUserData);
dfp_read_field_def_MessageIdData(<<42, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    d_pfield_MessageIdData_ack_set(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   TrUserData);
dfp_read_field_def_MessageIdData(<<40, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    d_field_MessageIdData_ack_set(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  TrUserData);
dfp_read_field_def_MessageIdData(<<48, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    d_field_MessageIdData_batch_size(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData);
dfp_read_field_def_MessageIdData(<<>>, 0, 0, F@_1, F@_2,
                                 F@_3, F@_4, R1, F@_6, TrUserData) ->
    S1 = #{ledgerId => F@_1, entryId => F@_2,
           ack_set => lists_reverse(R1, TrUserData)},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{partition => F@_3}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{batch_index => F@_4}
         end,
    if F@_6 == '$undef' -> S3;
       true -> S3#{batch_size => F@_6}
    end;
dfp_read_field_def_MessageIdData(Other, Z1, Z2, F@_1,
                                 F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    dg_read_field_def_MessageIdData(Other,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    TrUserData).

dg_read_field_def_MessageIdData(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_MessageIdData(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    TrUserData);
dg_read_field_def_MessageIdData(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_MessageIdData_ledgerId(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           TrUserData);
        16 ->
            d_field_MessageIdData_entryId(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData);
        24 ->
            d_field_MessageIdData_partition(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            TrUserData);
        32 ->
            d_field_MessageIdData_batch_index(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              TrUserData);
        42 ->
            d_pfield_MessageIdData_ack_set(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           TrUserData);
        40 ->
            d_field_MessageIdData_ack_set(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData);
        48 ->
            d_field_MessageIdData_batch_size(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_MessageIdData(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              TrUserData);
                1 ->
                    skip_64_MessageIdData(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData);
                2 ->
                    skip_length_delimited_MessageIdData(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        TrUserData);
                3 ->
                    skip_group_MessageIdData(Rest,
                                             Key bsr 3,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             TrUserData);
                5 ->
                    skip_32_MessageIdData(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData)
            end
    end;
dg_read_field_def_MessageIdData(<<>>, 0, 0, F@_1, F@_2,
                                F@_3, F@_4, R1, F@_6, TrUserData) ->
    S1 = #{ledgerId => F@_1, entryId => F@_2,
           ack_set => lists_reverse(R1, TrUserData)},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{partition => F@_3}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{batch_index => F@_4}
         end,
    if F@_6 == '$undef' -> S3;
       true -> S3#{batch_size => F@_6}
    end.

d_field_MessageIdData_ledgerId(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                               TrUserData)
    when N < 57 ->
    d_field_MessageIdData_ledgerId(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   TrUserData);
d_field_MessageIdData_ledgerId(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6,
                               TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageIdData(RestF,
                                     0,
                                     0,
                                     NewFValue,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

d_field_MessageIdData_entryId(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                              TrUserData)
    when N < 57 ->
    d_field_MessageIdData_entryId(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  TrUserData);
d_field_MessageIdData_entryId(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, _, F@_3, F@_4, F@_5, F@_6,
                              TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageIdData(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     NewFValue,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

d_field_MessageIdData_partition(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                TrUserData)
    when N < 57 ->
    d_field_MessageIdData_partition(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    TrUserData);
d_field_MessageIdData_partition(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, _, F@_4, F@_5, F@_6,
                                TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageIdData(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     NewFValue,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

d_field_MessageIdData_batch_index(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  TrUserData)
    when N < 57 ->
    d_field_MessageIdData_batch_index(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      TrUserData);
d_field_MessageIdData_batch_index(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, _, F@_5, F@_6,
                                  TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageIdData(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     NewFValue,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

d_field_MessageIdData_ack_set(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                              TrUserData)
    when N < 57 ->
    d_field_MessageIdData_ack_set(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  TrUserData);
d_field_MessageIdData_ack_set(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, Prev, F@_6,
                              TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:64/signed-native>> = <<(X bsl N +
                                                                Acc):64/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageIdData(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     cons(NewFValue, Prev, TrUserData),
                                     F@_6,
                                     TrUserData).

d_pfield_MessageIdData_ack_set(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                               TrUserData)
    when N < 57 ->
    d_pfield_MessageIdData_ack_set(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   TrUserData);
d_pfield_MessageIdData_ack_set(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, E, F@_6,
                               TrUserData) ->
    Len = X bsl N + Acc,
    <<PackedBytes:Len/binary, Rest2/binary>> = Rest,
    NewSeq =
        d_packed_field_MessageIdData_ack_set(PackedBytes,
                                             0,
                                             0,
                                             E,
                                             TrUserData),
    dfp_read_field_def_MessageIdData(Rest2,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     NewSeq,
                                     F@_6,
                                     TrUserData).

d_packed_field_MessageIdData_ack_set(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, AccSeq, TrUserData)
    when N < 57 ->
    d_packed_field_MessageIdData_ack_set(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         AccSeq,
                                         TrUserData);
d_packed_field_MessageIdData_ack_set(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, AccSeq, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:64/signed-native>> = <<(X bsl N +
                                                                Acc):64/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    d_packed_field_MessageIdData_ack_set(RestF,
                                         0,
                                         0,
                                         [NewFValue | AccSeq],
                                         TrUserData);
d_packed_field_MessageIdData_ack_set(<<>>, 0, 0, AccSeq,
                                     _) ->
    AccSeq.

d_field_MessageIdData_batch_size(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData)
    when N < 57 ->
    d_field_MessageIdData_batch_size(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData);
d_field_MessageIdData_batch_size(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, _,
                                 TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageIdData(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     NewFValue,
                                     TrUserData).

skip_varint_MessageIdData(<<1:1, _:7, Rest/binary>>, Z1,
                          Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    skip_varint_MessageIdData(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              F@_5,
                              F@_6,
                              TrUserData);
skip_varint_MessageIdData(<<0:1, _:7, Rest/binary>>, Z1,
                          Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    dfp_read_field_def_MessageIdData(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

skip_length_delimited_MessageIdData(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    TrUserData)
    when N < 57 ->
    skip_length_delimited_MessageIdData(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        TrUserData);
skip_length_delimited_MessageIdData(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_MessageIdData(Rest2,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

skip_group_MessageIdData(Bin, FNum, Z2, F@_1, F@_2,
                         F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_MessageIdData(Rest,
                                     0,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

skip_32_MessageIdData(<<_:32, Rest/binary>>, Z1, Z2,
                      F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    dfp_read_field_def_MessageIdData(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

skip_64_MessageIdData(<<_:64, Rest/binary>>, Z1, Z2,
                      F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    dfp_read_field_def_MessageIdData(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData).

decode_msg_KeyValue(Bin, TrUserData) ->
    dfp_read_field_def_KeyValue(Bin,
                                0,
                                0,
                                id('$undef', TrUserData),
                                id('$undef', TrUserData),
                                TrUserData).

dfp_read_field_def_KeyValue(<<10, Rest/binary>>, Z1, Z2,
                            F@_1, F@_2, TrUserData) ->
    d_field_KeyValue_key(Rest,
                         Z1,
                         Z2,
                         F@_1,
                         F@_2,
                         TrUserData);
dfp_read_field_def_KeyValue(<<18, Rest/binary>>, Z1, Z2,
                            F@_1, F@_2, TrUserData) ->
    d_field_KeyValue_value(Rest,
                           Z1,
                           Z2,
                           F@_1,
                           F@_2,
                           TrUserData);
dfp_read_field_def_KeyValue(<<>>, 0, 0, F@_1, F@_2,
                            _) ->
    #{key => F@_1, value => F@_2};
dfp_read_field_def_KeyValue(Other, Z1, Z2, F@_1, F@_2,
                            TrUserData) ->
    dg_read_field_def_KeyValue(Other,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               TrUserData).

dg_read_field_def_KeyValue(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_KeyValue(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               TrUserData);
dg_read_field_def_KeyValue(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_KeyValue_key(Rest,
                                 0,
                                 0,
                                 F@_1,
                                 F@_2,
                                 TrUserData);
        18 ->
            d_field_KeyValue_value(Rest,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_KeyValue(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         TrUserData);
                1 ->
                    skip_64_KeyValue(Rest, 0, 0, F@_1, F@_2, TrUserData);
                2 ->
                    skip_length_delimited_KeyValue(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData);
                3 ->
                    skip_group_KeyValue(Rest,
                                        Key bsr 3,
                                        0,
                                        F@_1,
                                        F@_2,
                                        TrUserData);
                5 ->
                    skip_32_KeyValue(Rest, 0, 0, F@_1, F@_2, TrUserData)
            end
    end;
dg_read_field_def_KeyValue(<<>>, 0, 0, F@_1, F@_2, _) ->
    #{key => F@_1, value => F@_2}.

d_field_KeyValue_key(<<1:1, X:7, Rest/binary>>, N, Acc,
                     F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_KeyValue_key(Rest,
                         N + 7,
                         X bsl N + Acc,
                         F@_1,
                         F@_2,
                         TrUserData);
d_field_KeyValue_key(<<0:1, X:7, Rest/binary>>, N, Acc,
                     _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_KeyValue(RestF,
                                0,
                                0,
                                NewFValue,
                                F@_2,
                                TrUserData).

d_field_KeyValue_value(<<1:1, X:7, Rest/binary>>, N,
                       Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_KeyValue_value(Rest,
                           N + 7,
                           X bsl N + Acc,
                           F@_1,
                           F@_2,
                           TrUserData);
d_field_KeyValue_value(<<0:1, X:7, Rest/binary>>, N,
                       Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_KeyValue(RestF,
                                0,
                                0,
                                F@_1,
                                NewFValue,
                                TrUserData).

skip_varint_KeyValue(<<1:1, _:7, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    skip_varint_KeyValue(Rest,
                         Z1,
                         Z2,
                         F@_1,
                         F@_2,
                         TrUserData);
skip_varint_KeyValue(<<0:1, _:7, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_KeyValue(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_length_delimited_KeyValue(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_KeyValue(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   TrUserData);
skip_length_delimited_KeyValue(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_KeyValue(Rest2,
                                0,
                                0,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_group_KeyValue(Bin, FNum, Z2, F@_1, F@_2,
                    TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_KeyValue(Rest,
                                0,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_32_KeyValue(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
                 F@_2, TrUserData) ->
    dfp_read_field_def_KeyValue(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_64_KeyValue(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
                 F@_2, TrUserData) ->
    dfp_read_field_def_KeyValue(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

decode_msg_KeyLongValue(Bin, TrUserData) ->
    dfp_read_field_def_KeyLongValue(Bin,
                                    0,
                                    0,
                                    id('$undef', TrUserData),
                                    id('$undef', TrUserData),
                                    TrUserData).

dfp_read_field_def_KeyLongValue(<<10, Rest/binary>>, Z1,
                                Z2, F@_1, F@_2, TrUserData) ->
    d_field_KeyLongValue_key(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             TrUserData);
dfp_read_field_def_KeyLongValue(<<16, Rest/binary>>, Z1,
                                Z2, F@_1, F@_2, TrUserData) ->
    d_field_KeyLongValue_value(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               TrUserData);
dfp_read_field_def_KeyLongValue(<<>>, 0, 0, F@_1, F@_2,
                                _) ->
    #{key => F@_1, value => F@_2};
dfp_read_field_def_KeyLongValue(Other, Z1, Z2, F@_1,
                                F@_2, TrUserData) ->
    dg_read_field_def_KeyLongValue(Other,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   TrUserData).

dg_read_field_def_KeyLongValue(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_KeyLongValue(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   TrUserData);
dg_read_field_def_KeyLongValue(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_KeyLongValue_key(Rest,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     TrUserData);
        16 ->
            d_field_KeyLongValue_value(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_KeyLongValue(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
                1 ->
                    skip_64_KeyLongValue(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         TrUserData);
                2 ->
                    skip_length_delimited_KeyLongValue(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       TrUserData);
                3 ->
                    skip_group_KeyLongValue(Rest,
                                            Key bsr 3,
                                            0,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
                5 ->
                    skip_32_KeyLongValue(Rest, 0, 0, F@_1, F@_2, TrUserData)
            end
    end;
dg_read_field_def_KeyLongValue(<<>>, 0, 0, F@_1, F@_2,
                               _) ->
    #{key => F@_1, value => F@_2}.

d_field_KeyLongValue_key(<<1:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_KeyLongValue_key(Rest,
                             N + 7,
                             X bsl N + Acc,
                             F@_1,
                             F@_2,
                             TrUserData);
d_field_KeyLongValue_key(<<0:1, X:7, Rest/binary>>, N,
                         Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_KeyLongValue(RestF,
                                    0,
                                    0,
                                    NewFValue,
                                    F@_2,
                                    TrUserData).

d_field_KeyLongValue_value(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_KeyLongValue_value(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               TrUserData);
d_field_KeyLongValue_value(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_KeyLongValue(RestF,
                                    0,
                                    0,
                                    F@_1,
                                    NewFValue,
                                    TrUserData).

skip_varint_KeyLongValue(<<1:1, _:7, Rest/binary>>, Z1,
                         Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_KeyLongValue(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             TrUserData);
skip_varint_KeyLongValue(<<0:1, _:7, Rest/binary>>, Z1,
                         Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_KeyLongValue(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

skip_length_delimited_KeyLongValue(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_KeyLongValue(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       TrUserData);
skip_length_delimited_KeyLongValue(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_KeyLongValue(Rest2,
                                    0,
                                    0,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

skip_group_KeyLongValue(Bin, FNum, Z2, F@_1, F@_2,
                        TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_KeyLongValue(Rest,
                                    0,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

skip_32_KeyLongValue(<<_:32, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_KeyLongValue(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

skip_64_KeyLongValue(<<_:64, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_KeyLongValue(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

decode_msg_IntRange(Bin, TrUserData) ->
    dfp_read_field_def_IntRange(Bin,
                                0,
                                0,
                                id('$undef', TrUserData),
                                id('$undef', TrUserData),
                                TrUserData).

dfp_read_field_def_IntRange(<<8, Rest/binary>>, Z1, Z2,
                            F@_1, F@_2, TrUserData) ->
    d_field_IntRange_start(Rest,
                           Z1,
                           Z2,
                           F@_1,
                           F@_2,
                           TrUserData);
dfp_read_field_def_IntRange(<<16, Rest/binary>>, Z1, Z2,
                            F@_1, F@_2, TrUserData) ->
    d_field_IntRange_end(Rest,
                         Z1,
                         Z2,
                         F@_1,
                         F@_2,
                         TrUserData);
dfp_read_field_def_IntRange(<<>>, 0, 0, F@_1, F@_2,
                            _) ->
    #{start => F@_1, 'end' => F@_2};
dfp_read_field_def_IntRange(Other, Z1, Z2, F@_1, F@_2,
                            TrUserData) ->
    dg_read_field_def_IntRange(Other,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               TrUserData).

dg_read_field_def_IntRange(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_IntRange(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               TrUserData);
dg_read_field_def_IntRange(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_IntRange_start(Rest,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   TrUserData);
        16 ->
            d_field_IntRange_end(Rest,
                                 0,
                                 0,
                                 F@_1,
                                 F@_2,
                                 TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_IntRange(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         TrUserData);
                1 ->
                    skip_64_IntRange(Rest, 0, 0, F@_1, F@_2, TrUserData);
                2 ->
                    skip_length_delimited_IntRange(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData);
                3 ->
                    skip_group_IntRange(Rest,
                                        Key bsr 3,
                                        0,
                                        F@_1,
                                        F@_2,
                                        TrUserData);
                5 ->
                    skip_32_IntRange(Rest, 0, 0, F@_1, F@_2, TrUserData)
            end
    end;
dg_read_field_def_IntRange(<<>>, 0, 0, F@_1, F@_2, _) ->
    #{start => F@_1, 'end' => F@_2}.

d_field_IntRange_start(<<1:1, X:7, Rest/binary>>, N,
                       Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_IntRange_start(Rest,
                           N + 7,
                           X bsl N + Acc,
                           F@_1,
                           F@_2,
                           TrUserData);
d_field_IntRange_start(<<0:1, X:7, Rest/binary>>, N,
                       Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_IntRange(RestF,
                                0,
                                0,
                                NewFValue,
                                F@_2,
                                TrUserData).

d_field_IntRange_end(<<1:1, X:7, Rest/binary>>, N, Acc,
                     F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_IntRange_end(Rest,
                         N + 7,
                         X bsl N + Acc,
                         F@_1,
                         F@_2,
                         TrUserData);
d_field_IntRange_end(<<0:1, X:7, Rest/binary>>, N, Acc,
                     F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_IntRange(RestF,
                                0,
                                0,
                                F@_1,
                                NewFValue,
                                TrUserData).

skip_varint_IntRange(<<1:1, _:7, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    skip_varint_IntRange(Rest,
                         Z1,
                         Z2,
                         F@_1,
                         F@_2,
                         TrUserData);
skip_varint_IntRange(<<0:1, _:7, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_IntRange(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_length_delimited_IntRange(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_IntRange(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   TrUserData);
skip_length_delimited_IntRange(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_IntRange(Rest2,
                                0,
                                0,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_group_IntRange(Bin, FNum, Z2, F@_1, F@_2,
                    TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_IntRange(Rest,
                                0,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_32_IntRange(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
                 F@_2, TrUserData) ->
    dfp_read_field_def_IntRange(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_64_IntRange(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
                 F@_2, TrUserData) ->
    dfp_read_field_def_IntRange(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

decode_msg_EncryptionKeys(Bin, TrUserData) ->
    dfp_read_field_def_EncryptionKeys(Bin,
                                      0,
                                      0,
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id([], TrUserData),
                                      TrUserData).

dfp_read_field_def_EncryptionKeys(<<10, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_EncryptionKeys_key(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               F@_3,
                               TrUserData);
dfp_read_field_def_EncryptionKeys(<<18, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_EncryptionKeys_value(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 TrUserData);
dfp_read_field_def_EncryptionKeys(<<26, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_EncryptionKeys_metadata(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData);
dfp_read_field_def_EncryptionKeys(<<>>, 0, 0, F@_1,
                                  F@_2, R1, TrUserData) ->
    S1 = #{key => F@_1, value => F@_2},
    if R1 == '$undef' -> S1;
       true -> S1#{metadata => lists_reverse(R1, TrUserData)}
    end;
dfp_read_field_def_EncryptionKeys(Other, Z1, Z2, F@_1,
                                  F@_2, F@_3, TrUserData) ->
    dg_read_field_def_EncryptionKeys(Other,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

dg_read_field_def_EncryptionKeys(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_EncryptionKeys(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData);
dg_read_field_def_EncryptionKeys(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_EncryptionKeys_key(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       TrUserData);
        18 ->
            d_field_EncryptionKeys_value(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         TrUserData);
        26 ->
            d_field_EncryptionKeys_metadata(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_EncryptionKeys(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               TrUserData);
                1 ->
                    skip_64_EncryptionKeys(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
                2 ->
                    skip_length_delimited_EncryptionKeys(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         TrUserData);
                3 ->
                    skip_group_EncryptionKeys(Rest,
                                              Key bsr 3,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              TrUserData);
                5 ->
                    skip_32_EncryptionKeys(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData)
            end
    end;
dg_read_field_def_EncryptionKeys(<<>>, 0, 0, F@_1, F@_2,
                                 R1, TrUserData) ->
    S1 = #{key => F@_1, value => F@_2},
    if R1 == '$undef' -> S1;
       true -> S1#{metadata => lists_reverse(R1, TrUserData)}
    end.

d_field_EncryptionKeys_key(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_EncryptionKeys_key(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               F@_3,
                               TrUserData);
d_field_EncryptionKeys_key(<<0:1, X:7, Rest/binary>>, N,
                           Acc, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_EncryptionKeys(RestF,
                                      0,
                                      0,
                                      NewFValue,
                                      F@_2,
                                      F@_3,
                                      TrUserData).

d_field_EncryptionKeys_value(<<1:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_EncryptionKeys_value(Rest,
                                 N + 7,
                                 X bsl N + Acc,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 TrUserData);
d_field_EncryptionKeys_value(<<0:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_EncryptionKeys(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      NewFValue,
                                      F@_3,
                                      TrUserData).

d_field_EncryptionKeys_metadata(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_EncryptionKeys_metadata(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData);
d_field_EncryptionKeys_metadata(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, Prev, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_KeyValue(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_EncryptionKeys(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      cons(NewFValue, Prev, TrUserData),
                                      TrUserData).

skip_varint_EncryptionKeys(<<1:1, _:7, Rest/binary>>,
                           Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_EncryptionKeys(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               F@_3,
                               TrUserData);
skip_varint_EncryptionKeys(<<0:1, _:7, Rest/binary>>,
                           Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_EncryptionKeys(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      TrUserData).

skip_length_delimited_EncryptionKeys(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    skip_length_delimited_EncryptionKeys(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         TrUserData);
skip_length_delimited_EncryptionKeys(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_EncryptionKeys(Rest2,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      TrUserData).

skip_group_EncryptionKeys(Bin, FNum, Z2, F@_1, F@_2,
                          F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_EncryptionKeys(Rest,
                                      0,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      TrUserData).

skip_32_EncryptionKeys(<<_:32, Rest/binary>>, Z1, Z2,
                       F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_EncryptionKeys(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      TrUserData).

skip_64_EncryptionKeys(<<_:64, Rest/binary>>, Z1, Z2,
                       F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_EncryptionKeys(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      TrUserData).

decode_msg_MessageMetadata(Bin, TrUserData) ->
    dfp_read_field_def_MessageMetadata(Bin,
                                       0,
                                       0,
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id([], TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id([], TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id([], TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       TrUserData).

dfp_read_field_def_MessageMetadata(<<10, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_producer_name(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          TrUserData);
dfp_read_field_def_MessageMetadata(<<16, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_sequence_id(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        TrUserData);
dfp_read_field_def_MessageMetadata(<<24, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_publish_time(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         TrUserData);
dfp_read_field_def_MessageMetadata(<<34, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_properties(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData);
dfp_read_field_def_MessageMetadata(<<42, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_replicated_from(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
dfp_read_field_def_MessageMetadata(<<50, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_partition_key(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          TrUserData);
dfp_read_field_def_MessageMetadata(<<58, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_replicate_to(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         TrUserData);
dfp_read_field_def_MessageMetadata(<<64, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_compression(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        TrUserData);
dfp_read_field_def_MessageMetadata(<<72, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_uncompressed_size(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              F@_18,
                                              F@_19,
                                              F@_20,
                                              F@_21,
                                              F@_22,
                                              F@_23,
                                              F@_24,
                                              F@_25,
                                              F@_26,
                                              F@_27,
                                              F@_28,
                                              TrUserData);
dfp_read_field_def_MessageMetadata(<<88, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_num_messages_in_batch(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  TrUserData);
dfp_read_field_def_MessageMetadata(<<96, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_event_time(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData);
dfp_read_field_def_MessageMetadata(<<106, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_encryption_keys(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
dfp_read_field_def_MessageMetadata(<<114, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_encryption_algo(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
dfp_read_field_def_MessageMetadata(<<122, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_encryption_param(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             TrUserData);
dfp_read_field_def_MessageMetadata(<<130, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_schema_version(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           F@_18,
                                           F@_19,
                                           F@_20,
                                           F@_21,
                                           F@_22,
                                           F@_23,
                                           F@_24,
                                           F@_25,
                                           F@_26,
                                           F@_27,
                                           F@_28,
                                           TrUserData);
dfp_read_field_def_MessageMetadata(<<136, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_partition_key_b64_encoded(Rest,
                                                      Z1,
                                                      Z2,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      F@_16,
                                                      F@_17,
                                                      F@_18,
                                                      F@_19,
                                                      F@_20,
                                                      F@_21,
                                                      F@_22,
                                                      F@_23,
                                                      F@_24,
                                                      F@_25,
                                                      F@_26,
                                                      F@_27,
                                                      F@_28,
                                                      TrUserData);
dfp_read_field_def_MessageMetadata(<<146, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_ordering_key(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         TrUserData);
dfp_read_field_def_MessageMetadata(<<152, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_deliver_at_time(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
dfp_read_field_def_MessageMetadata(<<160, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_marker_type(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        TrUserData);
dfp_read_field_def_MessageMetadata(<<176, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_txnid_least_bits(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             TrUserData);
dfp_read_field_def_MessageMetadata(<<184, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_txnid_most_bits(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
dfp_read_field_def_MessageMetadata(<<192, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_highest_sequence_id(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                F@_18,
                                                F@_19,
                                                F@_20,
                                                F@_21,
                                                F@_22,
                                                F@_23,
                                                F@_24,
                                                F@_25,
                                                F@_26,
                                                F@_27,
                                                F@_28,
                                                TrUserData);
dfp_read_field_def_MessageMetadata(<<200, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_null_value(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData);
dfp_read_field_def_MessageMetadata(<<210, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_uuid(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 F@_8,
                                 F@_9,
                                 F@_10,
                                 F@_11,
                                 F@_12,
                                 F@_13,
                                 F@_14,
                                 F@_15,
                                 F@_16,
                                 F@_17,
                                 F@_18,
                                 F@_19,
                                 F@_20,
                                 F@_21,
                                 F@_22,
                                 F@_23,
                                 F@_24,
                                 F@_25,
                                 F@_26,
                                 F@_27,
                                 F@_28,
                                 TrUserData);
dfp_read_field_def_MessageMetadata(<<216, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_num_chunks_from_msg(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                F@_18,
                                                F@_19,
                                                F@_20,
                                                F@_21,
                                                F@_22,
                                                F@_23,
                                                F@_24,
                                                F@_25,
                                                F@_26,
                                                F@_27,
                                                F@_28,
                                                TrUserData);
dfp_read_field_def_MessageMetadata(<<224, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_total_chunk_msg_size(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 TrUserData);
dfp_read_field_def_MessageMetadata(<<232, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_chunk_id(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     TrUserData);
dfp_read_field_def_MessageMetadata(<<240, 1,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    d_field_MessageMetadata_null_partition_key(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               TrUserData);
dfp_read_field_def_MessageMetadata(<<>>, 0, 0, F@_1,
                                   F@_2, F@_3, R1, F@_5, F@_6, R2, F@_8, F@_9,
                                   F@_10, F@_11, R3, F@_13, F@_14, F@_15, F@_16,
                                   F@_17, F@_18, F@_19, F@_20, F@_21, F@_22,
                                   F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                                   TrUserData) ->
    S1 = #{producer_name => F@_1, sequence_id => F@_2,
           publish_time => F@_3,
           replicate_to => lists_reverse(R2, TrUserData)},
    S2 = if R1 == '$undef' -> S1;
            true -> S1#{properties => lists_reverse(R1, TrUserData)}
         end,
    S3 = if F@_5 == '$undef' -> S2;
            true -> S2#{replicated_from => F@_5}
         end,
    S4 = if F@_6 == '$undef' -> S3;
            true -> S3#{partition_key => F@_6}
         end,
    S5 = if F@_8 == '$undef' -> S4;
            true -> S4#{compression => F@_8}
         end,
    S6 = if F@_9 == '$undef' -> S5;
            true -> S5#{uncompressed_size => F@_9}
         end,
    S7 = if F@_10 == '$undef' -> S6;
            true -> S6#{num_messages_in_batch => F@_10}
         end,
    S8 = if F@_11 == '$undef' -> S7;
            true -> S7#{event_time => F@_11}
         end,
    S9 = if R3 == '$undef' -> S8;
            true ->
                S8#{encryption_keys => lists_reverse(R3, TrUserData)}
         end,
    S10 = if F@_13 == '$undef' -> S9;
             true -> S9#{encryption_algo => F@_13}
          end,
    S11 = if F@_14 == '$undef' -> S10;
             true -> S10#{encryption_param => F@_14}
          end,
    S12 = if F@_15 == '$undef' -> S11;
             true -> S11#{schema_version => F@_15}
          end,
    S13 = if F@_16 == '$undef' -> S12;
             true -> S12#{partition_key_b64_encoded => F@_16}
          end,
    S14 = if F@_17 == '$undef' -> S13;
             true -> S13#{ordering_key => F@_17}
          end,
    S15 = if F@_18 == '$undef' -> S14;
             true -> S14#{deliver_at_time => F@_18}
          end,
    S16 = if F@_19 == '$undef' -> S15;
             true -> S15#{marker_type => F@_19}
          end,
    S17 = if F@_20 == '$undef' -> S16;
             true -> S16#{txnid_least_bits => F@_20}
          end,
    S18 = if F@_21 == '$undef' -> S17;
             true -> S17#{txnid_most_bits => F@_21}
          end,
    S19 = if F@_22 == '$undef' -> S18;
             true -> S18#{highest_sequence_id => F@_22}
          end,
    S20 = if F@_23 == '$undef' -> S19;
             true -> S19#{null_value => F@_23}
          end,
    S21 = if F@_24 == '$undef' -> S20;
             true -> S20#{uuid => F@_24}
          end,
    S22 = if F@_25 == '$undef' -> S21;
             true -> S21#{num_chunks_from_msg => F@_25}
          end,
    S23 = if F@_26 == '$undef' -> S22;
             true -> S22#{total_chunk_msg_size => F@_26}
          end,
    S24 = if F@_27 == '$undef' -> S23;
             true -> S23#{chunk_id => F@_27}
          end,
    if F@_28 == '$undef' -> S24;
       true -> S24#{null_partition_key => F@_28}
    end;
dfp_read_field_def_MessageMetadata(Other, Z1, Z2, F@_1,
                                   F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                                   F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                                   F@_15, F@_16, F@_17, F@_18, F@_19, F@_20,
                                   F@_21, F@_22, F@_23, F@_24, F@_25, F@_26,
                                   F@_27, F@_28, TrUserData) ->
    dg_read_field_def_MessageMetadata(Other,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      F@_18,
                                      F@_19,
                                      F@_20,
                                      F@_21,
                                      F@_22,
                                      F@_23,
                                      F@_24,
                                      F@_25,
                                      F@_26,
                                      F@_27,
                                      F@_28,
                                      TrUserData).

dg_read_field_def_MessageMetadata(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                  F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                  F@_26, F@_27, F@_28, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_MessageMetadata(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      F@_18,
                                      F@_19,
                                      F@_20,
                                      F@_21,
                                      F@_22,
                                      F@_23,
                                      F@_24,
                                      F@_25,
                                      F@_26,
                                      F@_27,
                                      F@_28,
                                      TrUserData);
dg_read_field_def_MessageMetadata(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                  F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                  F@_26, F@_27, F@_28, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_MessageMetadata_producer_name(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  TrUserData);
        16 ->
            d_field_MessageMetadata_sequence_id(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                F@_18,
                                                F@_19,
                                                F@_20,
                                                F@_21,
                                                F@_22,
                                                F@_23,
                                                F@_24,
                                                F@_25,
                                                F@_26,
                                                F@_27,
                                                F@_28,
                                                TrUserData);
        24 ->
            d_field_MessageMetadata_publish_time(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 TrUserData);
        34 ->
            d_field_MessageMetadata_properties(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               TrUserData);
        42 ->
            d_field_MessageMetadata_replicated_from(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    F@_16,
                                                    F@_17,
                                                    F@_18,
                                                    F@_19,
                                                    F@_20,
                                                    F@_21,
                                                    F@_22,
                                                    F@_23,
                                                    F@_24,
                                                    F@_25,
                                                    F@_26,
                                                    F@_27,
                                                    F@_28,
                                                    TrUserData);
        50 ->
            d_field_MessageMetadata_partition_key(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  TrUserData);
        58 ->
            d_field_MessageMetadata_replicate_to(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 TrUserData);
        64 ->
            d_field_MessageMetadata_compression(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                F@_18,
                                                F@_19,
                                                F@_20,
                                                F@_21,
                                                F@_22,
                                                F@_23,
                                                F@_24,
                                                F@_25,
                                                F@_26,
                                                F@_27,
                                                F@_28,
                                                TrUserData);
        72 ->
            d_field_MessageMetadata_uncompressed_size(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      F@_16,
                                                      F@_17,
                                                      F@_18,
                                                      F@_19,
                                                      F@_20,
                                                      F@_21,
                                                      F@_22,
                                                      F@_23,
                                                      F@_24,
                                                      F@_25,
                                                      F@_26,
                                                      F@_27,
                                                      F@_28,
                                                      TrUserData);
        88 ->
            d_field_MessageMetadata_num_messages_in_batch(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          F@_18,
                                                          F@_19,
                                                          F@_20,
                                                          F@_21,
                                                          F@_22,
                                                          F@_23,
                                                          F@_24,
                                                          F@_25,
                                                          F@_26,
                                                          F@_27,
                                                          F@_28,
                                                          TrUserData);
        96 ->
            d_field_MessageMetadata_event_time(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               TrUserData);
        106 ->
            d_field_MessageMetadata_encryption_keys(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    F@_16,
                                                    F@_17,
                                                    F@_18,
                                                    F@_19,
                                                    F@_20,
                                                    F@_21,
                                                    F@_22,
                                                    F@_23,
                                                    F@_24,
                                                    F@_25,
                                                    F@_26,
                                                    F@_27,
                                                    F@_28,
                                                    TrUserData);
        114 ->
            d_field_MessageMetadata_encryption_algo(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    F@_16,
                                                    F@_17,
                                                    F@_18,
                                                    F@_19,
                                                    F@_20,
                                                    F@_21,
                                                    F@_22,
                                                    F@_23,
                                                    F@_24,
                                                    F@_25,
                                                    F@_26,
                                                    F@_27,
                                                    F@_28,
                                                    TrUserData);
        122 ->
            d_field_MessageMetadata_encryption_param(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     TrUserData);
        130 ->
            d_field_MessageMetadata_schema_version(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   F@_7,
                                                   F@_8,
                                                   F@_9,
                                                   F@_10,
                                                   F@_11,
                                                   F@_12,
                                                   F@_13,
                                                   F@_14,
                                                   F@_15,
                                                   F@_16,
                                                   F@_17,
                                                   F@_18,
                                                   F@_19,
                                                   F@_20,
                                                   F@_21,
                                                   F@_22,
                                                   F@_23,
                                                   F@_24,
                                                   F@_25,
                                                   F@_26,
                                                   F@_27,
                                                   F@_28,
                                                   TrUserData);
        136 ->
            d_field_MessageMetadata_partition_key_b64_encoded(Rest,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              F@_6,
                                                              F@_7,
                                                              F@_8,
                                                              F@_9,
                                                              F@_10,
                                                              F@_11,
                                                              F@_12,
                                                              F@_13,
                                                              F@_14,
                                                              F@_15,
                                                              F@_16,
                                                              F@_17,
                                                              F@_18,
                                                              F@_19,
                                                              F@_20,
                                                              F@_21,
                                                              F@_22,
                                                              F@_23,
                                                              F@_24,
                                                              F@_25,
                                                              F@_26,
                                                              F@_27,
                                                              F@_28,
                                                              TrUserData);
        146 ->
            d_field_MessageMetadata_ordering_key(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 TrUserData);
        152 ->
            d_field_MessageMetadata_deliver_at_time(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    F@_16,
                                                    F@_17,
                                                    F@_18,
                                                    F@_19,
                                                    F@_20,
                                                    F@_21,
                                                    F@_22,
                                                    F@_23,
                                                    F@_24,
                                                    F@_25,
                                                    F@_26,
                                                    F@_27,
                                                    F@_28,
                                                    TrUserData);
        160 ->
            d_field_MessageMetadata_marker_type(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                F@_18,
                                                F@_19,
                                                F@_20,
                                                F@_21,
                                                F@_22,
                                                F@_23,
                                                F@_24,
                                                F@_25,
                                                F@_26,
                                                F@_27,
                                                F@_28,
                                                TrUserData);
        176 ->
            d_field_MessageMetadata_txnid_least_bits(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     TrUserData);
        184 ->
            d_field_MessageMetadata_txnid_most_bits(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    F@_16,
                                                    F@_17,
                                                    F@_18,
                                                    F@_19,
                                                    F@_20,
                                                    F@_21,
                                                    F@_22,
                                                    F@_23,
                                                    F@_24,
                                                    F@_25,
                                                    F@_26,
                                                    F@_27,
                                                    F@_28,
                                                    TrUserData);
        192 ->
            d_field_MessageMetadata_highest_sequence_id(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        F@_11,
                                                        F@_12,
                                                        F@_13,
                                                        F@_14,
                                                        F@_15,
                                                        F@_16,
                                                        F@_17,
                                                        F@_18,
                                                        F@_19,
                                                        F@_20,
                                                        F@_21,
                                                        F@_22,
                                                        F@_23,
                                                        F@_24,
                                                        F@_25,
                                                        F@_26,
                                                        F@_27,
                                                        F@_28,
                                                        TrUserData);
        200 ->
            d_field_MessageMetadata_null_value(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               TrUserData);
        210 ->
            d_field_MessageMetadata_uuid(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         TrUserData);
        216 ->
            d_field_MessageMetadata_num_chunks_from_msg(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        F@_11,
                                                        F@_12,
                                                        F@_13,
                                                        F@_14,
                                                        F@_15,
                                                        F@_16,
                                                        F@_17,
                                                        F@_18,
                                                        F@_19,
                                                        F@_20,
                                                        F@_21,
                                                        F@_22,
                                                        F@_23,
                                                        F@_24,
                                                        F@_25,
                                                        F@_26,
                                                        F@_27,
                                                        F@_28,
                                                        TrUserData);
        224 ->
            d_field_MessageMetadata_total_chunk_msg_size(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         F@_7,
                                                         F@_8,
                                                         F@_9,
                                                         F@_10,
                                                         F@_11,
                                                         F@_12,
                                                         F@_13,
                                                         F@_14,
                                                         F@_15,
                                                         F@_16,
                                                         F@_17,
                                                         F@_18,
                                                         F@_19,
                                                         F@_20,
                                                         F@_21,
                                                         F@_22,
                                                         F@_23,
                                                         F@_24,
                                                         F@_25,
                                                         F@_26,
                                                         F@_27,
                                                         F@_28,
                                                         TrUserData);
        232 ->
            d_field_MessageMetadata_chunk_id(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             TrUserData);
        240 ->
            d_field_MessageMetadata_null_partition_key(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       F@_9,
                                                       F@_10,
                                                       F@_11,
                                                       F@_12,
                                                       F@_13,
                                                       F@_14,
                                                       F@_15,
                                                       F@_16,
                                                       F@_17,
                                                       F@_18,
                                                       F@_19,
                                                       F@_20,
                                                       F@_21,
                                                       F@_22,
                                                       F@_23,
                                                       F@_24,
                                                       F@_25,
                                                       F@_26,
                                                       F@_27,
                                                       F@_28,
                                                       TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_MessageMetadata(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                F@_18,
                                                F@_19,
                                                F@_20,
                                                F@_21,
                                                F@_22,
                                                F@_23,
                                                F@_24,
                                                F@_25,
                                                F@_26,
                                                F@_27,
                                                F@_28,
                                                TrUserData);
                1 ->
                    skip_64_MessageMetadata(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
                2 ->
                    skip_length_delimited_MessageMetadata(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          F@_18,
                                                          F@_19,
                                                          F@_20,
                                                          F@_21,
                                                          F@_22,
                                                          F@_23,
                                                          F@_24,
                                                          F@_25,
                                                          F@_26,
                                                          F@_27,
                                                          F@_28,
                                                          TrUserData);
                3 ->
                    skip_group_MessageMetadata(Rest,
                                               Key bsr 3,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               TrUserData);
                5 ->
                    skip_32_MessageMetadata(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData)
            end
    end;
dg_read_field_def_MessageMetadata(<<>>, 0, 0, F@_1,
                                  F@_2, F@_3, R1, F@_5, F@_6, R2, F@_8, F@_9,
                                  F@_10, F@_11, R3, F@_13, F@_14, F@_15, F@_16,
                                  F@_17, F@_18, F@_19, F@_20, F@_21, F@_22,
                                  F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                                  TrUserData) ->
    S1 = #{producer_name => F@_1, sequence_id => F@_2,
           publish_time => F@_3,
           replicate_to => lists_reverse(R2, TrUserData)},
    S2 = if R1 == '$undef' -> S1;
            true -> S1#{properties => lists_reverse(R1, TrUserData)}
         end,
    S3 = if F@_5 == '$undef' -> S2;
            true -> S2#{replicated_from => F@_5}
         end,
    S4 = if F@_6 == '$undef' -> S3;
            true -> S3#{partition_key => F@_6}
         end,
    S5 = if F@_8 == '$undef' -> S4;
            true -> S4#{compression => F@_8}
         end,
    S6 = if F@_9 == '$undef' -> S5;
            true -> S5#{uncompressed_size => F@_9}
         end,
    S7 = if F@_10 == '$undef' -> S6;
            true -> S6#{num_messages_in_batch => F@_10}
         end,
    S8 = if F@_11 == '$undef' -> S7;
            true -> S7#{event_time => F@_11}
         end,
    S9 = if R3 == '$undef' -> S8;
            true ->
                S8#{encryption_keys => lists_reverse(R3, TrUserData)}
         end,
    S10 = if F@_13 == '$undef' -> S9;
             true -> S9#{encryption_algo => F@_13}
          end,
    S11 = if F@_14 == '$undef' -> S10;
             true -> S10#{encryption_param => F@_14}
          end,
    S12 = if F@_15 == '$undef' -> S11;
             true -> S11#{schema_version => F@_15}
          end,
    S13 = if F@_16 == '$undef' -> S12;
             true -> S12#{partition_key_b64_encoded => F@_16}
          end,
    S14 = if F@_17 == '$undef' -> S13;
             true -> S13#{ordering_key => F@_17}
          end,
    S15 = if F@_18 == '$undef' -> S14;
             true -> S14#{deliver_at_time => F@_18}
          end,
    S16 = if F@_19 == '$undef' -> S15;
             true -> S15#{marker_type => F@_19}
          end,
    S17 = if F@_20 == '$undef' -> S16;
             true -> S16#{txnid_least_bits => F@_20}
          end,
    S18 = if F@_21 == '$undef' -> S17;
             true -> S17#{txnid_most_bits => F@_21}
          end,
    S19 = if F@_22 == '$undef' -> S18;
             true -> S18#{highest_sequence_id => F@_22}
          end,
    S20 = if F@_23 == '$undef' -> S19;
             true -> S19#{null_value => F@_23}
          end,
    S21 = if F@_24 == '$undef' -> S20;
             true -> S20#{uuid => F@_24}
          end,
    S22 = if F@_25 == '$undef' -> S21;
             true -> S21#{num_chunks_from_msg => F@_25}
          end,
    S23 = if F@_26 == '$undef' -> S22;
             true -> S22#{total_chunk_msg_size => F@_26}
          end,
    S24 = if F@_27 == '$undef' -> S23;
             true -> S23#{chunk_id => F@_27}
          end,
    if F@_28 == '$undef' -> S24;
       true -> S24#{null_partition_key => F@_28}
    end.

d_field_MessageMetadata_producer_name(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28,
                                      TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_producer_name(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          TrUserData);
d_field_MessageMetadata_producer_name(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6,
                                      F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                      F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                      F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                      F@_25, F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       NewFValue,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_sequence_id(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                    F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                    F@_25, F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_sequence_id(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        TrUserData);
d_field_MessageMetadata_sequence_id(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, _, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                    F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                    F@_25, F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       NewFValue,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_publish_time(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_publish_time(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         TrUserData);
d_field_MessageMetadata_publish_time(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, _, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       NewFValue,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_properties(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_properties(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData);
d_field_MessageMetadata_properties(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, Prev, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_KeyValue(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       cons(NewFValue, Prev, TrUserData),
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_replicated_from(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, F@_18, F@_19, F@_20, F@_21,
                                        F@_22, F@_23, F@_24, F@_25, F@_26,
                                        F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_replicated_from(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
d_field_MessageMetadata_replicated_from(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, _, F@_6,
                                        F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                        F@_13, F@_14, F@_15, F@_16, F@_17,
                                        F@_18, F@_19, F@_20, F@_21, F@_22,
                                        F@_23, F@_24, F@_25, F@_26, F@_27,
                                        F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       NewFValue,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_partition_key(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28,
                                      TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_partition_key(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          TrUserData);
d_field_MessageMetadata_partition_key(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, _,
                                      F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                      F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                      F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                      F@_25, F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       NewFValue,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_replicate_to(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_replicate_to(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         TrUserData);
d_field_MessageMetadata_replicate_to(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     Prev, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       cons(NewFValue, Prev, TrUserData),
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_compression(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                    F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                    F@_25, F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_compression(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        TrUserData);
d_field_MessageMetadata_compression(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, _, F@_9, F@_10, F@_11, F@_12, F@_13,
                                    F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                    F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                    F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_CompressionType(begin
                                                        <<Res:32/signed-native>> =
                                                            <<(X bsl N +
                                                                   Acc):32/unsigned-native>>,
                                                        id(Res, TrUserData)
                                                    end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       NewFValue,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_uncompressed_size(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                          F@_12, F@_13, F@_14, F@_15, F@_16,
                                          F@_17, F@_18, F@_19, F@_20, F@_21,
                                          F@_22, F@_23, F@_24, F@_25, F@_26,
                                          F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_uncompressed_size(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              F@_18,
                                              F@_19,
                                              F@_20,
                                              F@_21,
                                              F@_22,
                                              F@_23,
                                              F@_24,
                                              F@_25,
                                              F@_26,
                                              F@_27,
                                              F@_28,
                                              TrUserData);
d_field_MessageMetadata_uncompressed_size(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, _, F@_10, F@_11,
                                          F@_12, F@_13, F@_14, F@_15, F@_16,
                                          F@_17, F@_18, F@_19, F@_20, F@_21,
                                          F@_22, F@_23, F@_24, F@_25, F@_26,
                                          F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       NewFValue,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_num_messages_in_batch(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, F@_22, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28,
                                              TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_num_messages_in_batch(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  TrUserData);
d_field_MessageMetadata_num_messages_in_batch(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9, _,
                                              F@_11, F@_12, F@_13, F@_14, F@_15,
                                              F@_16, F@_17, F@_18, F@_19, F@_20,
                                              F@_21, F@_22, F@_23, F@_24, F@_25,
                                              F@_26, F@_27, F@_28,
                                              TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       NewFValue,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_event_time(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_event_time(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData);
d_field_MessageMetadata_event_time(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, _, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       NewFValue,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_encryption_keys(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, F@_18, F@_19, F@_20, F@_21,
                                        F@_22, F@_23, F@_24, F@_25, F@_26,
                                        F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_encryption_keys(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
d_field_MessageMetadata_encryption_keys(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        Prev, F@_13, F@_14, F@_15, F@_16, F@_17,
                                        F@_18, F@_19, F@_20, F@_21, F@_22,
                                        F@_23, F@_24, F@_25, F@_26, F@_27,
                                        F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_EncryptionKeys(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       cons(NewFValue, Prev, TrUserData),
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_encryption_algo(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, F@_18, F@_19, F@_20, F@_21,
                                        F@_22, F@_23, F@_24, F@_25, F@_26,
                                        F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_encryption_algo(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
d_field_MessageMetadata_encryption_algo(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, _, F@_14, F@_15, F@_16, F@_17,
                                        F@_18, F@_19, F@_20, F@_21, F@_22,
                                        F@_23, F@_24, F@_25, F@_26, F@_27,
                                        F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       NewFValue,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_encryption_param(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, F@_20, F@_21,
                                         F@_22, F@_23, F@_24, F@_25, F@_26,
                                         F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_encryption_param(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             TrUserData);
d_field_MessageMetadata_encryption_param(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, _, F@_15, F@_16, F@_17,
                                         F@_18, F@_19, F@_20, F@_21, F@_22,
                                         F@_23, F@_24, F@_25, F@_26, F@_27,
                                         F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       NewFValue,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_schema_version(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                       F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                       F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                       F@_24, F@_25, F@_26, F@_27, F@_28,
                                       TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_schema_version(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           F@_18,
                                           F@_19,
                                           F@_20,
                                           F@_21,
                                           F@_22,
                                           F@_23,
                                           F@_24,
                                           F@_25,
                                           F@_26,
                                           F@_27,
                                           F@_28,
                                           TrUserData);
d_field_MessageMetadata_schema_version(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                       F@_12, F@_13, F@_14, _, F@_16, F@_17,
                                       F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                       F@_24, F@_25, F@_26, F@_27, F@_28,
                                       TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       NewFValue,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_partition_key_b64_encoded(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, F@_6, F@_7, F@_8,
                                                  F@_9, F@_10, F@_11, F@_12,
                                                  F@_13, F@_14, F@_15, F@_16,
                                                  F@_17, F@_18, F@_19, F@_20,
                                                  F@_21, F@_22, F@_23, F@_24,
                                                  F@_25, F@_26, F@_27, F@_28,
                                                  TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_partition_key_b64_encoded(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      F@_16,
                                                      F@_17,
                                                      F@_18,
                                                      F@_19,
                                                      F@_20,
                                                      F@_21,
                                                      F@_22,
                                                      F@_23,
                                                      F@_24,
                                                      F@_25,
                                                      F@_26,
                                                      F@_27,
                                                      F@_28,
                                                      TrUserData);
d_field_MessageMetadata_partition_key_b64_encoded(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, F@_6, F@_7, F@_8,
                                                  F@_9, F@_10, F@_11, F@_12,
                                                  F@_13, F@_14, F@_15, _, F@_17,
                                                  F@_18, F@_19, F@_20, F@_21,
                                                  F@_22, F@_23, F@_24, F@_25,
                                                  F@_26, F@_27, F@_28,
                                                  TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       NewFValue,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_ordering_key(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_ordering_key(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         TrUserData);
d_field_MessageMetadata_ordering_key(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, _, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       NewFValue,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_deliver_at_time(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, F@_18, F@_19, F@_20, F@_21,
                                        F@_22, F@_23, F@_24, F@_25, F@_26,
                                        F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_deliver_at_time(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
d_field_MessageMetadata_deliver_at_time(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, _, F@_19, F@_20, F@_21, F@_22,
                                        F@_23, F@_24, F@_25, F@_26, F@_27,
                                        F@_28, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:64/signed-native>> = <<(X bsl N +
                                                                Acc):64/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       NewFValue,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_marker_type(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                    F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                    F@_25, F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_marker_type(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        TrUserData);
d_field_MessageMetadata_marker_type(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, _,
                                    F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                    F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       NewFValue,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_txnid_least_bits(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, F@_20, F@_21,
                                         F@_22, F@_23, F@_24, F@_25, F@_26,
                                         F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_txnid_least_bits(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             TrUserData);
d_field_MessageMetadata_txnid_least_bits(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, _, F@_21, F@_22,
                                         F@_23, F@_24, F@_25, F@_26, F@_27,
                                         F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       NewFValue,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_txnid_most_bits(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, F@_18, F@_19, F@_20, F@_21,
                                        F@_22, F@_23, F@_24, F@_25, F@_26,
                                        F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_txnid_most_bits(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            TrUserData);
d_field_MessageMetadata_txnid_most_bits(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, F@_18, F@_19, F@_20, _, F@_22,
                                        F@_23, F@_24, F@_25, F@_26, F@_27,
                                        F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       NewFValue,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_highest_sequence_id(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            F@_11, F@_12, F@_13, F@_14, F@_15,
                                            F@_16, F@_17, F@_18, F@_19, F@_20,
                                            F@_21, F@_22, F@_23, F@_24, F@_25,
                                            F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_highest_sequence_id(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                F@_18,
                                                F@_19,
                                                F@_20,
                                                F@_21,
                                                F@_22,
                                                F@_23,
                                                F@_24,
                                                F@_25,
                                                F@_26,
                                                F@_27,
                                                F@_28,
                                                TrUserData);
d_field_MessageMetadata_highest_sequence_id(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            F@_11, F@_12, F@_13, F@_14, F@_15,
                                            F@_16, F@_17, F@_18, F@_19, F@_20,
                                            F@_21, _, F@_23, F@_24, F@_25,
                                            F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       NewFValue,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_null_value(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_null_value(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData);
d_field_MessageMetadata_null_value(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, _, F@_24, F@_25, F@_26,
                                   F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       NewFValue,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_uuid(<<1:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                             F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                             F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                             F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                             TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_uuid(Rest,
                                 N + 7,
                                 X bsl N + Acc,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 F@_8,
                                 F@_9,
                                 F@_10,
                                 F@_11,
                                 F@_12,
                                 F@_13,
                                 F@_14,
                                 F@_15,
                                 F@_16,
                                 F@_17,
                                 F@_18,
                                 F@_19,
                                 F@_20,
                                 F@_21,
                                 F@_22,
                                 F@_23,
                                 F@_24,
                                 F@_25,
                                 F@_26,
                                 F@_27,
                                 F@_28,
                                 TrUserData);
d_field_MessageMetadata_uuid(<<0:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                             F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                             F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                             F@_22, F@_23, _, F@_25, F@_26, F@_27, F@_28,
                             TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       NewFValue,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_num_chunks_from_msg(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            F@_11, F@_12, F@_13, F@_14, F@_15,
                                            F@_16, F@_17, F@_18, F@_19, F@_20,
                                            F@_21, F@_22, F@_23, F@_24, F@_25,
                                            F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_num_chunks_from_msg(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                F@_18,
                                                F@_19,
                                                F@_20,
                                                F@_21,
                                                F@_22,
                                                F@_23,
                                                F@_24,
                                                F@_25,
                                                F@_26,
                                                F@_27,
                                                F@_28,
                                                TrUserData);
d_field_MessageMetadata_num_chunks_from_msg(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            F@_11, F@_12, F@_13, F@_14, F@_15,
                                            F@_16, F@_17, F@_18, F@_19, F@_20,
                                            F@_21, F@_22, F@_23, F@_24, _,
                                            F@_26, F@_27, F@_28, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       NewFValue,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_total_chunk_msg_size(<<1:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, F@_6, F@_7, F@_8, F@_9,
                                             F@_10, F@_11, F@_12, F@_13, F@_14,
                                             F@_15, F@_16, F@_17, F@_18, F@_19,
                                             F@_20, F@_21, F@_22, F@_23, F@_24,
                                             F@_25, F@_26, F@_27, F@_28,
                                             TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_total_chunk_msg_size(Rest,
                                                 N + 7,
                                                 X bsl N + Acc,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 TrUserData);
d_field_MessageMetadata_total_chunk_msg_size(<<0:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, F@_6, F@_7, F@_8, F@_9,
                                             F@_10, F@_11, F@_12, F@_13, F@_14,
                                             F@_15, F@_16, F@_17, F@_18, F@_19,
                                             F@_20, F@_21, F@_22, F@_23, F@_24,
                                             F@_25, _, F@_27, F@_28,
                                             TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       NewFValue,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_chunk_id(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                 F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                 F@_26, F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_chunk_id(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     TrUserData);
d_field_MessageMetadata_chunk_id(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                 F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                 F@_26, _, F@_28, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       NewFValue,
                                       F@_28,
                                       TrUserData).

d_field_MessageMetadata_null_partition_key(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                           F@_12, F@_13, F@_14, F@_15, F@_16,
                                           F@_17, F@_18, F@_19, F@_20, F@_21,
                                           F@_22, F@_23, F@_24, F@_25, F@_26,
                                           F@_27, F@_28, TrUserData)
    when N < 57 ->
    d_field_MessageMetadata_null_partition_key(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               TrUserData);
d_field_MessageMetadata_null_partition_key(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                           F@_12, F@_13, F@_14, F@_15, F@_16,
                                           F@_17, F@_18, F@_19, F@_20, F@_21,
                                           F@_22, F@_23, F@_24, F@_25, F@_26,
                                           F@_27, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_MessageMetadata(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       NewFValue,
                                       TrUserData).

skip_varint_MessageMetadata(<<1:1, _:7, Rest/binary>>,
                            Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                            F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                            F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                            TrUserData) ->
    skip_varint_MessageMetadata(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                F@_9,
                                F@_10,
                                F@_11,
                                F@_12,
                                F@_13,
                                F@_14,
                                F@_15,
                                F@_16,
                                F@_17,
                                F@_18,
                                F@_19,
                                F@_20,
                                F@_21,
                                F@_22,
                                F@_23,
                                F@_24,
                                F@_25,
                                F@_26,
                                F@_27,
                                F@_28,
                                TrUserData);
skip_varint_MessageMetadata(<<0:1, _:7, Rest/binary>>,
                            Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                            F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                            F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                            TrUserData) ->
    dfp_read_field_def_MessageMetadata(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

skip_length_delimited_MessageMetadata(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28,
                                      TrUserData)
    when N < 57 ->
    skip_length_delimited_MessageMetadata(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          TrUserData);
skip_length_delimited_MessageMetadata(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28,
                                      TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_MessageMetadata(Rest2,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

skip_group_MessageMetadata(Bin, FNum, Z2, F@_1, F@_2,
                           F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                           F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                           F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                           F@_25, F@_26, F@_27, F@_28, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_MessageMetadata(Rest,
                                       0,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

skip_32_MessageMetadata(<<_:32, Rest/binary>>, Z1, Z2,
                        F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                        F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                        F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                        F@_26, F@_27, F@_28, TrUserData) ->
    dfp_read_field_def_MessageMetadata(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

skip_64_MessageMetadata(<<_:64, Rest/binary>>, Z1, Z2,
                        F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                        F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                        F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                        F@_26, F@_27, F@_28, TrUserData) ->
    dfp_read_field_def_MessageMetadata(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       TrUserData).

decode_msg_SingleMessageMetadata(Bin, TrUserData) ->
    dfp_read_field_def_SingleMessageMetadata(Bin,
                                             0,
                                             0,
                                             id([], TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             TrUserData).

dfp_read_field_def_SingleMessageMetadata(<<10,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_properties(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<18,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_partition_key(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<24,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_payload_size(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<32,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_compacted_out(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<40,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_event_time(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<48,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_partition_key_b64_encoded(Rest,
                                                            Z1,
                                                            Z2,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            F@_6,
                                                            F@_7,
                                                            F@_8,
                                                            F@_9,
                                                            F@_10,
                                                            TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<58,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_ordering_key(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<64,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_sequence_id(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<72,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_null_value(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<80,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    d_field_SingleMessageMetadata_null_partition_key(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     TrUserData);
dfp_read_field_def_SingleMessageMetadata(<<>>, 0, 0, R1,
                                         F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                                         F@_8, F@_9, F@_10, TrUserData) ->
    S1 = #{payload_size => F@_3},
    S2 = if R1 == '$undef' -> S1;
            true -> S1#{properties => lists_reverse(R1, TrUserData)}
         end,
    S3 = if F@_2 == '$undef' -> S2;
            true -> S2#{partition_key => F@_2}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{compacted_out => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{event_time => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{partition_key_b64_encoded => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{ordering_key => F@_7}
         end,
    S8 = if F@_8 == '$undef' -> S7;
            true -> S7#{sequence_id => F@_8}
         end,
    S9 = if F@_9 == '$undef' -> S8;
            true -> S8#{null_value => F@_9}
         end,
    if F@_10 == '$undef' -> S9;
       true -> S9#{null_partition_key => F@_10}
    end;
dfp_read_field_def_SingleMessageMetadata(Other, Z1, Z2,
                                         F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                         F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    dg_read_field_def_SingleMessageMetadata(Other,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            TrUserData).

dg_read_field_def_SingleMessageMetadata(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10,
                                        TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_SingleMessageMetadata(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            TrUserData);
dg_read_field_def_SingleMessageMetadata(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10,
                                        TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_SingleMessageMetadata_properties(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     TrUserData);
        18 ->
            d_field_SingleMessageMetadata_partition_key(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        TrUserData);
        24 ->
            d_field_SingleMessageMetadata_payload_size(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       F@_9,
                                                       F@_10,
                                                       TrUserData);
        32 ->
            d_field_SingleMessageMetadata_compacted_out(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        TrUserData);
        40 ->
            d_field_SingleMessageMetadata_event_time(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     TrUserData);
        48 ->
            d_field_SingleMessageMetadata_partition_key_b64_encoded(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    F@_6,
                                                                    F@_7,
                                                                    F@_8,
                                                                    F@_9,
                                                                    F@_10,
                                                                    TrUserData);
        58 ->
            d_field_SingleMessageMetadata_ordering_key(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       F@_9,
                                                       F@_10,
                                                       TrUserData);
        64 ->
            d_field_SingleMessageMetadata_sequence_id(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      TrUserData);
        72 ->
            d_field_SingleMessageMetadata_null_value(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     TrUserData);
        80 ->
            d_field_SingleMessageMetadata_null_partition_key(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             F@_7,
                                                             F@_8,
                                                             F@_9,
                                                             F@_10,
                                                             TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_SingleMessageMetadata(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      TrUserData);
                1 ->
                    skip_64_SingleMessageMetadata(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  TrUserData);
                2 ->
                    skip_length_delimited_SingleMessageMetadata(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                F@_6,
                                                                F@_7,
                                                                F@_8,
                                                                F@_9,
                                                                F@_10,
                                                                TrUserData);
                3 ->
                    skip_group_SingleMessageMetadata(Rest,
                                                     Key bsr 3,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     TrUserData);
                5 ->
                    skip_32_SingleMessageMetadata(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  TrUserData)
            end
    end;
dg_read_field_def_SingleMessageMetadata(<<>>, 0, 0, R1,
                                        F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                                        F@_8, F@_9, F@_10, TrUserData) ->
    S1 = #{payload_size => F@_3},
    S2 = if R1 == '$undef' -> S1;
            true -> S1#{properties => lists_reverse(R1, TrUserData)}
         end,
    S3 = if F@_2 == '$undef' -> S2;
            true -> S2#{partition_key => F@_2}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{compacted_out => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{event_time => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{partition_key_b64_encoded => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{ordering_key => F@_7}
         end,
    S8 = if F@_8 == '$undef' -> S7;
            true -> S7#{sequence_id => F@_8}
         end,
    S9 = if F@_9 == '$undef' -> S8;
            true -> S8#{null_value => F@_9}
         end,
    if F@_10 == '$undef' -> S9;
       true -> S9#{null_partition_key => F@_10}
    end.

d_field_SingleMessageMetadata_properties(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_properties(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData);
d_field_SingleMessageMetadata_properties(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, Prev, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_KeyValue(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             cons(NewFValue, Prev, TrUserData),
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_partition_key(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_partition_key(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                TrUserData);
d_field_SingleMessageMetadata_partition_key(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, _, F@_3, F@_4, F@_5,
                                            F@_6, F@_7, F@_8, F@_9, F@_10,
                                            TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             NewFValue,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_payload_size(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, F@_9, F@_10,
                                           TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_payload_size(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               TrUserData);
d_field_SingleMessageMetadata_payload_size(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, _, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, F@_9, F@_10,
                                           TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             NewFValue,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_compacted_out(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_compacted_out(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                TrUserData);
d_field_SingleMessageMetadata_compacted_out(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, _, F@_5,
                                            F@_6, F@_7, F@_8, F@_9, F@_10,
                                            TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             NewFValue,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_event_time(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_event_time(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData);
d_field_SingleMessageMetadata_event_time(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, _,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             NewFValue,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_partition_key_b64_encoded(<<1:1,
                                                          X:7, Rest/binary>>,
                                                        N, Acc, F@_1, F@_2,
                                                        F@_3, F@_4, F@_5, F@_6,
                                                        F@_7, F@_8, F@_9, F@_10,
                                                        TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_partition_key_b64_encoded(Rest,
                                                            N + 7,
                                                            X bsl N + Acc,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            F@_6,
                                                            F@_7,
                                                            F@_8,
                                                            F@_9,
                                                            F@_10,
                                                            TrUserData);
d_field_SingleMessageMetadata_partition_key_b64_encoded(<<0:1,
                                                          X:7, Rest/binary>>,
                                                        N, Acc, F@_1, F@_2,
                                                        F@_3, F@_4, F@_5, _,
                                                        F@_7, F@_8, F@_9, F@_10,
                                                        TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             NewFValue,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_ordering_key(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, F@_9, F@_10,
                                           TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_ordering_key(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               TrUserData);
d_field_SingleMessageMetadata_ordering_key(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, _, F@_8, F@_9, F@_10,
                                           TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             NewFValue,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_sequence_id(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10,
                                          TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_sequence_id(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              TrUserData);
d_field_SingleMessageMetadata_sequence_id(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, _, F@_9, F@_10,
                                          TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             NewFValue,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_null_value(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10,
                                         TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_null_value(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData);
d_field_SingleMessageMetadata_null_value(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, _, F@_10,
                                         TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             NewFValue,
                                             F@_10,
                                             TrUserData).

d_field_SingleMessageMetadata_null_partition_key(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8, F@_9,
                                                 F@_10, TrUserData)
    when N < 57 ->
    d_field_SingleMessageMetadata_null_partition_key(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     TrUserData);
d_field_SingleMessageMetadata_null_partition_key(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8, F@_9,
                                                 _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_SingleMessageMetadata(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             NewFValue,
                                             TrUserData).

skip_varint_SingleMessageMetadata(<<1:1, _:7,
                                    Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    skip_varint_SingleMessageMetadata(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData);
skip_varint_SingleMessageMetadata(<<0:1, _:7,
                                    Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    dfp_read_field_def_SingleMessageMetadata(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

skip_length_delimited_SingleMessageMetadata(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            TrUserData)
    when N < 57 ->
    skip_length_delimited_SingleMessageMetadata(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                TrUserData);
skip_length_delimited_SingleMessageMetadata(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_SingleMessageMetadata(Rest2,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

skip_group_SingleMessageMetadata(Bin, FNum, Z2, F@_1,
                                 F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                                 F@_10, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_SingleMessageMetadata(Rest,
                                             0,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

skip_32_SingleMessageMetadata(<<_:32, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, TrUserData) ->
    dfp_read_field_def_SingleMessageMetadata(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

skip_64_SingleMessageMetadata(<<_:64, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, TrUserData) ->
    dfp_read_field_def_SingleMessageMetadata(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData).

decode_msg_CommandConnect(Bin, TrUserData) ->
    dfp_read_field_def_CommandConnect(Bin,
                                      0,
                                      0,
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      TrUserData).

dfp_read_field_def_CommandConnect(<<10, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_client_version(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          TrUserData);
dfp_read_field_def_CommandConnect(<<16, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_auth_method(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       TrUserData);
dfp_read_field_def_CommandConnect(<<42, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_auth_method_name(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            TrUserData);
dfp_read_field_def_CommandConnect(<<26, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_auth_data(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     TrUserData);
dfp_read_field_def_CommandConnect(<<32, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_protocol_version(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            TrUserData);
dfp_read_field_def_CommandConnect(<<50, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_proxy_to_broker_url(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               TrUserData);
dfp_read_field_def_CommandConnect(<<58, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_original_principal(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              TrUserData);
dfp_read_field_def_CommandConnect(<<66, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_original_auth_data(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              TrUserData);
dfp_read_field_def_CommandConnect(<<74, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_original_auth_method(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                TrUserData);
dfp_read_field_def_CommandConnect(<<82, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    d_field_CommandConnect_feature_flags(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         TrUserData);
dfp_read_field_def_CommandConnect(<<>>, 0, 0, F@_1,
                                  F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                                  F@_9, F@_10, _) ->
    S1 = #{client_version => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{auth_method => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{auth_method_name => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{auth_data => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{protocol_version => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{proxy_to_broker_url => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{original_principal => F@_7}
         end,
    S8 = if F@_8 == '$undef' -> S7;
            true -> S7#{original_auth_data => F@_8}
         end,
    S9 = if F@_9 == '$undef' -> S8;
            true -> S8#{original_auth_method => F@_9}
         end,
    if F@_10 == '$undef' -> S9;
       true -> S9#{feature_flags => F@_10}
    end;
dfp_read_field_def_CommandConnect(Other, Z1, Z2, F@_1,
                                  F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                                  F@_9, F@_10, TrUserData) ->
    dg_read_field_def_CommandConnect(Other,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     TrUserData).

dg_read_field_def_CommandConnect(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandConnect(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     TrUserData);
dg_read_field_def_CommandConnect(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandConnect_client_version(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  TrUserData);
        16 ->
            d_field_CommandConnect_auth_method(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               TrUserData);
        42 ->
            d_field_CommandConnect_auth_method_name(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    TrUserData);
        26 ->
            d_field_CommandConnect_auth_data(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             TrUserData);
        32 ->
            d_field_CommandConnect_protocol_version(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    TrUserData);
        50 ->
            d_field_CommandConnect_proxy_to_broker_url(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       F@_9,
                                                       F@_10,
                                                       TrUserData);
        58 ->
            d_field_CommandConnect_original_principal(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      TrUserData);
        66 ->
            d_field_CommandConnect_original_auth_data(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      TrUserData);
        74 ->
            d_field_CommandConnect_original_auth_method(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        TrUserData);
        82 ->
            d_field_CommandConnect_feature_flags(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandConnect(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               TrUserData);
                1 ->
                    skip_64_CommandConnect(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           TrUserData);
                2 ->
                    skip_length_delimited_CommandConnect(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         F@_7,
                                                         F@_8,
                                                         F@_9,
                                                         F@_10,
                                                         TrUserData);
                3 ->
                    skip_group_CommandConnect(Rest,
                                              Key bsr 3,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              TrUserData);
                5 ->
                    skip_32_CommandConnect(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           TrUserData)
            end
    end;
dg_read_field_def_CommandConnect(<<>>, 0, 0, F@_1, F@_2,
                                 F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                                 F@_10, _) ->
    S1 = #{client_version => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{auth_method => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{auth_method_name => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{auth_data => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{protocol_version => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{proxy_to_broker_url => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{original_principal => F@_7}
         end,
    S8 = if F@_8 == '$undef' -> S7;
            true -> S7#{original_auth_data => F@_8}
         end,
    S9 = if F@_9 == '$undef' -> S8;
            true -> S8#{original_auth_method => F@_9}
         end,
    if F@_10 == '$undef' -> S9;
       true -> S9#{feature_flags => F@_10}
    end.

d_field_CommandConnect_client_version(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, TrUserData)
    when N < 57 ->
    d_field_CommandConnect_client_version(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          TrUserData);
d_field_CommandConnect_client_version(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6,
                                      F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      NewFValue,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_auth_method(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, TrUserData)
    when N < 57 ->
    d_field_CommandConnect_auth_method(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       TrUserData);
d_field_CommandConnect_auth_method(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, _, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_AuthMethod(begin
                                                   <<Res:32/signed-native>> =
                                                       <<(X bsl N +
                                                              Acc):32/unsigned-native>>,
                                                   id(Res, TrUserData)
                                               end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      NewFValue,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_auth_method_name(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10,
                                        TrUserData)
    when N < 57 ->
    d_field_CommandConnect_auth_method_name(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            TrUserData);
d_field_CommandConnect_auth_method_name(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, _, F@_4, F@_5, F@_6,
                                        F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      NewFValue,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_auth_data(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, TrUserData)
    when N < 57 ->
    d_field_CommandConnect_auth_data(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     TrUserData);
d_field_CommandConnect_auth_data(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, _, F@_5, F@_6, F@_7,
                                 F@_8, F@_9, F@_10, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      NewFValue,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_protocol_version(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10,
                                        TrUserData)
    when N < 57 ->
    d_field_CommandConnect_protocol_version(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            TrUserData);
d_field_CommandConnect_protocol_version(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, _, F@_6,
                                        F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      NewFValue,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_proxy_to_broker_url(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, F@_9, F@_10,
                                           TrUserData)
    when N < 57 ->
    d_field_CommandConnect_proxy_to_broker_url(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               TrUserData);
d_field_CommandConnect_proxy_to_broker_url(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           _, F@_7, F@_8, F@_9, F@_10,
                                           TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      NewFValue,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_original_principal(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10,
                                          TrUserData)
    when N < 57 ->
    d_field_CommandConnect_original_principal(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              TrUserData);
d_field_CommandConnect_original_principal(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, _, F@_8, F@_9, F@_10,
                                          TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      NewFValue,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_original_auth_data(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10,
                                          TrUserData)
    when N < 57 ->
    d_field_CommandConnect_original_auth_data(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              TrUserData);
d_field_CommandConnect_original_auth_data(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, _, F@_9, F@_10,
                                          TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      NewFValue,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_original_auth_method(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                                            TrUserData)
    when N < 57 ->
    d_field_CommandConnect_original_auth_method(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                TrUserData);
d_field_CommandConnect_original_auth_method(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, _, F@_10,
                                            TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      NewFValue,
                                      F@_10,
                                      TrUserData).

d_field_CommandConnect_feature_flags(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, TrUserData)
    when N < 57 ->
    d_field_CommandConnect_feature_flags(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         TrUserData);
d_field_CommandConnect_feature_flags(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, Prev, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_FeatureFlags(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConnect(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      if Prev == '$undef' -> NewFValue;
                                         true ->
                                             merge_msg_FeatureFlags(Prev,
                                                                    NewFValue,
                                                                    TrUserData)
                                      end,
                                      TrUserData).

skip_varint_CommandConnect(<<1:1, _:7, Rest/binary>>,
                           Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                           F@_8, F@_9, F@_10, TrUserData) ->
    skip_varint_CommandConnect(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               F@_3,
                               F@_4,
                               F@_5,
                               F@_6,
                               F@_7,
                               F@_8,
                               F@_9,
                               F@_10,
                               TrUserData);
skip_varint_CommandConnect(<<0:1, _:7, Rest/binary>>,
                           Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                           F@_8, F@_9, F@_10, TrUserData) ->
    dfp_read_field_def_CommandConnect(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

skip_length_delimited_CommandConnect(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandConnect(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         TrUserData);
skip_length_delimited_CommandConnect(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandConnect(Rest2,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

skip_group_CommandConnect(Bin, FNum, Z2, F@_1, F@_2,
                          F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                          TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandConnect(Rest,
                                      0,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

skip_32_CommandConnect(<<_:32, Rest/binary>>, Z1, Z2,
                       F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                       F@_10, TrUserData) ->
    dfp_read_field_def_CommandConnect(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

skip_64_CommandConnect(<<_:64, Rest/binary>>, Z1, Z2,
                       F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                       F@_10, TrUserData) ->
    dfp_read_field_def_CommandConnect(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      TrUserData).

decode_msg_FeatureFlags(Bin, TrUserData) ->
    dfp_read_field_def_FeatureFlags(Bin,
                                    0,
                                    0,
                                    id('$undef', TrUserData),
                                    TrUserData).

dfp_read_field_def_FeatureFlags(<<8, Rest/binary>>, Z1,
                                Z2, F@_1, TrUserData) ->
    d_field_FeatureFlags_supports_auth_refresh(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               TrUserData);
dfp_read_field_def_FeatureFlags(<<>>, 0, 0, F@_1, _) ->
    S1 = #{},
    if F@_1 == '$undef' -> S1;
       true -> S1#{supports_auth_refresh => F@_1}
    end;
dfp_read_field_def_FeatureFlags(Other, Z1, Z2, F@_1,
                                TrUserData) ->
    dg_read_field_def_FeatureFlags(Other,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   TrUserData).

dg_read_field_def_FeatureFlags(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_FeatureFlags(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   TrUserData);
dg_read_field_def_FeatureFlags(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_FeatureFlags_supports_auth_refresh(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_FeatureFlags(Rest, 0, 0, F@_1, TrUserData);
                1 -> skip_64_FeatureFlags(Rest, 0, 0, F@_1, TrUserData);
                2 ->
                    skip_length_delimited_FeatureFlags(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       TrUserData);
                3 ->
                    skip_group_FeatureFlags(Rest,
                                            Key bsr 3,
                                            0,
                                            F@_1,
                                            TrUserData);
                5 -> skip_32_FeatureFlags(Rest, 0, 0, F@_1, TrUserData)
            end
    end;
dg_read_field_def_FeatureFlags(<<>>, 0, 0, F@_1, _) ->
    S1 = #{},
    if F@_1 == '$undef' -> S1;
       true -> S1#{supports_auth_refresh => F@_1}
    end.

d_field_FeatureFlags_supports_auth_refresh(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, TrUserData)
    when N < 57 ->
    d_field_FeatureFlags_supports_auth_refresh(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               TrUserData);
d_field_FeatureFlags_supports_auth_refresh(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_FeatureFlags(RestF,
                                    0,
                                    0,
                                    NewFValue,
                                    TrUserData).

skip_varint_FeatureFlags(<<1:1, _:7, Rest/binary>>, Z1,
                         Z2, F@_1, TrUserData) ->
    skip_varint_FeatureFlags(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             TrUserData);
skip_varint_FeatureFlags(<<0:1, _:7, Rest/binary>>, Z1,
                         Z2, F@_1, TrUserData) ->
    dfp_read_field_def_FeatureFlags(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    TrUserData).

skip_length_delimited_FeatureFlags(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, TrUserData)
    when N < 57 ->
    skip_length_delimited_FeatureFlags(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       TrUserData);
skip_length_delimited_FeatureFlags(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_FeatureFlags(Rest2,
                                    0,
                                    0,
                                    F@_1,
                                    TrUserData).

skip_group_FeatureFlags(Bin, FNum, Z2, F@_1,
                        TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_FeatureFlags(Rest,
                                    0,
                                    Z2,
                                    F@_1,
                                    TrUserData).

skip_32_FeatureFlags(<<_:32, Rest/binary>>, Z1, Z2,
                     F@_1, TrUserData) ->
    dfp_read_field_def_FeatureFlags(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    TrUserData).

skip_64_FeatureFlags(<<_:64, Rest/binary>>, Z1, Z2,
                     F@_1, TrUserData) ->
    dfp_read_field_def_FeatureFlags(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    TrUserData).

decode_msg_CommandConnected(Bin, TrUserData) ->
    dfp_read_field_def_CommandConnected(Bin,
                                        0,
                                        0,
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        TrUserData).

dfp_read_field_def_CommandConnected(<<10, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandConnected_server_version(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
dfp_read_field_def_CommandConnected(<<16, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandConnected_protocol_version(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              TrUserData);
dfp_read_field_def_CommandConnected(<<24, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandConnected_max_message_size(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              TrUserData);
dfp_read_field_def_CommandConnected(<<>>, 0, 0, F@_1,
                                    F@_2, F@_3, _) ->
    S1 = #{server_version => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{protocol_version => F@_2}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{max_message_size => F@_3}
    end;
dfp_read_field_def_CommandConnected(Other, Z1, Z2, F@_1,
                                    F@_2, F@_3, TrUserData) ->
    dg_read_field_def_CommandConnected(Other,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       TrUserData).

dg_read_field_def_CommandConnected(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandConnected(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       TrUserData);
dg_read_field_def_CommandConnected(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandConnected_server_version(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    TrUserData);
        16 ->
            d_field_CommandConnected_protocol_version(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      TrUserData);
        24 ->
            d_field_CommandConnected_max_message_size(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandConnected(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 TrUserData);
                1 ->
                    skip_64_CommandConnected(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
                2 ->
                    skip_length_delimited_CommandConnected(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           TrUserData);
                3 ->
                    skip_group_CommandConnected(Rest,
                                                Key bsr 3,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
                5 ->
                    skip_32_CommandConnected(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData)
            end
    end;
dg_read_field_def_CommandConnected(<<>>, 0, 0, F@_1,
                                   F@_2, F@_3, _) ->
    S1 = #{server_version => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{protocol_version => F@_2}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{max_message_size => F@_3}
    end.

d_field_CommandConnected_server_version(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandConnected_server_version(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
d_field_CommandConnected_server_version(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConnected(RestF,
                                        0,
                                        0,
                                        NewFValue,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

d_field_CommandConnected_protocol_version(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandConnected_protocol_version(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              TrUserData);
d_field_CommandConnected_protocol_version(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandConnected(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        NewFValue,
                                        F@_3,
                                        TrUserData).

d_field_CommandConnected_max_message_size(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandConnected_max_message_size(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              TrUserData);
d_field_CommandConnected_max_message_size(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandConnected(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        NewFValue,
                                        TrUserData).

skip_varint_CommandConnected(<<1:1, _:7, Rest/binary>>,
                             Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_CommandConnected(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 TrUserData);
skip_varint_CommandConnected(<<0:1, _:7, Rest/binary>>,
                             Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandConnected(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

skip_length_delimited_CommandConnected(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandConnected(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
skip_length_delimited_CommandConnected(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandConnected(Rest2,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

skip_group_CommandConnected(Bin, FNum, Z2, F@_1, F@_2,
                            F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandConnected(Rest,
                                        0,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

skip_32_CommandConnected(<<_:32, Rest/binary>>, Z1, Z2,
                         F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandConnected(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

skip_64_CommandConnected(<<_:64, Rest/binary>>, Z1, Z2,
                         F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandConnected(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

decode_msg_CommandAuthResponse(Bin, TrUserData) ->
    dfp_read_field_def_CommandAuthResponse(Bin,
                                           0,
                                           0,
                                           id('$undef', TrUserData),
                                           id('$undef', TrUserData),
                                           id('$undef', TrUserData),
                                           TrUserData).

dfp_read_field_def_CommandAuthResponse(<<10,
                                         Rest/binary>>,
                                       Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandAuthResponse_client_version(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               TrUserData);
dfp_read_field_def_CommandAuthResponse(<<18,
                                         Rest/binary>>,
                                       Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandAuthResponse_response(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         TrUserData);
dfp_read_field_def_CommandAuthResponse(<<24,
                                         Rest/binary>>,
                                       Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandAuthResponse_protocol_version(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 TrUserData);
dfp_read_field_def_CommandAuthResponse(<<>>, 0, 0, F@_1,
                                       F@_2, F@_3, _) ->
    S1 = #{},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{client_version => F@_1}
         end,
    S3 = if F@_2 == '$undef' -> S2;
            true -> S2#{response => F@_2}
         end,
    if F@_3 == '$undef' -> S3;
       true -> S3#{protocol_version => F@_3}
    end;
dfp_read_field_def_CommandAuthResponse(Other, Z1, Z2,
                                       F@_1, F@_2, F@_3, TrUserData) ->
    dg_read_field_def_CommandAuthResponse(Other,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          TrUserData).

dg_read_field_def_CommandAuthResponse(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandAuthResponse(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          TrUserData);
dg_read_field_def_CommandAuthResponse(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandAuthResponse_client_version(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData);
        18 ->
            d_field_CommandAuthResponse_response(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 TrUserData);
        24 ->
            d_field_CommandAuthResponse_protocol_version(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandAuthResponse(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    TrUserData);
                1 ->
                    skip_64_CommandAuthResponse(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
                2 ->
                    skip_length_delimited_CommandAuthResponse(Rest,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              TrUserData);
                3 ->
                    skip_group_CommandAuthResponse(Rest,
                                                   Key bsr 3,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData);
                5 ->
                    skip_32_CommandAuthResponse(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData)
            end
    end;
dg_read_field_def_CommandAuthResponse(<<>>, 0, 0, F@_1,
                                      F@_2, F@_3, _) ->
    S1 = #{},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{client_version => F@_1}
         end,
    S3 = if F@_2 == '$undef' -> S2;
            true -> S2#{response => F@_2}
         end,
    if F@_3 == '$undef' -> S3;
       true -> S3#{protocol_version => F@_3}
    end.

d_field_CommandAuthResponse_client_version(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandAuthResponse_client_version(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               TrUserData);
d_field_CommandAuthResponse_client_version(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAuthResponse(RestF,
                                           0,
                                           0,
                                           NewFValue,
                                           F@_2,
                                           F@_3,
                                           TrUserData).

d_field_CommandAuthResponse_response(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandAuthResponse_response(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         TrUserData);
d_field_CommandAuthResponse_response(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_AuthData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAuthResponse(RestF,
                                           0,
                                           0,
                                           F@_1,
                                           if Prev == '$undef' -> NewFValue;
                                              true ->
                                                  merge_msg_AuthData(Prev,
                                                                     NewFValue,
                                                                     TrUserData)
                                           end,
                                           F@_3,
                                           TrUserData).

d_field_CommandAuthResponse_protocol_version(<<1:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3,
                                             TrUserData)
    when N < 57 ->
    d_field_CommandAuthResponse_protocol_version(Rest,
                                                 N + 7,
                                                 X bsl N + Acc,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 TrUserData);
d_field_CommandAuthResponse_protocol_version(<<0:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, _,
                                             TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandAuthResponse(RestF,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           NewFValue,
                                           TrUserData).

skip_varint_CommandAuthResponse(<<1:1, _:7,
                                  Rest/binary>>,
                                Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_CommandAuthResponse(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData);
skip_varint_CommandAuthResponse(<<0:1, _:7,
                                  Rest/binary>>,
                                Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandAuthResponse(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData).

skip_length_delimited_CommandAuthResponse(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandAuthResponse(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              TrUserData);
skip_length_delimited_CommandAuthResponse(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3,
                                          TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandAuthResponse(Rest2,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData).

skip_group_CommandAuthResponse(Bin, FNum, Z2, F@_1,
                               F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandAuthResponse(Rest,
                                           0,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData).

skip_32_CommandAuthResponse(<<_:32, Rest/binary>>, Z1,
                            Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandAuthResponse(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData).

skip_64_CommandAuthResponse(<<_:64, Rest/binary>>, Z1,
                            Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandAuthResponse(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData).

decode_msg_CommandAuthChallenge(Bin, TrUserData) ->
    dfp_read_field_def_CommandAuthChallenge(Bin,
                                            0,
                                            0,
                                            id('$undef', TrUserData),
                                            id('$undef', TrUserData),
                                            id('$undef', TrUserData),
                                            TrUserData).

dfp_read_field_def_CommandAuthChallenge(<<10,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandAuthChallenge_server_version(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
dfp_read_field_def_CommandAuthChallenge(<<18,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandAuthChallenge_challenge(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
dfp_read_field_def_CommandAuthChallenge(<<24,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandAuthChallenge_protocol_version(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData);
dfp_read_field_def_CommandAuthChallenge(<<>>, 0, 0,
                                        F@_1, F@_2, F@_3, _) ->
    S1 = #{},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{server_version => F@_1}
         end,
    S3 = if F@_2 == '$undef' -> S2;
            true -> S2#{challenge => F@_2}
         end,
    if F@_3 == '$undef' -> S3;
       true -> S3#{protocol_version => F@_3}
    end;
dfp_read_field_def_CommandAuthChallenge(Other, Z1, Z2,
                                        F@_1, F@_2, F@_3, TrUserData) ->
    dg_read_field_def_CommandAuthChallenge(Other,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData).

dg_read_field_def_CommandAuthChallenge(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandAuthChallenge(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
dg_read_field_def_CommandAuthChallenge(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandAuthChallenge_server_version(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        TrUserData);
        18 ->
            d_field_CommandAuthChallenge_challenge(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData);
        24 ->
            d_field_CommandAuthChallenge_protocol_version(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandAuthChallenge(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     TrUserData);
                1 ->
                    skip_64_CommandAuthChallenge(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 TrUserData);
                2 ->
                    skip_length_delimited_CommandAuthChallenge(Rest,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               TrUserData);
                3 ->
                    skip_group_CommandAuthChallenge(Rest,
                                                    Key bsr 3,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    TrUserData);
                5 ->
                    skip_32_CommandAuthChallenge(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 TrUserData)
            end
    end;
dg_read_field_def_CommandAuthChallenge(<<>>, 0, 0, F@_1,
                                       F@_2, F@_3, _) ->
    S1 = #{},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{server_version => F@_1}
         end,
    S3 = if F@_2 == '$undef' -> S2;
            true -> S2#{challenge => F@_2}
         end,
    if F@_3 == '$undef' -> S3;
       true -> S3#{protocol_version => F@_3}
    end.

d_field_CommandAuthChallenge_server_version(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3,
                                            TrUserData)
    when N < 57 ->
    d_field_CommandAuthChallenge_server_version(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
d_field_CommandAuthChallenge_server_version(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, _, F@_2, F@_3,
                                            TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAuthChallenge(RestF,
                                            0,
                                            0,
                                            NewFValue,
                                            F@_2,
                                            F@_3,
                                            TrUserData).

d_field_CommandAuthChallenge_challenge(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandAuthChallenge_challenge(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
d_field_CommandAuthChallenge_challenge(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_AuthData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAuthChallenge(RestF,
                                            0,
                                            0,
                                            F@_1,
                                            if Prev == '$undef' -> NewFValue;
                                               true ->
                                                   merge_msg_AuthData(Prev,
                                                                      NewFValue,
                                                                      TrUserData)
                                            end,
                                            F@_3,
                                            TrUserData).

d_field_CommandAuthChallenge_protocol_version(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3,
                                              TrUserData)
    when N < 57 ->
    d_field_CommandAuthChallenge_protocol_version(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData);
d_field_CommandAuthChallenge_protocol_version(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, _,
                                              TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandAuthChallenge(RestF,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            NewFValue,
                                            TrUserData).

skip_varint_CommandAuthChallenge(<<1:1, _:7,
                                   Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_CommandAuthChallenge(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData);
skip_varint_CommandAuthChallenge(<<0:1, _:7,
                                   Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandAuthChallenge(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData).

skip_length_delimited_CommandAuthChallenge(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandAuthChallenge(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               TrUserData);
skip_length_delimited_CommandAuthChallenge(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3,
                                           TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandAuthChallenge(Rest2,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData).

skip_group_CommandAuthChallenge(Bin, FNum, Z2, F@_1,
                                F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandAuthChallenge(Rest,
                                            0,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData).

skip_32_CommandAuthChallenge(<<_:32, Rest/binary>>, Z1,
                             Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandAuthChallenge(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData).

skip_64_CommandAuthChallenge(<<_:64, Rest/binary>>, Z1,
                             Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandAuthChallenge(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData).

decode_msg_AuthData(Bin, TrUserData) ->
    dfp_read_field_def_AuthData(Bin,
                                0,
                                0,
                                id('$undef', TrUserData),
                                id('$undef', TrUserData),
                                TrUserData).

dfp_read_field_def_AuthData(<<10, Rest/binary>>, Z1, Z2,
                            F@_1, F@_2, TrUserData) ->
    d_field_AuthData_auth_method_name(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      TrUserData);
dfp_read_field_def_AuthData(<<18, Rest/binary>>, Z1, Z2,
                            F@_1, F@_2, TrUserData) ->
    d_field_AuthData_auth_data(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               TrUserData);
dfp_read_field_def_AuthData(<<>>, 0, 0, F@_1, F@_2,
                            _) ->
    S1 = #{},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{auth_method_name => F@_1}
         end,
    if F@_2 == '$undef' -> S2;
       true -> S2#{auth_data => F@_2}
    end;
dfp_read_field_def_AuthData(Other, Z1, Z2, F@_1, F@_2,
                            TrUserData) ->
    dg_read_field_def_AuthData(Other,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               TrUserData).

dg_read_field_def_AuthData(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_AuthData(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               TrUserData);
dg_read_field_def_AuthData(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_AuthData_auth_method_name(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              TrUserData);
        18 ->
            d_field_AuthData_auth_data(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_AuthData(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         TrUserData);
                1 ->
                    skip_64_AuthData(Rest, 0, 0, F@_1, F@_2, TrUserData);
                2 ->
                    skip_length_delimited_AuthData(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData);
                3 ->
                    skip_group_AuthData(Rest,
                                        Key bsr 3,
                                        0,
                                        F@_1,
                                        F@_2,
                                        TrUserData);
                5 ->
                    skip_32_AuthData(Rest, 0, 0, F@_1, F@_2, TrUserData)
            end
    end;
dg_read_field_def_AuthData(<<>>, 0, 0, F@_1, F@_2, _) ->
    S1 = #{},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{auth_method_name => F@_1}
         end,
    if F@_2 == '$undef' -> S2;
       true -> S2#{auth_data => F@_2}
    end.

d_field_AuthData_auth_method_name(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_AuthData_auth_method_name(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      TrUserData);
d_field_AuthData_auth_method_name(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_AuthData(RestF,
                                0,
                                0,
                                NewFValue,
                                F@_2,
                                TrUserData).

d_field_AuthData_auth_data(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_AuthData_auth_data(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               TrUserData);
d_field_AuthData_auth_data(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_AuthData(RestF,
                                0,
                                0,
                                F@_1,
                                NewFValue,
                                TrUserData).

skip_varint_AuthData(<<1:1, _:7, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    skip_varint_AuthData(Rest,
                         Z1,
                         Z2,
                         F@_1,
                         F@_2,
                         TrUserData);
skip_varint_AuthData(<<0:1, _:7, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_AuthData(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_length_delimited_AuthData(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_AuthData(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   TrUserData);
skip_length_delimited_AuthData(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_AuthData(Rest2,
                                0,
                                0,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_group_AuthData(Bin, FNum, Z2, F@_1, F@_2,
                    TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_AuthData(Rest,
                                0,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_32_AuthData(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
                 F@_2, TrUserData) ->
    dfp_read_field_def_AuthData(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

skip_64_AuthData(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
                 F@_2, TrUserData) ->
    dfp_read_field_def_AuthData(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                TrUserData).

decode_msg_KeySharedMeta(Bin, TrUserData) ->
    dfp_read_field_def_KeySharedMeta(Bin,
                                     0,
                                     0,
                                     id('$undef', TrUserData),
                                     id([], TrUserData),
                                     id('$undef', TrUserData),
                                     TrUserData).

dfp_read_field_def_KeySharedMeta(<<8, Rest/binary>>, Z1,
                                 Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_KeySharedMeta_keySharedMode(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData);
dfp_read_field_def_KeySharedMeta(<<26, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_KeySharedMeta_hashRanges(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData);
dfp_read_field_def_KeySharedMeta(<<32, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_KeySharedMeta_allowOutOfOrderDelivery(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData);
dfp_read_field_def_KeySharedMeta(<<>>, 0, 0, F@_1, R1,
                                 F@_3, TrUserData) ->
    S1 = #{keySharedMode => F@_1},
    S2 = if R1 == '$undef' -> S1;
            true -> S1#{hashRanges => lists_reverse(R1, TrUserData)}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{allowOutOfOrderDelivery => F@_3}
    end;
dfp_read_field_def_KeySharedMeta(Other, Z1, Z2, F@_1,
                                 F@_2, F@_3, TrUserData) ->
    dg_read_field_def_KeySharedMeta(Other,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData).

dg_read_field_def_KeySharedMeta(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_KeySharedMeta(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData);
dg_read_field_def_KeySharedMeta(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_KeySharedMeta_keySharedMode(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
        26 ->
            d_field_KeySharedMeta_hashRanges(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
        32 ->
            d_field_KeySharedMeta_allowOutOfOrderDelivery(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_KeySharedMeta(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              TrUserData);
                1 ->
                    skip_64_KeySharedMeta(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          TrUserData);
                2 ->
                    skip_length_delimited_KeySharedMeta(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        TrUserData);
                3 ->
                    skip_group_KeySharedMeta(Rest,
                                             Key bsr 3,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
                5 ->
                    skip_32_KeySharedMeta(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          TrUserData)
            end
    end;
dg_read_field_def_KeySharedMeta(<<>>, 0, 0, F@_1, R1,
                                F@_3, TrUserData) ->
    S1 = #{keySharedMode => F@_1},
    S2 = if R1 == '$undef' -> S1;
            true -> S1#{hashRanges => lists_reverse(R1, TrUserData)}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{allowOutOfOrderDelivery => F@_3}
    end.

d_field_KeySharedMeta_keySharedMode(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_KeySharedMeta_keySharedMode(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData);
d_field_KeySharedMeta_keySharedMode(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_KeySharedMode(begin
                                                      <<Res:32/signed-native>> =
                                                          <<(X bsl N +
                                                                 Acc):32/unsigned-native>>,
                                                      id(Res, TrUserData)
                                                  end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_KeySharedMeta(RestF,
                                     0,
                                     0,
                                     NewFValue,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

d_field_KeySharedMeta_hashRanges(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_KeySharedMeta_hashRanges(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData);
d_field_KeySharedMeta_hashRanges(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_IntRange(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_KeySharedMeta(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     cons(NewFValue, Prev, TrUserData),
                                     F@_3,
                                     TrUserData).

d_field_KeySharedMeta_allowOutOfOrderDelivery(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3,
                                              TrUserData)
    when N < 57 ->
    d_field_KeySharedMeta_allowOutOfOrderDelivery(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData);
d_field_KeySharedMeta_allowOutOfOrderDelivery(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, _,
                                              TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_KeySharedMeta(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     NewFValue,
                                     TrUserData).

skip_varint_KeySharedMeta(<<1:1, _:7, Rest/binary>>, Z1,
                          Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_KeySharedMeta(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              TrUserData);
skip_varint_KeySharedMeta(<<0:1, _:7, Rest/binary>>, Z1,
                          Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_KeySharedMeta(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

skip_length_delimited_KeySharedMeta(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    skip_length_delimited_KeySharedMeta(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData);
skip_length_delimited_KeySharedMeta(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_KeySharedMeta(Rest2,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

skip_group_KeySharedMeta(Bin, FNum, Z2, F@_1, F@_2,
                         F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_KeySharedMeta(Rest,
                                     0,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

skip_32_KeySharedMeta(<<_:32, Rest/binary>>, Z1, Z2,
                      F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_KeySharedMeta(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

skip_64_KeySharedMeta(<<_:64, Rest/binary>>, Z1, Z2,
                      F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_KeySharedMeta(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

decode_msg_CommandSubscribe(Bin, TrUserData) ->
    dfp_read_field_def_CommandSubscribe(Bin,
                                        0,
                                        0,
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id([], TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        TrUserData).

dfp_read_field_def_CommandSubscribe(<<10, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_topic(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   TrUserData);
dfp_read_field_def_CommandSubscribe(<<18, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_subscription(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          TrUserData);
dfp_read_field_def_CommandSubscribe(<<24, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_subType(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     TrUserData);
dfp_read_field_def_CommandSubscribe(<<32, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_consumer_id(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         TrUserData);
dfp_read_field_def_CommandSubscribe(<<40, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_request_id(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData);
dfp_read_field_def_CommandSubscribe(<<50, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_consumer_name(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           TrUserData);
dfp_read_field_def_CommandSubscribe(<<56, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_priority_level(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            TrUserData);
dfp_read_field_def_CommandSubscribe(<<64, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_durable(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     TrUserData);
dfp_read_field_def_CommandSubscribe(<<74, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_start_message_id(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              TrUserData);
dfp_read_field_def_CommandSubscribe(<<82, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_metadata(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      TrUserData);
dfp_read_field_def_CommandSubscribe(<<88, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_read_compacted(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            TrUserData);
dfp_read_field_def_CommandSubscribe(<<98, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_schema(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    TrUserData);
dfp_read_field_def_CommandSubscribe(<<104,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_initialPosition(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             TrUserData);
dfp_read_field_def_CommandSubscribe(<<112,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_replicate_subscription_state(Rest,
                                                          Z1,
                                                          Z2,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          TrUserData);
dfp_read_field_def_CommandSubscribe(<<120,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_force_topic_creation(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  TrUserData);
dfp_read_field_def_CommandSubscribe(<<128, 1,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_start_message_rollback_duration_sec(Rest,
                                                                 Z1,
                                                                 Z2,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 F@_6,
                                                                 F@_7,
                                                                 F@_8,
                                                                 F@_9,
                                                                 F@_10,
                                                                 F@_11,
                                                                 F@_12,
                                                                 F@_13,
                                                                 F@_14,
                                                                 F@_15,
                                                                 F@_16,
                                                                 F@_17,
                                                                 TrUserData);
dfp_read_field_def_CommandSubscribe(<<138, 1,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    d_field_CommandSubscribe_keySharedMeta(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           TrUserData);
dfp_read_field_def_CommandSubscribe(<<>>, 0, 0, F@_1,
                                    F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                                    F@_9, R1, F@_11, F@_12, F@_13, F@_14, F@_15,
                                    F@_16, F@_17, TrUserData) ->
    S1 = #{topic => F@_1, subscription => F@_2,
           subType => F@_3, consumer_id => F@_4,
           request_id => F@_5},
    S2 = if F@_6 == '$undef' -> S1;
            true -> S1#{consumer_name => F@_6}
         end,
    S3 = if F@_7 == '$undef' -> S2;
            true -> S2#{priority_level => F@_7}
         end,
    S4 = if F@_8 == '$undef' -> S3;
            true -> S3#{durable => F@_8}
         end,
    S5 = if F@_9 == '$undef' -> S4;
            true -> S4#{start_message_id => F@_9}
         end,
    S6 = if R1 == '$undef' -> S5;
            true -> S5#{metadata => lists_reverse(R1, TrUserData)}
         end,
    S7 = if F@_11 == '$undef' -> S6;
            true -> S6#{read_compacted => F@_11}
         end,
    S8 = if F@_12 == '$undef' -> S7;
            true -> S7#{schema => F@_12}
         end,
    S9 = if F@_13 == '$undef' -> S8;
            true -> S8#{initialPosition => F@_13}
         end,
    S10 = if F@_14 == '$undef' -> S9;
             true -> S9#{replicate_subscription_state => F@_14}
          end,
    S11 = if F@_15 == '$undef' -> S10;
             true -> S10#{force_topic_creation => F@_15}
          end,
    S12 = if F@_16 == '$undef' -> S11;
             true ->
                 S11#{start_message_rollback_duration_sec => F@_16}
          end,
    if F@_17 == '$undef' -> S12;
       true -> S12#{keySharedMeta => F@_17}
    end;
dfp_read_field_def_CommandSubscribe(Other, Z1, Z2, F@_1,
                                    F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                                    F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                                    F@_15, F@_16, F@_17, TrUserData) ->
    dg_read_field_def_CommandSubscribe(Other,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       TrUserData).

dg_read_field_def_CommandSubscribe(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandSubscribe(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       TrUserData);
dg_read_field_def_CommandSubscribe(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandSubscribe_topic(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           TrUserData);
        18 ->
            d_field_CommandSubscribe_subscription(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  TrUserData);
        24 ->
            d_field_CommandSubscribe_subType(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             TrUserData);
        32 ->
            d_field_CommandSubscribe_consumer_id(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 TrUserData);
        40 ->
            d_field_CommandSubscribe_request_id(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                TrUserData);
        50 ->
            d_field_CommandSubscribe_consumer_name(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   F@_7,
                                                   F@_8,
                                                   F@_9,
                                                   F@_10,
                                                   F@_11,
                                                   F@_12,
                                                   F@_13,
                                                   F@_14,
                                                   F@_15,
                                                   F@_16,
                                                   F@_17,
                                                   TrUserData);
        56 ->
            d_field_CommandSubscribe_priority_level(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    F@_16,
                                                    F@_17,
                                                    TrUserData);
        64 ->
            d_field_CommandSubscribe_durable(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             TrUserData);
        74 ->
            d_field_CommandSubscribe_start_message_id(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      F@_16,
                                                      F@_17,
                                                      TrUserData);
        82 ->
            d_field_CommandSubscribe_metadata(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              TrUserData);
        88 ->
            d_field_CommandSubscribe_read_compacted(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    F@_16,
                                                    F@_17,
                                                    TrUserData);
        98 ->
            d_field_CommandSubscribe_schema(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            TrUserData);
        104 ->
            d_field_CommandSubscribe_initialPosition(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     TrUserData);
        112 ->
            d_field_CommandSubscribe_replicate_subscription_state(Rest,
                                                                  0,
                                                                  0,
                                                                  F@_1,
                                                                  F@_2,
                                                                  F@_3,
                                                                  F@_4,
                                                                  F@_5,
                                                                  F@_6,
                                                                  F@_7,
                                                                  F@_8,
                                                                  F@_9,
                                                                  F@_10,
                                                                  F@_11,
                                                                  F@_12,
                                                                  F@_13,
                                                                  F@_14,
                                                                  F@_15,
                                                                  F@_16,
                                                                  F@_17,
                                                                  TrUserData);
        120 ->
            d_field_CommandSubscribe_force_topic_creation(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          TrUserData);
        128 ->
            d_field_CommandSubscribe_start_message_rollback_duration_sec(Rest,
                                                                         0,
                                                                         0,
                                                                         F@_1,
                                                                         F@_2,
                                                                         F@_3,
                                                                         F@_4,
                                                                         F@_5,
                                                                         F@_6,
                                                                         F@_7,
                                                                         F@_8,
                                                                         F@_9,
                                                                         F@_10,
                                                                         F@_11,
                                                                         F@_12,
                                                                         F@_13,
                                                                         F@_14,
                                                                         F@_15,
                                                                         F@_16,
                                                                         F@_17,
                                                                         TrUserData);
        138 ->
            d_field_CommandSubscribe_keySharedMeta(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   F@_7,
                                                   F@_8,
                                                   F@_9,
                                                   F@_10,
                                                   F@_11,
                                                   F@_12,
                                                   F@_13,
                                                   F@_14,
                                                   F@_15,
                                                   F@_16,
                                                   F@_17,
                                                   TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandSubscribe(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 TrUserData);
                1 ->
                    skip_64_CommandSubscribe(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             TrUserData);
                2 ->
                    skip_length_delimited_CommandSubscribe(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           F@_6,
                                                           F@_7,
                                                           F@_8,
                                                           F@_9,
                                                           F@_10,
                                                           F@_11,
                                                           F@_12,
                                                           F@_13,
                                                           F@_14,
                                                           F@_15,
                                                           F@_16,
                                                           F@_17,
                                                           TrUserData);
                3 ->
                    skip_group_CommandSubscribe(Rest,
                                                Key bsr 3,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                F@_10,
                                                F@_11,
                                                F@_12,
                                                F@_13,
                                                F@_14,
                                                F@_15,
                                                F@_16,
                                                F@_17,
                                                TrUserData);
                5 ->
                    skip_32_CommandSubscribe(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             TrUserData)
            end
    end;
dg_read_field_def_CommandSubscribe(<<>>, 0, 0, F@_1,
                                   F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                                   F@_9, R1, F@_11, F@_12, F@_13, F@_14, F@_15,
                                   F@_16, F@_17, TrUserData) ->
    S1 = #{topic => F@_1, subscription => F@_2,
           subType => F@_3, consumer_id => F@_4,
           request_id => F@_5},
    S2 = if F@_6 == '$undef' -> S1;
            true -> S1#{consumer_name => F@_6}
         end,
    S3 = if F@_7 == '$undef' -> S2;
            true -> S2#{priority_level => F@_7}
         end,
    S4 = if F@_8 == '$undef' -> S3;
            true -> S3#{durable => F@_8}
         end,
    S5 = if F@_9 == '$undef' -> S4;
            true -> S4#{start_message_id => F@_9}
         end,
    S6 = if R1 == '$undef' -> S5;
            true -> S5#{metadata => lists_reverse(R1, TrUserData)}
         end,
    S7 = if F@_11 == '$undef' -> S6;
            true -> S6#{read_compacted => F@_11}
         end,
    S8 = if F@_12 == '$undef' -> S7;
            true -> S7#{schema => F@_12}
         end,
    S9 = if F@_13 == '$undef' -> S8;
            true -> S8#{initialPosition => F@_13}
         end,
    S10 = if F@_14 == '$undef' -> S9;
             true -> S9#{replicate_subscription_state => F@_14}
          end,
    S11 = if F@_15 == '$undef' -> S10;
             true -> S10#{force_topic_creation => F@_15}
          end,
    S12 = if F@_16 == '$undef' -> S11;
             true ->
                 S11#{start_message_rollback_duration_sec => F@_16}
          end,
    if F@_17 == '$undef' -> S12;
       true -> S12#{keySharedMeta => F@_17}
    end.

d_field_CommandSubscribe_topic(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_topic(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   TrUserData);
d_field_CommandSubscribe_topic(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        NewFValue,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_subscription(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_subscription(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          TrUserData);
d_field_CommandSubscribe_subscription(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, _, F@_3, F@_4, F@_5, F@_6,
                                      F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                      F@_13, F@_14, F@_15, F@_16, F@_17,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        NewFValue,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_subType(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_subType(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     TrUserData);
d_field_CommandSubscribe_subType(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, _, F@_4, F@_5, F@_6, F@_7,
                                 F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                                 F@_15, F@_16, F@_17, TrUserData) ->
    {NewFValue, RestF} =
        {id('d_enum_CommandSubscribe.SubType'(begin
                                                  <<Res:32/signed-native>> =
                                                      <<(X bsl N +
                                                             Acc):32/unsigned-native>>,
                                                  id(Res, TrUserData)
                                              end),
            TrUserData),
         Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        NewFValue,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_consumer_id(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17,
                                     TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_consumer_id(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         TrUserData);
d_field_CommandSubscribe_consumer_id(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, _, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17,
                                     TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        NewFValue,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_request_id(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_request_id(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData);
d_field_CommandSubscribe_request_id(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, _, F@_6,
                                    F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                    F@_13, F@_14, F@_15, F@_16, F@_17,
                                    TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        NewFValue,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_consumer_name(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                       F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                       TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_consumer_name(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           TrUserData);
d_field_CommandSubscribe_consumer_name(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, _,
                                       F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                       F@_13, F@_14, F@_15, F@_16, F@_17,
                                       TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        NewFValue,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_priority_level(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_priority_level(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            TrUserData);
d_field_CommandSubscribe_priority_level(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, _, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        NewFValue,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_durable(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_durable(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     TrUserData);
d_field_CommandSubscribe_durable(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, _, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        NewFValue,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_start_message_id(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                          F@_12, F@_13, F@_14, F@_15, F@_16,
                                          F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_start_message_id(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              TrUserData);
d_field_CommandSubscribe_start_message_id(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, Prev, F@_10, F@_11,
                                          F@_12, F@_13, F@_14, F@_15, F@_16,
                                          F@_17, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        if Prev == '$undef' -> NewFValue;
                                           true ->
                                               merge_msg_MessageIdData(Prev,
                                                                       NewFValue,
                                                                       TrUserData)
                                        end,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_metadata(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_metadata(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      TrUserData);
d_field_CommandSubscribe_metadata(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, Prev, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_KeyValue(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        cons(NewFValue, Prev, TrUserData),
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_read_compacted(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_read_compacted(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            TrUserData);
d_field_CommandSubscribe_read_compacted(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, _, F@_12,
                                        F@_13, F@_14, F@_15, F@_16, F@_17,
                                        TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        NewFValue,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_schema(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                F@_14, F@_15, F@_16, F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_schema(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    TrUserData);
d_field_CommandSubscribe_schema(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, F@_8, F@_9, F@_10, F@_11, Prev, F@_13,
                                F@_14, F@_15, F@_16, F@_17, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_Schema(Bs, TrUserData), TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        if Prev == '$undef' -> NewFValue;
                                           true ->
                                               merge_msg_Schema(Prev,
                                                                NewFValue,
                                                                TrUserData)
                                        end,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_initialPosition(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_initialPosition(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             TrUserData);
d_field_CommandSubscribe_initialPosition(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, _, F@_14, F@_15, F@_16, F@_17,
                                         TrUserData) ->
    {NewFValue, RestF} =
        {id('d_enum_CommandSubscribe.InitialPosition'(begin
                                                          <<Res:32/signed-native>> =
                                                              <<(X bsl N +
                                                                     Acc):32/unsigned-native>>,
                                                          id(Res, TrUserData)
                                                      end),
            TrUserData),
         Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        NewFValue,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_replicate_subscription_state(<<1:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, F@_6, F@_7,
                                                      F@_8, F@_9, F@_10, F@_11,
                                                      F@_12, F@_13, F@_14,
                                                      F@_15, F@_16, F@_17,
                                                      TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_replicate_subscription_state(Rest,
                                                          N + 7,
                                                          X bsl N + Acc,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          TrUserData);
d_field_CommandSubscribe_replicate_subscription_state(<<0:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, F@_6, F@_7,
                                                      F@_8, F@_9, F@_10, F@_11,
                                                      F@_12, F@_13, _, F@_15,
                                                      F@_16, F@_17,
                                                      TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        NewFValue,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_force_topic_creation(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_force_topic_creation(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  TrUserData);
d_field_CommandSubscribe_force_topic_creation(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              _, F@_16, F@_17, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        NewFValue,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_start_message_rollback_duration_sec(<<1:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             F@_3, F@_4, F@_5,
                                                             F@_6, F@_7, F@_8,
                                                             F@_9, F@_10, F@_11,
                                                             F@_12, F@_13,
                                                             F@_14, F@_15,
                                                             F@_16, F@_17,
                                                             TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_start_message_rollback_duration_sec(Rest,
                                                                 N + 7,
                                                                 X bsl N + Acc,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 F@_6,
                                                                 F@_7,
                                                                 F@_8,
                                                                 F@_9,
                                                                 F@_10,
                                                                 F@_11,
                                                                 F@_12,
                                                                 F@_13,
                                                                 F@_14,
                                                                 F@_15,
                                                                 F@_16,
                                                                 F@_17,
                                                                 TrUserData);
d_field_CommandSubscribe_start_message_rollback_duration_sec(<<0:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             F@_3, F@_4, F@_5,
                                                             F@_6, F@_7, F@_8,
                                                             F@_9, F@_10, F@_11,
                                                             F@_12, F@_13,
                                                             F@_14, F@_15, _,
                                                             F@_17,
                                                             TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        NewFValue,
                                        F@_17,
                                        TrUserData).

d_field_CommandSubscribe_keySharedMeta(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                       F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                       TrUserData)
    when N < 57 ->
    d_field_CommandSubscribe_keySharedMeta(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           TrUserData);
d_field_CommandSubscribe_keySharedMeta(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                       F@_12, F@_13, F@_14, F@_15, F@_16, Prev,
                                       TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_KeySharedMeta(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSubscribe(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        if Prev == '$undef' -> NewFValue;
                                           true ->
                                               merge_msg_KeySharedMeta(Prev,
                                                                       NewFValue,
                                                                       TrUserData)
                                        end,
                                        TrUserData).

skip_varint_CommandSubscribe(<<1:1, _:7, Rest/binary>>,
                             Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                             F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                             F@_15, F@_16, F@_17, TrUserData) ->
    skip_varint_CommandSubscribe(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 F@_8,
                                 F@_9,
                                 F@_10,
                                 F@_11,
                                 F@_12,
                                 F@_13,
                                 F@_14,
                                 F@_15,
                                 F@_16,
                                 F@_17,
                                 TrUserData);
skip_varint_CommandSubscribe(<<0:1, _:7, Rest/binary>>,
                             Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                             F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                             F@_15, F@_16, F@_17, TrUserData) ->
    dfp_read_field_def_CommandSubscribe(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

skip_length_delimited_CommandSubscribe(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                       F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                       TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandSubscribe(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           TrUserData);
skip_length_delimited_CommandSubscribe(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                       F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandSubscribe(Rest2,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

skip_group_CommandSubscribe(Bin, FNum, Z2, F@_1, F@_2,
                            F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                            F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                            TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandSubscribe(Rest,
                                        0,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

skip_32_CommandSubscribe(<<_:32, Rest/binary>>, Z1, Z2,
                         F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                         F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                         TrUserData) ->
    dfp_read_field_def_CommandSubscribe(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

skip_64_CommandSubscribe(<<_:64, Rest/binary>>, Z1, Z2,
                         F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                         F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                         TrUserData) ->
    dfp_read_field_def_CommandSubscribe(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        TrUserData).

decode_msg_CommandPartitionedTopicMetadata(Bin,
                                           TrUserData) ->
    dfp_read_field_def_CommandPartitionedTopicMetadata(Bin,
                                                       0,
                                                       0,
                                                       id('$undef', TrUserData),
                                                       id('$undef', TrUserData),
                                                       id('$undef', TrUserData),
                                                       id('$undef', TrUserData),
                                                       id('$undef', TrUserData),
                                                       TrUserData).

dfp_read_field_def_CommandPartitionedTopicMetadata(<<10,
                                                     Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    d_field_CommandPartitionedTopicMetadata_topic(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadata(<<16,
                                                     Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    d_field_CommandPartitionedTopicMetadata_request_id(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadata(<<26,
                                                     Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    d_field_CommandPartitionedTopicMetadata_original_principal(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadata(<<34,
                                                     Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    d_field_CommandPartitionedTopicMetadata_original_auth_data(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadata(<<42,
                                                     Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    d_field_CommandPartitionedTopicMetadata_original_auth_method(Rest,
                                                                 Z1,
                                                                 Z2,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadata(<<>>,
                                                   0, 0, F@_1, F@_2, F@_3, F@_4,
                                                   F@_5, _) ->
    S1 = #{topic => F@_1, request_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{original_principal => F@_3}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{original_auth_data => F@_4}
         end,
    if F@_5 == '$undef' -> S3;
       true -> S3#{original_auth_method => F@_5}
    end;
dfp_read_field_def_CommandPartitionedTopicMetadata(Other,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    dg_read_field_def_CommandPartitionedTopicMetadata(Other,
                                                      Z1,
                                                      Z2,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData).

dg_read_field_def_CommandPartitionedTopicMetadata(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandPartitionedTopicMetadata(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData);
dg_read_field_def_CommandPartitionedTopicMetadata(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandPartitionedTopicMetadata_topic(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData);
        16 ->
            d_field_CommandPartitionedTopicMetadata_request_id(Rest,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
        26 ->
            d_field_CommandPartitionedTopicMetadata_original_principal(Rest,
                                                                       0,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       F@_3,
                                                                       F@_4,
                                                                       F@_5,
                                                                       TrUserData);
        34 ->
            d_field_CommandPartitionedTopicMetadata_original_auth_data(Rest,
                                                                       0,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       F@_3,
                                                                       F@_4,
                                                                       F@_5,
                                                                       TrUserData);
        42 ->
            d_field_CommandPartitionedTopicMetadata_original_auth_method(Rest,
                                                                         0,
                                                                         0,
                                                                         F@_1,
                                                                         F@_2,
                                                                         F@_3,
                                                                         F@_4,
                                                                         F@_5,
                                                                         TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandPartitionedTopicMetadata(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
                1 ->
                    skip_64_CommandPartitionedTopicMetadata(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            TrUserData);
                2 ->
                    skip_length_delimited_CommandPartitionedTopicMetadata(Rest,
                                                                          0,
                                                                          0,
                                                                          F@_1,
                                                                          F@_2,
                                                                          F@_3,
                                                                          F@_4,
                                                                          F@_5,
                                                                          TrUserData);
                3 ->
                    skip_group_CommandPartitionedTopicMetadata(Rest,
                                                               Key bsr 3,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
                5 ->
                    skip_32_CommandPartitionedTopicMetadata(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            TrUserData)
            end
    end;
dg_read_field_def_CommandPartitionedTopicMetadata(<<>>,
                                                  0, 0, F@_1, F@_2, F@_3, F@_4,
                                                  F@_5, _) ->
    S1 = #{topic => F@_1, request_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{original_principal => F@_3}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{original_auth_data => F@_4}
         end,
    if F@_5 == '$undef' -> S3;
       true -> S3#{original_auth_method => F@_5}
    end.

d_field_CommandPartitionedTopicMetadata_topic(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadata_topic(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
d_field_CommandPartitionedTopicMetadata_topic(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, _, F@_2, F@_3, F@_4, F@_5,
                                              TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandPartitionedTopicMetadata(RestF,
                                                       0,
                                                       0,
                                                       NewFValue,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

d_field_CommandPartitionedTopicMetadata_request_id(<<1:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadata_request_id(Rest,
                                                       N + 7,
                                                       X bsl N + Acc,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData);
d_field_CommandPartitionedTopicMetadata_request_id(<<0:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, _, F@_3, F@_4,
                                                   F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandPartitionedTopicMetadata(RestF,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       NewFValue,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

d_field_CommandPartitionedTopicMetadata_original_principal(<<1:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadata_original_principal(Rest,
                                                               N + 7,
                                                               X bsl N + Acc,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
d_field_CommandPartitionedTopicMetadata_original_principal(<<0:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, F@_2,
                                                           _, F@_4, F@_5,
                                                           TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandPartitionedTopicMetadata(RestF,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       NewFValue,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

d_field_CommandPartitionedTopicMetadata_original_auth_data(<<1:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadata_original_auth_data(Rest,
                                                               N + 7,
                                                               X bsl N + Acc,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
d_field_CommandPartitionedTopicMetadata_original_auth_data(<<0:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, F@_2,
                                                           F@_3, _, F@_5,
                                                           TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandPartitionedTopicMetadata(RestF,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       NewFValue,
                                                       F@_5,
                                                       TrUserData).

d_field_CommandPartitionedTopicMetadata_original_auth_method(<<1:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             F@_3, F@_4, F@_5,
                                                             TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadata_original_auth_method(Rest,
                                                                 N + 7,
                                                                 X bsl N + Acc,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
d_field_CommandPartitionedTopicMetadata_original_auth_method(<<0:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             F@_3, F@_4, _,
                                                             TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandPartitionedTopicMetadata(RestF,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       NewFValue,
                                                       TrUserData).

skip_varint_CommandPartitionedTopicMetadata(<<1:1, _:7,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    skip_varint_CommandPartitionedTopicMetadata(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
skip_varint_CommandPartitionedTopicMetadata(<<0:1, _:7,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    dfp_read_field_def_CommandPartitionedTopicMetadata(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

skip_length_delimited_CommandPartitionedTopicMetadata(<<1:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandPartitionedTopicMetadata(Rest,
                                                          N + 7,
                                                          X bsl N + Acc,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData);
skip_length_delimited_CommandPartitionedTopicMetadata(<<0:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandPartitionedTopicMetadata(Rest2,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

skip_group_CommandPartitionedTopicMetadata(Bin, FNum,
                                           Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandPartitionedTopicMetadata(Rest,
                                                       0,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

skip_32_CommandPartitionedTopicMetadata(<<_:32,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData) ->
    dfp_read_field_def_CommandPartitionedTopicMetadata(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

skip_64_CommandPartitionedTopicMetadata(<<_:64,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData) ->
    dfp_read_field_def_CommandPartitionedTopicMetadata(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

decode_msg_CommandPartitionedTopicMetadataResponse(Bin,
                                                   TrUserData) ->
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(Bin,
                                                               0,
                                                               0,
                                                               id('$undef',
                                                                  TrUserData),
                                                               id('$undef',
                                                                  TrUserData),
                                                               id('$undef',
                                                                  TrUserData),
                                                               id('$undef',
                                                                  TrUserData),
                                                               id('$undef',
                                                                  TrUserData),
                                                               TrUserData).

dfp_read_field_def_CommandPartitionedTopicMetadataResponse(<<8,
                                                             Rest/binary>>,
                                                           Z1, Z2, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData) ->
    d_field_CommandPartitionedTopicMetadataResponse_partitions(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadataResponse(<<16,
                                                             Rest/binary>>,
                                                           Z1, Z2, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData) ->
    d_field_CommandPartitionedTopicMetadataResponse_request_id(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadataResponse(<<24,
                                                             Rest/binary>>,
                                                           Z1, Z2, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData) ->
    d_field_CommandPartitionedTopicMetadataResponse_response(Rest,
                                                             Z1,
                                                             Z2,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadataResponse(<<32,
                                                             Rest/binary>>,
                                                           Z1, Z2, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData) ->
    d_field_CommandPartitionedTopicMetadataResponse_error(Rest,
                                                          Z1,
                                                          Z2,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadataResponse(<<42,
                                                             Rest/binary>>,
                                                           Z1, Z2, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData) ->
    d_field_CommandPartitionedTopicMetadataResponse_message(Rest,
                                                            Z1,
                                                            Z2,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            TrUserData);
dfp_read_field_def_CommandPartitionedTopicMetadataResponse(<<>>,
                                                           0, 0, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           _) ->
    S1 = #{request_id => F@_2},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{partitions => F@_1}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{response => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end;
dfp_read_field_def_CommandPartitionedTopicMetadataResponse(Other,
                                                           Z1, Z2, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData) ->
    dg_read_field_def_CommandPartitionedTopicMetadataResponse(Other,
                                                              Z1,
                                                              Z2,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData).

dg_read_field_def_CommandPartitionedTopicMetadataResponse(<<1:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandPartitionedTopicMetadataResponse(Rest,
                                                              N + 7,
                                                              X bsl N + Acc,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
dg_read_field_def_CommandPartitionedTopicMetadataResponse(<<0:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandPartitionedTopicMetadataResponse_partitions(Rest,
                                                                       0,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       F@_3,
                                                                       F@_4,
                                                                       F@_5,
                                                                       TrUserData);
        16 ->
            d_field_CommandPartitionedTopicMetadataResponse_request_id(Rest,
                                                                       0,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       F@_3,
                                                                       F@_4,
                                                                       F@_5,
                                                                       TrUserData);
        24 ->
            d_field_CommandPartitionedTopicMetadataResponse_response(Rest,
                                                                     0,
                                                                     0,
                                                                     F@_1,
                                                                     F@_2,
                                                                     F@_3,
                                                                     F@_4,
                                                                     F@_5,
                                                                     TrUserData);
        32 ->
            d_field_CommandPartitionedTopicMetadataResponse_error(Rest,
                                                                  0,
                                                                  0,
                                                                  F@_1,
                                                                  F@_2,
                                                                  F@_3,
                                                                  F@_4,
                                                                  F@_5,
                                                                  TrUserData);
        42 ->
            d_field_CommandPartitionedTopicMetadataResponse_message(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandPartitionedTopicMetadataResponse(Rest,
                                                                        0,
                                                                        0,
                                                                        F@_1,
                                                                        F@_2,
                                                                        F@_3,
                                                                        F@_4,
                                                                        F@_5,
                                                                        TrUserData);
                1 ->
                    skip_64_CommandPartitionedTopicMetadataResponse(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    TrUserData);
                2 ->
                    skip_length_delimited_CommandPartitionedTopicMetadataResponse(Rest,
                                                                                  0,
                                                                                  0,
                                                                                  F@_1,
                                                                                  F@_2,
                                                                                  F@_3,
                                                                                  F@_4,
                                                                                  F@_5,
                                                                                  TrUserData);
                3 ->
                    skip_group_CommandPartitionedTopicMetadataResponse(Rest,
                                                                       Key bsr
                                                                           3,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       F@_3,
                                                                       F@_4,
                                                                       F@_5,
                                                                       TrUserData);
                5 ->
                    skip_32_CommandPartitionedTopicMetadataResponse(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    TrUserData)
            end
    end;
dg_read_field_def_CommandPartitionedTopicMetadataResponse(<<>>,
                                                          0, 0, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          _) ->
    S1 = #{request_id => F@_2},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{partitions => F@_1}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{response => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end.

d_field_CommandPartitionedTopicMetadataResponse_partitions(<<1:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadataResponse_partitions(Rest,
                                                               N + 7,
                                                               X bsl N + Acc,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
d_field_CommandPartitionedTopicMetadataResponse_partitions(<<0:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, _, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(RestF,
                                                               0,
                                                               0,
                                                               NewFValue,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData).

d_field_CommandPartitionedTopicMetadataResponse_request_id(<<1:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, F@_2,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadataResponse_request_id(Rest,
                                                               N + 7,
                                                               X bsl N + Acc,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData);
d_field_CommandPartitionedTopicMetadataResponse_request_id(<<0:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, _,
                                                           F@_3, F@_4, F@_5,
                                                           TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(RestF,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               NewFValue,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData).

d_field_CommandPartitionedTopicMetadataResponse_response(<<1:1,
                                                           X:7, Rest/binary>>,
                                                         N, Acc, F@_1, F@_2,
                                                         F@_3, F@_4, F@_5,
                                                         TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadataResponse_response(Rest,
                                                             N + 7,
                                                             X bsl N + Acc,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
d_field_CommandPartitionedTopicMetadataResponse_response(<<0:1,
                                                           X:7, Rest/binary>>,
                                                         N, Acc, F@_1, F@_2, _,
                                                         F@_4, F@_5,
                                                         TrUserData) ->
    {NewFValue, RestF} =
        {id('d_enum_CommandPartitionedTopicMetadataResponse.LookupType'(begin
                                                                            <<Res:32/signed-native>> =
                                                                                <<(X
                                                                                       bsl
                                                                                       N
                                                                                       +
                                                                                       Acc):32/unsigned-native>>,
                                                                            id(Res,
                                                                               TrUserData)
                                                                        end),
            TrUserData),
         Rest},
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(RestF,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               NewFValue,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData).

d_field_CommandPartitionedTopicMetadataResponse_error(<<1:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadataResponse_error(Rest,
                                                          N + 7,
                                                          X bsl N + Acc,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData);
d_field_CommandPartitionedTopicMetadataResponse_error(<<0:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      _, F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(RestF,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               NewFValue,
                                                               F@_5,
                                                               TrUserData).

d_field_CommandPartitionedTopicMetadataResponse_message(<<1:1,
                                                          X:7, Rest/binary>>,
                                                        N, Acc, F@_1, F@_2,
                                                        F@_3, F@_4, F@_5,
                                                        TrUserData)
    when N < 57 ->
    d_field_CommandPartitionedTopicMetadataResponse_message(Rest,
                                                            N + 7,
                                                            X bsl N + Acc,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            TrUserData);
d_field_CommandPartitionedTopicMetadataResponse_message(<<0:1,
                                                          X:7, Rest/binary>>,
                                                        N, Acc, F@_1, F@_2,
                                                        F@_3, F@_4, _,
                                                        TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(RestF,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               NewFValue,
                                                               TrUserData).

skip_varint_CommandPartitionedTopicMetadataResponse(<<1:1,
                                                      _:7, Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    skip_varint_CommandPartitionedTopicMetadataResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
skip_varint_CommandPartitionedTopicMetadataResponse(<<0:1,
                                                      _:7, Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData).

skip_length_delimited_CommandPartitionedTopicMetadataResponse(<<1:1,
                                                                X:7,
                                                                Rest/binary>>,
                                                              N, Acc, F@_1,
                                                              F@_2, F@_3, F@_4,
                                                              F@_5, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandPartitionedTopicMetadataResponse(Rest,
                                                                  N + 7,
                                                                  X bsl N + Acc,
                                                                  F@_1,
                                                                  F@_2,
                                                                  F@_3,
                                                                  F@_4,
                                                                  F@_5,
                                                                  TrUserData);
skip_length_delimited_CommandPartitionedTopicMetadataResponse(<<0:1,
                                                                X:7,
                                                                Rest/binary>>,
                                                              N, Acc, F@_1,
                                                              F@_2, F@_3, F@_4,
                                                              F@_5,
                                                              TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(Rest2,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData).

skip_group_CommandPartitionedTopicMetadataResponse(Bin,
                                                   FNum, Z2, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(Rest,
                                                               0,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData).

skip_32_CommandPartitionedTopicMetadataResponse(<<_:32,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, TrUserData) ->
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData).

skip_64_CommandPartitionedTopicMetadataResponse(<<_:64,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, TrUserData) ->
    dfp_read_field_def_CommandPartitionedTopicMetadataResponse(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               TrUserData).

decode_msg_CommandLookupTopic(Bin, TrUserData) ->
    dfp_read_field_def_CommandLookupTopic(Bin,
                                          0,
                                          0,
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          TrUserData).

dfp_read_field_def_CommandLookupTopic(<<10,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, TrUserData) ->
    d_field_CommandLookupTopic_topic(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     TrUserData);
dfp_read_field_def_CommandLookupTopic(<<16,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, TrUserData) ->
    d_field_CommandLookupTopic_request_id(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData);
dfp_read_field_def_CommandLookupTopic(<<24,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, TrUserData) ->
    d_field_CommandLookupTopic_authoritative(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             TrUserData);
dfp_read_field_def_CommandLookupTopic(<<34,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, TrUserData) ->
    d_field_CommandLookupTopic_original_principal(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  TrUserData);
dfp_read_field_def_CommandLookupTopic(<<42,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, TrUserData) ->
    d_field_CommandLookupTopic_original_auth_data(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  TrUserData);
dfp_read_field_def_CommandLookupTopic(<<50,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, TrUserData) ->
    d_field_CommandLookupTopic_original_auth_method(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    TrUserData);
dfp_read_field_def_CommandLookupTopic(<<58,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, TrUserData) ->
    d_field_CommandLookupTopic_advertised_listener_name(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        TrUserData);
dfp_read_field_def_CommandLookupTopic(<<>>, 0, 0, F@_1,
                                      F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, _) ->
    S1 = #{topic => F@_1, request_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{authoritative => F@_3}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{original_principal => F@_4}
         end,
    S4 = if F@_5 == '$undef' -> S3;
            true -> S3#{original_auth_data => F@_5}
         end,
    S5 = if F@_6 == '$undef' -> S4;
            true -> S4#{original_auth_method => F@_6}
         end,
    if F@_7 == '$undef' -> S5;
       true -> S5#{advertised_listener_name => F@_7}
    end;
dfp_read_field_def_CommandLookupTopic(Other, Z1, Z2,
                                      F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                                      TrUserData) ->
    dg_read_field_def_CommandLookupTopic(Other,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         TrUserData).

dg_read_field_def_CommandLookupTopic(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandLookupTopic(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         TrUserData);
dg_read_field_def_CommandLookupTopic(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandLookupTopic_topic(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             TrUserData);
        16 ->
            d_field_CommandLookupTopic_request_id(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  TrUserData);
        24 ->
            d_field_CommandLookupTopic_authoritative(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     TrUserData);
        34 ->
            d_field_CommandLookupTopic_original_principal(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          TrUserData);
        42 ->
            d_field_CommandLookupTopic_original_auth_data(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          TrUserData);
        50 ->
            d_field_CommandLookupTopic_original_auth_method(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            F@_6,
                                                            F@_7,
                                                            TrUserData);
        58 ->
            d_field_CommandLookupTopic_advertised_listener_name(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                F@_6,
                                                                F@_7,
                                                                TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandLookupTopic(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   F@_7,
                                                   TrUserData);
                1 ->
                    skip_64_CommandLookupTopic(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               TrUserData);
                2 ->
                    skip_length_delimited_CommandLookupTopic(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             F@_7,
                                                             TrUserData);
                3 ->
                    skip_group_CommandLookupTopic(Rest,
                                                  Key bsr 3,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  TrUserData);
                5 ->
                    skip_32_CommandLookupTopic(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               TrUserData)
            end
    end;
dg_read_field_def_CommandLookupTopic(<<>>, 0, 0, F@_1,
                                     F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, _) ->
    S1 = #{topic => F@_1, request_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{authoritative => F@_3}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{original_principal => F@_4}
         end,
    S4 = if F@_5 == '$undef' -> S3;
            true -> S3#{original_auth_data => F@_5}
         end,
    S5 = if F@_6 == '$undef' -> S4;
            true -> S4#{original_auth_method => F@_6}
         end,
    if F@_7 == '$undef' -> S5;
       true -> S5#{advertised_listener_name => F@_7}
    end.

d_field_CommandLookupTopic_topic(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopic_topic(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     TrUserData);
d_field_CommandLookupTopic_topic(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                                 TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandLookupTopic(RestF,
                                          0,
                                          0,
                                          NewFValue,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

d_field_CommandLookupTopic_request_id(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopic_request_id(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData);
d_field_CommandLookupTopic_request_id(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, _, F@_3, F@_4, F@_5, F@_6,
                                      F@_7, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandLookupTopic(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          NewFValue,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

d_field_CommandLookupTopic_authoritative(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopic_authoritative(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             TrUserData);
d_field_CommandLookupTopic_authoritative(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, _, F@_4, F@_5,
                                         F@_6, F@_7, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandLookupTopic(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          NewFValue,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

d_field_CommandLookupTopic_original_principal(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopic_original_principal(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  TrUserData);
d_field_CommandLookupTopic_original_principal(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, _, F@_5,
                                              F@_6, F@_7, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandLookupTopic(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          NewFValue,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

d_field_CommandLookupTopic_original_auth_data(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopic_original_auth_data(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  TrUserData);
d_field_CommandLookupTopic_original_auth_data(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4, _,
                                              F@_6, F@_7, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandLookupTopic(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          NewFValue,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

d_field_CommandLookupTopic_original_auth_method(<<1:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopic_original_auth_method(Rest,
                                                    N + 7,
                                                    X bsl N + Acc,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    TrUserData);
d_field_CommandLookupTopic_original_auth_method(<<0:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, _, F@_7, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandLookupTopic(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          NewFValue,
                                          F@_7,
                                          TrUserData).

d_field_CommandLookupTopic_advertised_listener_name(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopic_advertised_listener_name(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        TrUserData);
d_field_CommandLookupTopic_advertised_listener_name(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, _,
                                                    TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandLookupTopic(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          NewFValue,
                                          TrUserData).

skip_varint_CommandLookupTopic(<<1:1, _:7,
                                 Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    skip_varint_CommandLookupTopic(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData);
skip_varint_CommandLookupTopic(<<0:1, _:7,
                                 Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    dfp_read_field_def_CommandLookupTopic(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

skip_length_delimited_CommandLookupTopic(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandLookupTopic(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             TrUserData);
skip_length_delimited_CommandLookupTopic(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandLookupTopic(Rest2,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

skip_group_CommandLookupTopic(Bin, FNum, Z2, F@_1, F@_2,
                              F@_3, F@_4, F@_5, F@_6, F@_7, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandLookupTopic(Rest,
                                          0,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

skip_32_CommandLookupTopic(<<_:32, Rest/binary>>, Z1,
                           Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                           TrUserData) ->
    dfp_read_field_def_CommandLookupTopic(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

skip_64_CommandLookupTopic(<<_:64, Rest/binary>>, Z1,
                           Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                           TrUserData) ->
    dfp_read_field_def_CommandLookupTopic(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          TrUserData).

decode_msg_CommandLookupTopicResponse(Bin,
                                      TrUserData) ->
    dfp_read_field_def_CommandLookupTopicResponse(Bin,
                                                  0,
                                                  0,
                                                  id('$undef', TrUserData),
                                                  id('$undef', TrUserData),
                                                  id('$undef', TrUserData),
                                                  id('$undef', TrUserData),
                                                  id('$undef', TrUserData),
                                                  id('$undef', TrUserData),
                                                  id('$undef', TrUserData),
                                                  id('$undef', TrUserData),
                                                  TrUserData).

dfp_read_field_def_CommandLookupTopicResponse(<<10,
                                                Rest/binary>>,
                                              Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData) ->
    d_field_CommandLookupTopicResponse_brokerServiceUrl(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        TrUserData);
dfp_read_field_def_CommandLookupTopicResponse(<<18,
                                                Rest/binary>>,
                                              Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData) ->
    d_field_CommandLookupTopicResponse_brokerServiceUrlTls(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           F@_6,
                                                           F@_7,
                                                           F@_8,
                                                           TrUserData);
dfp_read_field_def_CommandLookupTopicResponse(<<24,
                                                Rest/binary>>,
                                              Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData) ->
    d_field_CommandLookupTopicResponse_response(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                TrUserData);
dfp_read_field_def_CommandLookupTopicResponse(<<32,
                                                Rest/binary>>,
                                              Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData) ->
    d_field_CommandLookupTopicResponse_request_id(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData);
dfp_read_field_def_CommandLookupTopicResponse(<<40,
                                                Rest/binary>>,
                                              Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData) ->
    d_field_CommandLookupTopicResponse_authoritative(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     TrUserData);
dfp_read_field_def_CommandLookupTopicResponse(<<48,
                                                Rest/binary>>,
                                              Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData) ->
    d_field_CommandLookupTopicResponse_error(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             TrUserData);
dfp_read_field_def_CommandLookupTopicResponse(<<58,
                                                Rest/binary>>,
                                              Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData) ->
    d_field_CommandLookupTopicResponse_message(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               TrUserData);
dfp_read_field_def_CommandLookupTopicResponse(<<64,
                                                Rest/binary>>,
                                              Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData) ->
    d_field_CommandLookupTopicResponse_proxy_through_service_url(Rest,
                                                                 Z1,
                                                                 Z2,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 F@_6,
                                                                 F@_7,
                                                                 F@_8,
                                                                 TrUserData);
dfp_read_field_def_CommandLookupTopicResponse(<<>>, 0,
                                              0, F@_1, F@_2, F@_3, F@_4, F@_5,
                                              F@_6, F@_7, F@_8, _) ->
    S1 = #{request_id => F@_4},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{brokerServiceUrl => F@_1}
         end,
    S3 = if F@_2 == '$undef' -> S2;
            true -> S2#{brokerServiceUrlTls => F@_2}
         end,
    S4 = if F@_3 == '$undef' -> S3;
            true -> S3#{response => F@_3}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{authoritative => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{error => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{message => F@_7}
         end,
    if F@_8 == '$undef' -> S7;
       true -> S7#{proxy_through_service_url => F@_8}
    end;
dfp_read_field_def_CommandLookupTopicResponse(Other, Z1,
                                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                              F@_6, F@_7, F@_8, TrUserData) ->
    dg_read_field_def_CommandLookupTopicResponse(Other,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 TrUserData).

dg_read_field_def_CommandLookupTopicResponse(<<1:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, F@_6, F@_7, F@_8, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandLookupTopicResponse(Rest,
                                                 N + 7,
                                                 X bsl N + Acc,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 TrUserData);
dg_read_field_def_CommandLookupTopicResponse(<<0:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, F@_6, F@_7, F@_8,
                                             TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandLookupTopicResponse_brokerServiceUrl(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                F@_6,
                                                                F@_7,
                                                                F@_8,
                                                                TrUserData);
        18 ->
            d_field_CommandLookupTopicResponse_brokerServiceUrlTls(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   F@_5,
                                                                   F@_6,
                                                                   F@_7,
                                                                   F@_8,
                                                                   TrUserData);
        24 ->
            d_field_CommandLookupTopicResponse_response(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        TrUserData);
        32 ->
            d_field_CommandLookupTopicResponse_request_id(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          TrUserData);
        40 ->
            d_field_CommandLookupTopicResponse_authoritative(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             F@_7,
                                                             F@_8,
                                                             TrUserData);
        48 ->
            d_field_CommandLookupTopicResponse_error(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     TrUserData);
        58 ->
            d_field_CommandLookupTopicResponse_message(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       TrUserData);
        64 ->
            d_field_CommandLookupTopicResponse_proxy_through_service_url(Rest,
                                                                         0,
                                                                         0,
                                                                         F@_1,
                                                                         F@_2,
                                                                         F@_3,
                                                                         F@_4,
                                                                         F@_5,
                                                                         F@_6,
                                                                         F@_7,
                                                                         F@_8,
                                                                         TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandLookupTopicResponse(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           F@_6,
                                                           F@_7,
                                                           F@_8,
                                                           TrUserData);
                1 ->
                    skip_64_CommandLookupTopicResponse(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       TrUserData);
                2 ->
                    skip_length_delimited_CommandLookupTopicResponse(Rest,
                                                                     0,
                                                                     0,
                                                                     F@_1,
                                                                     F@_2,
                                                                     F@_3,
                                                                     F@_4,
                                                                     F@_5,
                                                                     F@_6,
                                                                     F@_7,
                                                                     F@_8,
                                                                     TrUserData);
                3 ->
                    skip_group_CommandLookupTopicResponse(Rest,
                                                          Key bsr 3,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          TrUserData);
                5 ->
                    skip_32_CommandLookupTopicResponse(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       TrUserData)
            end
    end;
dg_read_field_def_CommandLookupTopicResponse(<<>>, 0, 0,
                                             F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                             F@_7, F@_8, _) ->
    S1 = #{request_id => F@_4},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{brokerServiceUrl => F@_1}
         end,
    S3 = if F@_2 == '$undef' -> S2;
            true -> S2#{brokerServiceUrlTls => F@_2}
         end,
    S4 = if F@_3 == '$undef' -> S3;
            true -> S3#{response => F@_3}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{authoritative => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{error => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{message => F@_7}
         end,
    if F@_8 == '$undef' -> S7;
       true -> S7#{proxy_through_service_url => F@_8}
    end.

d_field_CommandLookupTopicResponse_brokerServiceUrl(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopicResponse_brokerServiceUrl(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        TrUserData);
d_field_CommandLookupTopicResponse_brokerServiceUrl(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, _, F@_2, F@_3, F@_4,
                                                    F@_5, F@_6, F@_7, F@_8,
                                                    TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandLookupTopicResponse(RestF,
                                                  0,
                                                  0,
                                                  NewFValue,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

d_field_CommandLookupTopicResponse_brokerServiceUrlTls(<<1:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5, F@_6, F@_7,
                                                       F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopicResponse_brokerServiceUrlTls(Rest,
                                                           N + 7,
                                                           X bsl N + Acc,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           F@_6,
                                                           F@_7,
                                                           F@_8,
                                                           TrUserData);
d_field_CommandLookupTopicResponse_brokerServiceUrlTls(<<0:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, _, F@_3,
                                                       F@_4, F@_5, F@_6, F@_7,
                                                       F@_8, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandLookupTopicResponse(RestF,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  NewFValue,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

d_field_CommandLookupTopicResponse_response(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, F@_7, F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopicResponse_response(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                TrUserData);
d_field_CommandLookupTopicResponse_response(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, _, F@_4, F@_5,
                                            F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} =
        {id('d_enum_CommandLookupTopicResponse.LookupType'(begin
                                                               <<Res:32/signed-native>> =
                                                                   <<(X bsl N +
                                                                          Acc):32/unsigned-native>>,
                                                               id(Res,
                                                                  TrUserData)
                                                           end),
            TrUserData),
         Rest},
    dfp_read_field_def_CommandLookupTopicResponse(RestF,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  NewFValue,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

d_field_CommandLookupTopicResponse_request_id(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8,
                                              TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopicResponse_request_id(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData);
d_field_CommandLookupTopicResponse_request_id(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, _, F@_5,
                                              F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandLookupTopicResponse(RestF,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  NewFValue,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

d_field_CommandLookupTopicResponse_authoritative(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8,
                                                 TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopicResponse_authoritative(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     TrUserData);
d_field_CommandLookupTopicResponse_authoritative(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 _, F@_6, F@_7, F@_8,
                                                 TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandLookupTopicResponse(RestF,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  NewFValue,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

d_field_CommandLookupTopicResponse_error(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopicResponse_error(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             TrUserData);
d_field_CommandLookupTopicResponse_error(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         _, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandLookupTopicResponse(RestF,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  NewFValue,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

d_field_CommandLookupTopicResponse_message(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopicResponse_message(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               TrUserData);
d_field_CommandLookupTopicResponse_message(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, _, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandLookupTopicResponse(RestF,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  NewFValue,
                                                  F@_8,
                                                  TrUserData).

d_field_CommandLookupTopicResponse_proxy_through_service_url(<<1:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             F@_3, F@_4, F@_5,
                                                             F@_6, F@_7, F@_8,
                                                             TrUserData)
    when N < 57 ->
    d_field_CommandLookupTopicResponse_proxy_through_service_url(Rest,
                                                                 N + 7,
                                                                 X bsl N + Acc,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 F@_6,
                                                                 F@_7,
                                                                 F@_8,
                                                                 TrUserData);
d_field_CommandLookupTopicResponse_proxy_through_service_url(<<0:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             F@_3, F@_4, F@_5,
                                                             F@_6, F@_7, _,
                                                             TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandLookupTopicResponse(RestF,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  NewFValue,
                                                  TrUserData).

skip_varint_CommandLookupTopicResponse(<<1:1, _:7,
                                         Rest/binary>>,
                                       Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, TrUserData) ->
    skip_varint_CommandLookupTopicResponse(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           TrUserData);
skip_varint_CommandLookupTopicResponse(<<0:1, _:7,
                                         Rest/binary>>,
                                       Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, F@_7, F@_8, TrUserData) ->
    dfp_read_field_def_CommandLookupTopicResponse(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

skip_length_delimited_CommandLookupTopicResponse(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8,
                                                 TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandLookupTopicResponse(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     TrUserData);
skip_length_delimited_CommandLookupTopicResponse(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8,
                                                 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandLookupTopicResponse(Rest2,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

skip_group_CommandLookupTopicResponse(Bin, FNum, Z2,
                                      F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                                      F@_8, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandLookupTopicResponse(Rest,
                                                  0,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

skip_32_CommandLookupTopicResponse(<<_:32,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, TrUserData) ->
    dfp_read_field_def_CommandLookupTopicResponse(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

skip_64_CommandLookupTopicResponse(<<_:64,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, TrUserData) ->
    dfp_read_field_def_CommandLookupTopicResponse(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  TrUserData).

decode_msg_CommandProducer(Bin, TrUserData) ->
    dfp_read_field_def_CommandProducer(Bin,
                                       0,
                                       0,
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id([], TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       id('$undef', TrUserData),
                                       TrUserData).

dfp_read_field_def_CommandProducer(<<10, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_topic(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  TrUserData);
dfp_read_field_def_CommandProducer(<<16, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_producer_id(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        TrUserData);
dfp_read_field_def_CommandProducer(<<24, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_request_id(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData);
dfp_read_field_def_CommandProducer(<<34, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_producer_name(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          TrUserData);
dfp_read_field_def_CommandProducer(<<40, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_encrypted(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      TrUserData);
dfp_read_field_def_CommandProducer(<<50, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_metadata(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     TrUserData);
dfp_read_field_def_CommandProducer(<<58, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_schema(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   TrUserData);
dfp_read_field_def_CommandProducer(<<64, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_epoch(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  TrUserData);
dfp_read_field_def_CommandProducer(<<72, Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    d_field_CommandProducer_user_provided_producer_name(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        TrUserData);
dfp_read_field_def_CommandProducer(<<>>, 0, 0, F@_1,
                                   F@_2, F@_3, F@_4, F@_5, R1, F@_7, F@_8, F@_9,
                                   TrUserData) ->
    S1 = #{topic => F@_1, producer_id => F@_2,
           request_id => F@_3},
    S2 = if F@_4 == '$undef' -> S1;
            true -> S1#{producer_name => F@_4}
         end,
    S3 = if F@_5 == '$undef' -> S2;
            true -> S2#{encrypted => F@_5}
         end,
    S4 = if R1 == '$undef' -> S3;
            true -> S3#{metadata => lists_reverse(R1, TrUserData)}
         end,
    S5 = if F@_7 == '$undef' -> S4;
            true -> S4#{schema => F@_7}
         end,
    S6 = if F@_8 == '$undef' -> S5;
            true -> S5#{epoch => F@_8}
         end,
    if F@_9 == '$undef' -> S6;
       true -> S6#{user_provided_producer_name => F@_9}
    end;
dfp_read_field_def_CommandProducer(Other, Z1, Z2, F@_1,
                                   F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                                   F@_9, TrUserData) ->
    dg_read_field_def_CommandProducer(Other,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      TrUserData).

dg_read_field_def_CommandProducer(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandProducer(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      TrUserData);
dg_read_field_def_CommandProducer(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandProducer_topic(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          TrUserData);
        16 ->
            d_field_CommandProducer_producer_id(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                TrUserData);
        24 ->
            d_field_CommandProducer_request_id(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               TrUserData);
        34 ->
            d_field_CommandProducer_producer_name(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  TrUserData);
        40 ->
            d_field_CommandProducer_encrypted(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              TrUserData);
        50 ->
            d_field_CommandProducer_metadata(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             TrUserData);
        58 ->
            d_field_CommandProducer_schema(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           TrUserData);
        64 ->
            d_field_CommandProducer_epoch(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          TrUserData);
        72 ->
            d_field_CommandProducer_user_provided_producer_name(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                F@_6,
                                                                F@_7,
                                                                F@_8,
                                                                F@_9,
                                                                TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandProducer(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                F@_9,
                                                TrUserData);
                1 ->
                    skip_64_CommandProducer(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            TrUserData);
                2 ->
                    skip_length_delimited_CommandProducer(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          TrUserData);
                3 ->
                    skip_group_CommandProducer(Rest,
                                               Key bsr 3,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               TrUserData);
                5 ->
                    skip_32_CommandProducer(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            TrUserData)
            end
    end;
dg_read_field_def_CommandProducer(<<>>, 0, 0, F@_1,
                                  F@_2, F@_3, F@_4, F@_5, R1, F@_7, F@_8, F@_9,
                                  TrUserData) ->
    S1 = #{topic => F@_1, producer_id => F@_2,
           request_id => F@_3},
    S2 = if F@_4 == '$undef' -> S1;
            true -> S1#{producer_name => F@_4}
         end,
    S3 = if F@_5 == '$undef' -> S2;
            true -> S2#{encrypted => F@_5}
         end,
    S4 = if R1 == '$undef' -> S3;
            true -> S3#{metadata => lists_reverse(R1, TrUserData)}
         end,
    S5 = if F@_7 == '$undef' -> S4;
            true -> S4#{schema => F@_7}
         end,
    S6 = if F@_8 == '$undef' -> S5;
            true -> S5#{epoch => F@_8}
         end,
    if F@_9 == '$undef' -> S6;
       true -> S6#{user_provided_producer_name => F@_9}
    end.

d_field_CommandProducer_topic(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_topic(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  TrUserData);
d_field_CommandProducer_topic(<<0:1, X:7, Rest/binary>>,
                              N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       NewFValue,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

d_field_CommandProducer_producer_id(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_producer_id(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        TrUserData);
d_field_CommandProducer_producer_id(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, _, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, F@_9, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       NewFValue,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

d_field_CommandProducer_request_id(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_request_id(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData);
d_field_CommandProducer_request_id(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, _, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       NewFValue,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

d_field_CommandProducer_producer_name(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_producer_name(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          TrUserData);
d_field_CommandProducer_producer_name(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, _, F@_5, F@_6,
                                      F@_7, F@_8, F@_9, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       NewFValue,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

d_field_CommandProducer_encrypted(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_encrypted(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      TrUserData);
d_field_CommandProducer_encrypted(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, _, F@_6, F@_7,
                                  F@_8, F@_9, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       NewFValue,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

d_field_CommandProducer_metadata(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_metadata(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     TrUserData);
d_field_CommandProducer_metadata(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, Prev,
                                 F@_7, F@_8, F@_9, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_KeyValue(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       cons(NewFValue, Prev, TrUserData),
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

d_field_CommandProducer_schema(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_schema(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   TrUserData);
d_field_CommandProducer_schema(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, Prev,
                               F@_8, F@_9, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_Schema(Bs, TrUserData), TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       if Prev == '$undef' -> NewFValue;
                                          true ->
                                              merge_msg_Schema(Prev,
                                                               NewFValue,
                                                               TrUserData)
                                       end,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

d_field_CommandProducer_epoch(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_epoch(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  TrUserData);
d_field_CommandProducer_epoch(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              _, F@_9, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       NewFValue,
                                       F@_9,
                                       TrUserData).

d_field_CommandProducer_user_provided_producer_name(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, TrUserData)
    when N < 57 ->
    d_field_CommandProducer_user_provided_producer_name(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        TrUserData);
d_field_CommandProducer_user_provided_producer_name(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandProducer(RestF,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       NewFValue,
                                       TrUserData).

skip_varint_CommandProducer(<<1:1, _:7, Rest/binary>>,
                            Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, TrUserData) ->
    skip_varint_CommandProducer(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                F@_9,
                                TrUserData);
skip_varint_CommandProducer(<<0:1, _:7, Rest/binary>>,
                            Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, TrUserData) ->
    dfp_read_field_def_CommandProducer(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

skip_length_delimited_CommandProducer(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandProducer(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          TrUserData);
skip_length_delimited_CommandProducer(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandProducer(Rest2,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

skip_group_CommandProducer(Bin, FNum, Z2, F@_1, F@_2,
                           F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                           TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandProducer(Rest,
                                       0,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

skip_32_CommandProducer(<<_:32, Rest/binary>>, Z1, Z2,
                        F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                        TrUserData) ->
    dfp_read_field_def_CommandProducer(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

skip_64_CommandProducer(<<_:64, Rest/binary>>, Z1, Z2,
                        F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                        TrUserData) ->
    dfp_read_field_def_CommandProducer(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       TrUserData).

decode_msg_CommandSend(Bin, TrUserData) ->
    dfp_read_field_def_CommandSend(Bin,
                                   0,
                                   0,
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   TrUserData).

dfp_read_field_def_CommandSend(<<8, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    d_field_CommandSend_producer_id(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    TrUserData);
dfp_read_field_def_CommandSend(<<16, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    d_field_CommandSend_sequence_id(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    TrUserData);
dfp_read_field_def_CommandSend(<<24, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    d_field_CommandSend_num_messages(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     TrUserData);
dfp_read_field_def_CommandSend(<<32, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    d_field_CommandSend_txnid_least_bits(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         TrUserData);
dfp_read_field_def_CommandSend(<<40, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    d_field_CommandSend_txnid_most_bits(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        TrUserData);
dfp_read_field_def_CommandSend(<<48, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    d_field_CommandSend_highest_sequence_id(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            TrUserData);
dfp_read_field_def_CommandSend(<<56, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    d_field_CommandSend_is_chunk(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 TrUserData);
dfp_read_field_def_CommandSend(<<>>, 0, 0, F@_1, F@_2,
                               F@_3, F@_4, F@_5, F@_6, F@_7, _) ->
    S1 = #{producer_id => F@_1, sequence_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{num_messages => F@_3}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{txnid_least_bits => F@_4}
         end,
    S4 = if F@_5 == '$undef' -> S3;
            true -> S3#{txnid_most_bits => F@_5}
         end,
    S5 = if F@_6 == '$undef' -> S4;
            true -> S4#{highest_sequence_id => F@_6}
         end,
    if F@_7 == '$undef' -> S5;
       true -> S5#{is_chunk => F@_7}
    end;
dfp_read_field_def_CommandSend(Other, Z1, Z2, F@_1,
                               F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               TrUserData) ->
    dg_read_field_def_CommandSend(Other,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  TrUserData).

dg_read_field_def_CommandSend(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandSend(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  TrUserData);
dg_read_field_def_CommandSend(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandSend_producer_id(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            TrUserData);
        16 ->
            d_field_CommandSend_sequence_id(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            TrUserData);
        24 ->
            d_field_CommandSend_num_messages(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             TrUserData);
        32 ->
            d_field_CommandSend_txnid_least_bits(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 TrUserData);
        40 ->
            d_field_CommandSend_txnid_most_bits(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                TrUserData);
        48 ->
            d_field_CommandSend_highest_sequence_id(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    TrUserData);
        56 ->
            d_field_CommandSend_is_chunk(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandSend(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            TrUserData);
                1 ->
                    skip_64_CommandSend(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        TrUserData);
                2 ->
                    skip_length_delimited_CommandSend(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      TrUserData);
                3 ->
                    skip_group_CommandSend(Rest,
                                           Key bsr 3,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           TrUserData);
                5 ->
                    skip_32_CommandSend(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        TrUserData)
            end
    end;
dg_read_field_def_CommandSend(<<>>, 0, 0, F@_1, F@_2,
                              F@_3, F@_4, F@_5, F@_6, F@_7, _) ->
    S1 = #{producer_id => F@_1, sequence_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{num_messages => F@_3}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{txnid_least_bits => F@_4}
         end,
    S4 = if F@_5 == '$undef' -> S3;
            true -> S3#{txnid_most_bits => F@_5}
         end,
    S5 = if F@_6 == '$undef' -> S4;
            true -> S4#{highest_sequence_id => F@_6}
         end,
    if F@_7 == '$undef' -> S5;
       true -> S5#{is_chunk => F@_7}
    end.

d_field_CommandSend_producer_id(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandSend_producer_id(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    TrUserData);
d_field_CommandSend_producer_id(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                                TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSend(RestF,
                                   0,
                                   0,
                                   NewFValue,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

d_field_CommandSend_sequence_id(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandSend_sequence_id(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    TrUserData);
d_field_CommandSend_sequence_id(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, _, F@_3, F@_4, F@_5, F@_6, F@_7,
                                TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSend(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   NewFValue,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

d_field_CommandSend_num_messages(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandSend_num_messages(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     TrUserData);
d_field_CommandSend_num_messages(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, _, F@_4, F@_5, F@_6, F@_7,
                                 TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:32/signed-native>> = <<(X bsl N +
                                                                Acc):32/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandSend(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   NewFValue,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

d_field_CommandSend_txnid_least_bits(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandSend_txnid_least_bits(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         TrUserData);
d_field_CommandSend_txnid_least_bits(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, _, F@_5, F@_6,
                                     F@_7, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSend(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   NewFValue,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

d_field_CommandSend_txnid_most_bits(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandSend_txnid_most_bits(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        TrUserData);
d_field_CommandSend_txnid_most_bits(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, _, F@_6,
                                    F@_7, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSend(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   NewFValue,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

d_field_CommandSend_highest_sequence_id(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, TrUserData)
    when N < 57 ->
    d_field_CommandSend_highest_sequence_id(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            TrUserData);
d_field_CommandSend_highest_sequence_id(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, _,
                                        F@_7, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSend(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   NewFValue,
                                   F@_7,
                                   TrUserData).

d_field_CommandSend_is_chunk(<<1:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                             TrUserData)
    when N < 57 ->
    d_field_CommandSend_is_chunk(Rest,
                                 N + 7,
                                 X bsl N + Acc,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 TrUserData);
d_field_CommandSend_is_chunk(<<0:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, _,
                             TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandSend(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   NewFValue,
                                   TrUserData).

skip_varint_CommandSend(<<1:1, _:7, Rest/binary>>, Z1,
                        Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                        TrUserData) ->
    skip_varint_CommandSend(Rest,
                            Z1,
                            Z2,
                            F@_1,
                            F@_2,
                            F@_3,
                            F@_4,
                            F@_5,
                            F@_6,
                            F@_7,
                            TrUserData);
skip_varint_CommandSend(<<0:1, _:7, Rest/binary>>, Z1,
                        Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                        TrUserData) ->
    dfp_read_field_def_CommandSend(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

skip_length_delimited_CommandSend(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandSend(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      TrUserData);
skip_length_delimited_CommandSend(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandSend(Rest2,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

skip_group_CommandSend(Bin, FNum, Z2, F@_1, F@_2, F@_3,
                       F@_4, F@_5, F@_6, F@_7, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandSend(Rest,
                                   0,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

skip_32_CommandSend(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
                    F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, TrUserData) ->
    dfp_read_field_def_CommandSend(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

skip_64_CommandSend(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
                    F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, TrUserData) ->
    dfp_read_field_def_CommandSend(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   TrUserData).

decode_msg_CommandSendReceipt(Bin, TrUserData) ->
    dfp_read_field_def_CommandSendReceipt(Bin,
                                          0,
                                          0,
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          TrUserData).

dfp_read_field_def_CommandSendReceipt(<<8,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                      TrUserData) ->
    d_field_CommandSendReceipt_producer_id(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
dfp_read_field_def_CommandSendReceipt(<<16,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                      TrUserData) ->
    d_field_CommandSendReceipt_sequence_id(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
dfp_read_field_def_CommandSendReceipt(<<26,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                      TrUserData) ->
    d_field_CommandSendReceipt_message_id(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          TrUserData);
dfp_read_field_def_CommandSendReceipt(<<32,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                      TrUserData) ->
    d_field_CommandSendReceipt_highest_sequence_id(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
dfp_read_field_def_CommandSendReceipt(<<>>, 0, 0, F@_1,
                                      F@_2, F@_3, F@_4, _) ->
    S1 = #{producer_id => F@_1, sequence_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{message_id => F@_3}
         end,
    if F@_4 == '$undef' -> S2;
       true -> S2#{highest_sequence_id => F@_4}
    end;
dfp_read_field_def_CommandSendReceipt(Other, Z1, Z2,
                                      F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dg_read_field_def_CommandSendReceipt(Other,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         TrUserData).

dg_read_field_def_CommandSendReceipt(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandSendReceipt(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         TrUserData);
dg_read_field_def_CommandSendReceipt(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4,
                                     TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandSendReceipt_producer_id(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
        16 ->
            d_field_CommandSendReceipt_sequence_id(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
        26 ->
            d_field_CommandSendReceipt_message_id(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  TrUserData);
        32 ->
            d_field_CommandSendReceipt_highest_sequence_id(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandSendReceipt(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
                1 ->
                    skip_64_CommandSendReceipt(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               TrUserData);
                2 ->
                    skip_length_delimited_CommandSendReceipt(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             TrUserData);
                3 ->
                    skip_group_CommandSendReceipt(Rest,
                                                  Key bsr 3,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  TrUserData);
                5 ->
                    skip_32_CommandSendReceipt(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               TrUserData)
            end
    end;
dg_read_field_def_CommandSendReceipt(<<>>, 0, 0, F@_1,
                                     F@_2, F@_3, F@_4, _) ->
    S1 = #{producer_id => F@_1, sequence_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{message_id => F@_3}
         end,
    if F@_4 == '$undef' -> S2;
       true -> S2#{highest_sequence_id => F@_4}
    end.

d_field_CommandSendReceipt_producer_id(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4,
                                       TrUserData)
    when N < 57 ->
    d_field_CommandSendReceipt_producer_id(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
d_field_CommandSendReceipt_producer_id(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, _, F@_2, F@_3, F@_4,
                                       TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSendReceipt(RestF,
                                          0,
                                          0,
                                          NewFValue,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          TrUserData).

d_field_CommandSendReceipt_sequence_id(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4,
                                       TrUserData)
    when N < 57 ->
    d_field_CommandSendReceipt_sequence_id(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
d_field_CommandSendReceipt_sequence_id(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, _, F@_3, F@_4,
                                       TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSendReceipt(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          NewFValue,
                                          F@_3,
                                          F@_4,
                                          TrUserData).

d_field_CommandSendReceipt_message_id(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4,
                                      TrUserData)
    when N < 57 ->
    d_field_CommandSendReceipt_message_id(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          TrUserData);
d_field_CommandSendReceipt_message_id(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, Prev, F@_4,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSendReceipt(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          if Prev == '$undef' -> NewFValue;
                                             true ->
                                                 merge_msg_MessageIdData(Prev,
                                                                         NewFValue,
                                                                         TrUserData)
                                          end,
                                          F@_4,
                                          TrUserData).

d_field_CommandSendReceipt_highest_sequence_id(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData)
    when N < 57 ->
    d_field_CommandSendReceipt_highest_sequence_id(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
d_field_CommandSendReceipt_highest_sequence_id(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, _,
                                               TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSendReceipt(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          NewFValue,
                                          TrUserData).

skip_varint_CommandSendReceipt(<<1:1, _:7,
                                 Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    skip_varint_CommandSendReceipt(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
skip_varint_CommandSendReceipt(<<0:1, _:7,
                                 Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSendReceipt(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          TrUserData).

skip_length_delimited_CommandSendReceipt(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4,
                                         TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandSendReceipt(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             TrUserData);
skip_length_delimited_CommandSendReceipt(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4,
                                         TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandSendReceipt(Rest2,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          TrUserData).

skip_group_CommandSendReceipt(Bin, FNum, Z2, F@_1, F@_2,
                              F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandSendReceipt(Rest,
                                          0,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          TrUserData).

skip_32_CommandSendReceipt(<<_:32, Rest/binary>>, Z1,
                           Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSendReceipt(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          TrUserData).

skip_64_CommandSendReceipt(<<_:64, Rest/binary>>, Z1,
                           Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSendReceipt(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          TrUserData).

decode_msg_CommandSendError(Bin, TrUserData) ->
    dfp_read_field_def_CommandSendError(Bin,
                                        0,
                                        0,
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        TrUserData).

dfp_read_field_def_CommandSendError(<<8, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                    TrUserData) ->
    d_field_CommandSendError_producer_id(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         TrUserData);
dfp_read_field_def_CommandSendError(<<16, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                    TrUserData) ->
    d_field_CommandSendError_sequence_id(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         TrUserData);
dfp_read_field_def_CommandSendError(<<24, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                    TrUserData) ->
    d_field_CommandSendError_error(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
dfp_read_field_def_CommandSendError(<<34, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                    TrUserData) ->
    d_field_CommandSendError_message(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     TrUserData);
dfp_read_field_def_CommandSendError(<<>>, 0, 0, F@_1,
                                    F@_2, F@_3, F@_4, _) ->
    #{producer_id => F@_1, sequence_id => F@_2,
      error => F@_3, message => F@_4};
dfp_read_field_def_CommandSendError(Other, Z1, Z2, F@_1,
                                    F@_2, F@_3, F@_4, TrUserData) ->
    dg_read_field_def_CommandSendError(Other,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       TrUserData).

dg_read_field_def_CommandSendError(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandSendError(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       TrUserData);
dg_read_field_def_CommandSendError(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4,
                                   TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandSendError_producer_id(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 TrUserData);
        16 ->
            d_field_CommandSendError_sequence_id(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 TrUserData);
        24 ->
            d_field_CommandSendError_error(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
        34 ->
            d_field_CommandSendError_message(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandSendError(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 TrUserData);
                1 ->
                    skip_64_CommandSendError(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             TrUserData);
                2 ->
                    skip_length_delimited_CommandSendError(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           TrUserData);
                3 ->
                    skip_group_CommandSendError(Rest,
                                                Key bsr 3,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData);
                5 ->
                    skip_32_CommandSendError(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             TrUserData)
            end
    end;
dg_read_field_def_CommandSendError(<<>>, 0, 0, F@_1,
                                   F@_2, F@_3, F@_4, _) ->
    #{producer_id => F@_1, sequence_id => F@_2,
      error => F@_3, message => F@_4}.

d_field_CommandSendError_producer_id(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandSendError_producer_id(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         TrUserData);
d_field_CommandSendError_producer_id(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSendError(RestF,
                                        0,
                                        0,
                                        NewFValue,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        TrUserData).

d_field_CommandSendError_sequence_id(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandSendError_sequence_id(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         TrUserData);
d_field_CommandSendError_sequence_id(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, _, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSendError(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        NewFValue,
                                        F@_3,
                                        F@_4,
                                        TrUserData).

d_field_CommandSendError_error(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandSendError_error(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
d_field_CommandSendError_error(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandSendError(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        NewFValue,
                                        F@_4,
                                        TrUserData).

d_field_CommandSendError_message(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandSendError_message(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     TrUserData);
d_field_CommandSendError_message(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSendError(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        NewFValue,
                                        TrUserData).

skip_varint_CommandSendError(<<1:1, _:7, Rest/binary>>,
                             Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    skip_varint_CommandSendError(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 TrUserData);
skip_varint_CommandSendError(<<0:1, _:7, Rest/binary>>,
                             Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSendError(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        TrUserData).

skip_length_delimited_CommandSendError(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4,
                                       TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandSendError(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
skip_length_delimited_CommandSendError(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4,
                                       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandSendError(Rest2,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        TrUserData).

skip_group_CommandSendError(Bin, FNum, Z2, F@_1, F@_2,
                            F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandSendError(Rest,
                                        0,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        TrUserData).

skip_32_CommandSendError(<<_:32, Rest/binary>>, Z1, Z2,
                         F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSendError(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        TrUserData).

skip_64_CommandSendError(<<_:64, Rest/binary>>, Z1, Z2,
                         F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSendError(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        TrUserData).

decode_msg_CommandMessage(Bin, TrUserData) ->
    dfp_read_field_def_CommandMessage(Bin,
                                      0,
                                      0,
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      id([], TrUserData),
                                      TrUserData).

dfp_read_field_def_CommandMessage(<<8, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_CommandMessage_consumer_id(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       TrUserData);
dfp_read_field_def_CommandMessage(<<18, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_CommandMessage_message_id(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData);
dfp_read_field_def_CommandMessage(<<24, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_CommandMessage_redelivery_count(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            TrUserData);
dfp_read_field_def_CommandMessage(<<34, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_pfield_CommandMessage_ack_set(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    TrUserData);
dfp_read_field_def_CommandMessage(<<32, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_CommandMessage_ack_set(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
dfp_read_field_def_CommandMessage(<<>>, 0, 0, F@_1,
                                  F@_2, F@_3, R1, TrUserData) ->
    S1 = #{consumer_id => F@_1,
           ack_set => lists_reverse(R1, TrUserData)},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{message_id => F@_2}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{redelivery_count => F@_3}
    end;
dfp_read_field_def_CommandMessage(Other, Z1, Z2, F@_1,
                                  F@_2, F@_3, F@_4, TrUserData) ->
    dg_read_field_def_CommandMessage(Other,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     TrUserData).

dg_read_field_def_CommandMessage(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandMessage(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     TrUserData);
dg_read_field_def_CommandMessage(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandMessage_consumer_id(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               TrUserData);
        18 ->
            d_field_CommandMessage_message_id(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData);
        24 ->
            d_field_CommandMessage_redelivery_count(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    TrUserData);
        34 ->
            d_pfield_CommandMessage_ack_set(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            TrUserData);
        32 ->
            d_field_CommandMessage_ack_set(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandMessage(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               TrUserData);
                1 ->
                    skip_64_CommandMessage(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
                2 ->
                    skip_length_delimited_CommandMessage(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         TrUserData);
                3 ->
                    skip_group_CommandMessage(Rest,
                                              Key bsr 3,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData);
                5 ->
                    skip_32_CommandMessage(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData)
            end
    end;
dg_read_field_def_CommandMessage(<<>>, 0, 0, F@_1, F@_2,
                                 F@_3, R1, TrUserData) ->
    S1 = #{consumer_id => F@_1,
           ack_set => lists_reverse(R1, TrUserData)},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{message_id => F@_2}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{redelivery_count => F@_3}
    end.

d_field_CommandMessage_consumer_id(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandMessage_consumer_id(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       TrUserData);
d_field_CommandMessage_consumer_id(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandMessage(RestF,
                                      0,
                                      0,
                                      NewFValue,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData).

d_field_CommandMessage_message_id(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandMessage_message_id(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData);
d_field_CommandMessage_message_id(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandMessage(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      if Prev == '$undef' -> NewFValue;
                                         true ->
                                             merge_msg_MessageIdData(Prev,
                                                                     NewFValue,
                                                                     TrUserData)
                                      end,
                                      F@_3,
                                      F@_4,
                                      TrUserData).

d_field_CommandMessage_redelivery_count(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4,
                                        TrUserData)
    when N < 57 ->
    d_field_CommandMessage_redelivery_count(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            TrUserData);
d_field_CommandMessage_redelivery_count(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, _, F@_4,
                                        TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandMessage(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      NewFValue,
                                      F@_4,
                                      TrUserData).

d_field_CommandMessage_ack_set(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandMessage_ack_set(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
d_field_CommandMessage_ack_set(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:64/signed-native>> = <<(X bsl N +
                                                                Acc):64/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandMessage(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      cons(NewFValue, Prev, TrUserData),
                                      TrUserData).

d_pfield_CommandMessage_ack_set(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_pfield_CommandMessage_ack_set(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    TrUserData);
d_pfield_CommandMessage_ack_set(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, E, TrUserData) ->
    Len = X bsl N + Acc,
    <<PackedBytes:Len/binary, Rest2/binary>> = Rest,
    NewSeq =
        d_packed_field_CommandMessage_ack_set(PackedBytes,
                                              0,
                                              0,
                                              E,
                                              TrUserData),
    dfp_read_field_def_CommandMessage(Rest2,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      NewSeq,
                                      TrUserData).

d_packed_field_CommandMessage_ack_set(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, AccSeq, TrUserData)
    when N < 57 ->
    d_packed_field_CommandMessage_ack_set(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          AccSeq,
                                          TrUserData);
d_packed_field_CommandMessage_ack_set(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, AccSeq, TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:64/signed-native>> = <<(X bsl N +
                                                                Acc):64/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    d_packed_field_CommandMessage_ack_set(RestF,
                                          0,
                                          0,
                                          [NewFValue | AccSeq],
                                          TrUserData);
d_packed_field_CommandMessage_ack_set(<<>>, 0, 0,
                                      AccSeq, _) ->
    AccSeq.

skip_varint_CommandMessage(<<1:1, _:7, Rest/binary>>,
                           Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    skip_varint_CommandMessage(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               F@_3,
                               F@_4,
                               TrUserData);
skip_varint_CommandMessage(<<0:1, _:7, Rest/binary>>,
                           Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandMessage(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData).

skip_length_delimited_CommandMessage(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandMessage(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         TrUserData);
skip_length_delimited_CommandMessage(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4,
                                     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandMessage(Rest2,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData).

skip_group_CommandMessage(Bin, FNum, Z2, F@_1, F@_2,
                          F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandMessage(Rest,
                                      0,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData).

skip_32_CommandMessage(<<_:32, Rest/binary>>, Z1, Z2,
                       F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandMessage(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData).

skip_64_CommandMessage(<<_:64, Rest/binary>>, Z1, Z2,
                       F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandMessage(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData).

decode_msg_CommandAck(Bin, TrUserData) ->
    dfp_read_field_def_CommandAck(Bin,
                                  0,
                                  0,
                                  id('$undef', TrUserData),
                                  id('$undef', TrUserData),
                                  id([], TrUserData),
                                  id('$undef', TrUserData),
                                  id([], TrUserData),
                                  id('$undef', TrUserData),
                                  id('$undef', TrUserData),
                                  id('$undef', TrUserData),
                                  TrUserData).

dfp_read_field_def_CommandAck(<<8, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    d_field_CommandAck_consumer_id(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   TrUserData);
dfp_read_field_def_CommandAck(<<16, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    d_field_CommandAck_ack_type(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                TrUserData);
dfp_read_field_def_CommandAck(<<26, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    d_field_CommandAck_message_id(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData);
dfp_read_field_def_CommandAck(<<32, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    d_field_CommandAck_validation_error(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        TrUserData);
dfp_read_field_def_CommandAck(<<42, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    d_field_CommandAck_properties(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData);
dfp_read_field_def_CommandAck(<<48, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    d_field_CommandAck_txnid_least_bits(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        TrUserData);
dfp_read_field_def_CommandAck(<<56, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    d_field_CommandAck_txnid_most_bits(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       TrUserData);
dfp_read_field_def_CommandAck(<<64, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    d_field_CommandAck_request_id(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData);
dfp_read_field_def_CommandAck(<<>>, 0, 0, F@_1, F@_2,
                              R1, F@_4, R2, F@_6, F@_7, F@_8, TrUserData) ->
    S1 = #{consumer_id => F@_1, ack_type => F@_2},
    S2 = if R1 == '$undef' -> S1;
            true -> S1#{message_id => lists_reverse(R1, TrUserData)}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{validation_error => F@_4}
         end,
    S4 = if R2 == '$undef' -> S3;
            true -> S3#{properties => lists_reverse(R2, TrUserData)}
         end,
    S5 = if F@_6 == '$undef' -> S4;
            true -> S4#{txnid_least_bits => F@_6}
         end,
    S6 = if F@_7 == '$undef' -> S5;
            true -> S5#{txnid_most_bits => F@_7}
         end,
    if F@_8 == '$undef' -> S6;
       true -> S6#{request_id => F@_8}
    end;
dfp_read_field_def_CommandAck(Other, Z1, Z2, F@_1, F@_2,
                              F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    dg_read_field_def_CommandAck(Other,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 F@_8,
                                 TrUserData).

dg_read_field_def_CommandAck(<<1:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                             F@_8, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandAck(Rest,
                                 N + 7,
                                 X bsl N + Acc,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 F@_8,
                                 TrUserData);
dg_read_field_def_CommandAck(<<0:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                             F@_8, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandAck_consumer_id(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           TrUserData);
        16 ->
            d_field_CommandAck_ack_type(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        TrUserData);
        26 ->
            d_field_CommandAck_message_id(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          TrUserData);
        32 ->
            d_field_CommandAck_validation_error(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                TrUserData);
        42 ->
            d_field_CommandAck_properties(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          TrUserData);
        48 ->
            d_field_CommandAck_txnid_least_bits(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                F@_7,
                                                F@_8,
                                                TrUserData);
        56 ->
            d_field_CommandAck_txnid_most_bits(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               TrUserData);
        64 ->
            d_field_CommandAck_request_id(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandAck(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           TrUserData);
                1 ->
                    skip_64_CommandAck(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       TrUserData);
                2 ->
                    skip_length_delimited_CommandAck(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     TrUserData);
                3 ->
                    skip_group_CommandAck(Rest,
                                          Key bsr 3,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          TrUserData);
                5 ->
                    skip_32_CommandAck(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       TrUserData)
            end
    end;
dg_read_field_def_CommandAck(<<>>, 0, 0, F@_1, F@_2, R1,
                             F@_4, R2, F@_6, F@_7, F@_8, TrUserData) ->
    S1 = #{consumer_id => F@_1, ack_type => F@_2},
    S2 = if R1 == '$undef' -> S1;
            true -> S1#{message_id => lists_reverse(R1, TrUserData)}
         end,
    S3 = if F@_4 == '$undef' -> S2;
            true -> S2#{validation_error => F@_4}
         end,
    S4 = if R2 == '$undef' -> S3;
            true -> S3#{properties => lists_reverse(R2, TrUserData)}
         end,
    S5 = if F@_6 == '$undef' -> S4;
            true -> S4#{txnid_least_bits => F@_6}
         end,
    S6 = if F@_7 == '$undef' -> S5;
            true -> S5#{txnid_most_bits => F@_7}
         end,
    if F@_8 == '$undef' -> S6;
       true -> S6#{request_id => F@_8}
    end.

d_field_CommandAck_consumer_id(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandAck_consumer_id(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   TrUserData);
d_field_CommandAck_consumer_id(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAck(RestF,
                                  0,
                                  0,
                                  NewFValue,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

d_field_CommandAck_ack_type(<<1:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandAck_ack_type(Rest,
                                N + 7,
                                X bsl N + Acc,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                TrUserData);
d_field_CommandAck_ack_type(<<0:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, _, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                            TrUserData) ->
    {NewFValue, RestF} =
        {id('d_enum_CommandAck.AckType'(begin
                                            <<Res:32/signed-native>> = <<(X bsl
                                                                              N
                                                                              +
                                                                              Acc):32/unsigned-native>>,
                                            id(Res, TrUserData)
                                        end),
            TrUserData),
         Rest},
    dfp_read_field_def_CommandAck(RestF,
                                  0,
                                  0,
                                  F@_1,
                                  NewFValue,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

d_field_CommandAck_message_id(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandAck_message_id(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData);
d_field_CommandAck_message_id(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, Prev, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAck(RestF,
                                  0,
                                  0,
                                  F@_1,
                                  F@_2,
                                  cons(NewFValue, Prev, TrUserData),
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

d_field_CommandAck_validation_error(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandAck_validation_error(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        TrUserData);
d_field_CommandAck_validation_error(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, _, F@_5, F@_6,
                                    F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} =
        {id('d_enum_CommandAck.ValidationError'(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
            TrUserData),
         Rest},
    dfp_read_field_def_CommandAck(RestF,
                                  0,
                                  0,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  NewFValue,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

d_field_CommandAck_properties(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandAck_properties(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData);
d_field_CommandAck_properties(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, Prev, F@_6, F@_7,
                              F@_8, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_KeyLongValue(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAck(RestF,
                                  0,
                                  0,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  cons(NewFValue, Prev, TrUserData),
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

d_field_CommandAck_txnid_least_bits(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                    F@_7, F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandAck_txnid_least_bits(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        TrUserData);
d_field_CommandAck_txnid_least_bits(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, _,
                                    F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAck(RestF,
                                  0,
                                  0,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  NewFValue,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

d_field_CommandAck_txnid_most_bits(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandAck_txnid_most_bits(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       TrUserData);
d_field_CommandAck_txnid_most_bits(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   _, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAck(RestF,
                                  0,
                                  0,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  NewFValue,
                                  F@_8,
                                  TrUserData).

d_field_CommandAck_request_id(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, TrUserData)
    when N < 57 ->
    d_field_CommandAck_request_id(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData);
d_field_CommandAck_request_id(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAck(RestF,
                                  0,
                                  0,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  NewFValue,
                                  TrUserData).

skip_varint_CommandAck(<<1:1, _:7, Rest/binary>>, Z1,
                       Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                       TrUserData) ->
    skip_varint_CommandAck(Rest,
                           Z1,
                           Z2,
                           F@_1,
                           F@_2,
                           F@_3,
                           F@_4,
                           F@_5,
                           F@_6,
                           F@_7,
                           F@_8,
                           TrUserData);
skip_varint_CommandAck(<<0:1, _:7, Rest/binary>>, Z1,
                       Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                       TrUserData) ->
    dfp_read_field_def_CommandAck(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

skip_length_delimited_CommandAck(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandAck(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     TrUserData);
skip_length_delimited_CommandAck(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandAck(Rest2,
                                  0,
                                  0,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

skip_group_CommandAck(Bin, FNum, Z2, F@_1, F@_2, F@_3,
                      F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandAck(Rest,
                                  0,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

skip_32_CommandAck(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
                   F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    dfp_read_field_def_CommandAck(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

skip_64_CommandAck(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
                   F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    dfp_read_field_def_CommandAck(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  TrUserData).

decode_msg_CommandAckResponse(Bin, TrUserData) ->
    dfp_read_field_def_CommandAckResponse(Bin,
                                          0,
                                          0,
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          TrUserData).

dfp_read_field_def_CommandAckResponse(<<8,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, TrUserData) ->
    d_field_CommandAckResponse_consumer_id(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           TrUserData);
dfp_read_field_def_CommandAckResponse(<<16,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, TrUserData) ->
    d_field_CommandAckResponse_txnid_least_bits(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData);
dfp_read_field_def_CommandAckResponse(<<24,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, TrUserData) ->
    d_field_CommandAckResponse_txnid_most_bits(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               TrUserData);
dfp_read_field_def_CommandAckResponse(<<32,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, TrUserData) ->
    d_field_CommandAckResponse_error(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData);
dfp_read_field_def_CommandAckResponse(<<42,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, TrUserData) ->
    d_field_CommandAckResponse_message(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       TrUserData);
dfp_read_field_def_CommandAckResponse(<<48,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, TrUserData) ->
    d_field_CommandAckResponse_request_id(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData);
dfp_read_field_def_CommandAckResponse(<<>>, 0, 0, F@_1,
                                      F@_2, F@_3, F@_4, F@_5, F@_6, _) ->
    S1 = #{consumer_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{message => F@_5}
         end,
    if F@_6 == '$undef' -> S5;
       true -> S5#{request_id => F@_6}
    end;
dfp_read_field_def_CommandAckResponse(Other, Z1, Z2,
                                      F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                      TrUserData) ->
    dg_read_field_def_CommandAckResponse(Other,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         TrUserData).

dg_read_field_def_CommandAckResponse(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandAckResponse(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         TrUserData);
dg_read_field_def_CommandAckResponse(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandAckResponse_consumer_id(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   TrUserData);
        16 ->
            d_field_CommandAckResponse_txnid_least_bits(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        TrUserData);
        24 ->
            d_field_CommandAckResponse_txnid_most_bits(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       TrUserData);
        32 ->
            d_field_CommandAckResponse_error(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             TrUserData);
        42 ->
            d_field_CommandAckResponse_message(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               TrUserData);
        48 ->
            d_field_CommandAckResponse_request_id(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandAckResponse(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   TrUserData);
                1 ->
                    skip_64_CommandAckResponse(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               TrUserData);
                2 ->
                    skip_length_delimited_CommandAckResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             TrUserData);
                3 ->
                    skip_group_CommandAckResponse(Rest,
                                                  Key bsr 3,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  TrUserData);
                5 ->
                    skip_32_CommandAckResponse(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               TrUserData)
            end
    end;
dg_read_field_def_CommandAckResponse(<<>>, 0, 0, F@_1,
                                     F@_2, F@_3, F@_4, F@_5, F@_6, _) ->
    S1 = #{consumer_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{message => F@_5}
         end,
    if F@_6 == '$undef' -> S5;
       true -> S5#{request_id => F@_6}
    end.

d_field_CommandAckResponse_consumer_id(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandAckResponse_consumer_id(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           TrUserData);
d_field_CommandAckResponse_consumer_id(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6,
                                       TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAckResponse(RestF,
                                          0,
                                          0,
                                          NewFValue,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

d_field_CommandAckResponse_txnid_least_bits(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandAckResponse_txnid_least_bits(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData);
d_field_CommandAckResponse_txnid_least_bits(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, _, F@_3, F@_4, F@_5,
                                            F@_6, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAckResponse(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          NewFValue,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

d_field_CommandAckResponse_txnid_most_bits(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandAckResponse_txnid_most_bits(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               TrUserData);
d_field_CommandAckResponse_txnid_most_bits(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, _, F@_4, F@_5,
                                           F@_6, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAckResponse(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          NewFValue,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

d_field_CommandAckResponse_error(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData)
    when N < 57 ->
    d_field_CommandAckResponse_error(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     TrUserData);
d_field_CommandAckResponse_error(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, _, F@_5, F@_6,
                                 TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandAckResponse(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          NewFValue,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

d_field_CommandAckResponse_message(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   TrUserData)
    when N < 57 ->
    d_field_CommandAckResponse_message(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       TrUserData);
d_field_CommandAckResponse_message(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, _, F@_6,
                                   TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAckResponse(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          NewFValue,
                                          F@_6,
                                          TrUserData).

d_field_CommandAckResponse_request_id(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandAckResponse_request_id(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData);
d_field_CommandAckResponse_request_id(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, _,
                                      TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAckResponse(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          NewFValue,
                                          TrUserData).

skip_varint_CommandAckResponse(<<1:1, _:7,
                                 Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                               TrUserData) ->
    skip_varint_CommandAckResponse(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   TrUserData);
skip_varint_CommandAckResponse(<<0:1, _:7,
                                 Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                               TrUserData) ->
    dfp_read_field_def_CommandAckResponse(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

skip_length_delimited_CommandAckResponse(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandAckResponse(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             TrUserData);
skip_length_delimited_CommandAckResponse(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandAckResponse(Rest2,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

skip_group_CommandAckResponse(Bin, FNum, Z2, F@_1, F@_2,
                              F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandAckResponse(Rest,
                                          0,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

skip_32_CommandAckResponse(<<_:32, Rest/binary>>, Z1,
                           Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                           TrUserData) ->
    dfp_read_field_def_CommandAckResponse(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

skip_64_CommandAckResponse(<<_:64, Rest/binary>>, Z1,
                           Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                           TrUserData) ->
    dfp_read_field_def_CommandAckResponse(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          TrUserData).

decode_msg_CommandActiveConsumerChange(Bin,
                                       TrUserData) ->
    dfp_read_field_def_CommandActiveConsumerChange(Bin,
                                                   0,
                                                   0,
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   TrUserData).

dfp_read_field_def_CommandActiveConsumerChange(<<8,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2,
                                               TrUserData) ->
    d_field_CommandActiveConsumerChange_consumer_id(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
dfp_read_field_def_CommandActiveConsumerChange(<<16,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2,
                                               TrUserData) ->
    d_field_CommandActiveConsumerChange_is_active(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  TrUserData);
dfp_read_field_def_CommandActiveConsumerChange(<<>>, 0,
                                               0, F@_1, F@_2, _) ->
    S1 = #{consumer_id => F@_1},
    if F@_2 == '$undef' -> S1;
       true -> S1#{is_active => F@_2}
    end;
dfp_read_field_def_CommandActiveConsumerChange(Other,
                                               Z1, Z2, F@_1, F@_2,
                                               TrUserData) ->
    dg_read_field_def_CommandActiveConsumerChange(Other,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  TrUserData).

dg_read_field_def_CommandActiveConsumerChange(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandActiveConsumerChange(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  TrUserData);
dg_read_field_def_CommandActiveConsumerChange(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandActiveConsumerChange_consumer_id(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            TrUserData);
        16 ->
            d_field_CommandActiveConsumerChange_is_active(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandActiveConsumerChange(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            TrUserData);
                1 ->
                    skip_64_CommandActiveConsumerChange(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        TrUserData);
                2 ->
                    skip_length_delimited_CommandActiveConsumerChange(Rest,
                                                                      0,
                                                                      0,
                                                                      F@_1,
                                                                      F@_2,
                                                                      TrUserData);
                3 ->
                    skip_group_CommandActiveConsumerChange(Rest,
                                                           Key bsr 3,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           TrUserData);
                5 ->
                    skip_32_CommandActiveConsumerChange(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        TrUserData)
            end
    end;
dg_read_field_def_CommandActiveConsumerChange(<<>>, 0,
                                              0, F@_1, F@_2, _) ->
    S1 = #{consumer_id => F@_1},
    if F@_2 == '$undef' -> S1;
       true -> S1#{is_active => F@_2}
    end.

d_field_CommandActiveConsumerChange_consumer_id(<<1:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandActiveConsumerChange_consumer_id(Rest,
                                                    N + 7,
                                                    X bsl N + Acc,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
d_field_CommandActiveConsumerChange_consumer_id(<<0:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandActiveConsumerChange(RestF,
                                                   0,
                                                   0,
                                                   NewFValue,
                                                   F@_2,
                                                   TrUserData).

d_field_CommandActiveConsumerChange_is_active(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandActiveConsumerChange_is_active(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  TrUserData);
d_field_CommandActiveConsumerChange_is_active(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandActiveConsumerChange(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   NewFValue,
                                                   TrUserData).

skip_varint_CommandActiveConsumerChange(<<1:1, _:7,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_CommandActiveConsumerChange(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
skip_varint_CommandActiveConsumerChange(<<0:1, _:7,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandActiveConsumerChange(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData).

skip_length_delimited_CommandActiveConsumerChange(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2,
                                                  TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandActiveConsumerChange(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      TrUserData);
skip_length_delimited_CommandActiveConsumerChange(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2,
                                                  TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandActiveConsumerChange(Rest2,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData).

skip_group_CommandActiveConsumerChange(Bin, FNum, Z2,
                                       F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandActiveConsumerChange(Rest,
                                                   0,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData).

skip_32_CommandActiveConsumerChange(<<_:32,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandActiveConsumerChange(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData).

skip_64_CommandActiveConsumerChange(<<_:64,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandActiveConsumerChange(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData).

decode_msg_CommandFlow(Bin, TrUserData) ->
    dfp_read_field_def_CommandFlow(Bin,
                                   0,
                                   0,
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   TrUserData).

dfp_read_field_def_CommandFlow(<<8, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandFlow_consumer_id(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData);
dfp_read_field_def_CommandFlow(<<16, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandFlow_messagePermits(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       TrUserData);
dfp_read_field_def_CommandFlow(<<>>, 0, 0, F@_1, F@_2,
                               _) ->
    #{consumer_id => F@_1, messagePermits => F@_2};
dfp_read_field_def_CommandFlow(Other, Z1, Z2, F@_1,
                               F@_2, TrUserData) ->
    dg_read_field_def_CommandFlow(Other,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  TrUserData).

dg_read_field_def_CommandFlow(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandFlow(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  TrUserData);
dg_read_field_def_CommandFlow(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandFlow_consumer_id(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
        16 ->
            d_field_CommandFlow_messagePermits(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandFlow(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
                1 ->
                    skip_64_CommandFlow(Rest, 0, 0, F@_1, F@_2, TrUserData);
                2 ->
                    skip_length_delimited_CommandFlow(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      TrUserData);
                3 ->
                    skip_group_CommandFlow(Rest,
                                           Key bsr 3,
                                           0,
                                           F@_1,
                                           F@_2,
                                           TrUserData);
                5 ->
                    skip_32_CommandFlow(Rest, 0, 0, F@_1, F@_2, TrUserData)
            end
    end;
dg_read_field_def_CommandFlow(<<>>, 0, 0, F@_1, F@_2,
                              _) ->
    #{consumer_id => F@_1, messagePermits => F@_2}.

d_field_CommandFlow_consumer_id(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandFlow_consumer_id(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    TrUserData);
d_field_CommandFlow_consumer_id(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandFlow(RestF,
                                   0,
                                   0,
                                   NewFValue,
                                   F@_2,
                                   TrUserData).

d_field_CommandFlow_messagePermits(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandFlow_messagePermits(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       TrUserData);
d_field_CommandFlow_messagePermits(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandFlow(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   NewFValue,
                                   TrUserData).

skip_varint_CommandFlow(<<1:1, _:7, Rest/binary>>, Z1,
                        Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_CommandFlow(Rest,
                            Z1,
                            Z2,
                            F@_1,
                            F@_2,
                            TrUserData);
skip_varint_CommandFlow(<<0:1, _:7, Rest/binary>>, Z1,
                        Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandFlow(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   TrUserData).

skip_length_delimited_CommandFlow(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandFlow(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      TrUserData);
skip_length_delimited_CommandFlow(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandFlow(Rest2,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   TrUserData).

skip_group_CommandFlow(Bin, FNum, Z2, F@_1, F@_2,
                       TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandFlow(Rest,
                                   0,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   TrUserData).

skip_32_CommandFlow(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
                    F@_2, TrUserData) ->
    dfp_read_field_def_CommandFlow(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   TrUserData).

skip_64_CommandFlow(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
                    F@_2, TrUserData) ->
    dfp_read_field_def_CommandFlow(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   TrUserData).

decode_msg_CommandUnsubscribe(Bin, TrUserData) ->
    dfp_read_field_def_CommandUnsubscribe(Bin,
                                          0,
                                          0,
                                          id('$undef', TrUserData),
                                          id('$undef', TrUserData),
                                          TrUserData).

dfp_read_field_def_CommandUnsubscribe(<<8,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandUnsubscribe_consumer_id(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           TrUserData);
dfp_read_field_def_CommandUnsubscribe(<<16,
                                        Rest/binary>>,
                                      Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandUnsubscribe_request_id(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          TrUserData);
dfp_read_field_def_CommandUnsubscribe(<<>>, 0, 0, F@_1,
                                      F@_2, _) ->
    #{consumer_id => F@_1, request_id => F@_2};
dfp_read_field_def_CommandUnsubscribe(Other, Z1, Z2,
                                      F@_1, F@_2, TrUserData) ->
    dg_read_field_def_CommandUnsubscribe(Other,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         TrUserData).

dg_read_field_def_CommandUnsubscribe(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandUnsubscribe(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         TrUserData);
dg_read_field_def_CommandUnsubscribe(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandUnsubscribe_consumer_id(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData);
        16 ->
            d_field_CommandUnsubscribe_request_id(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandUnsubscribe(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   TrUserData);
                1 ->
                    skip_64_CommandUnsubscribe(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               TrUserData);
                2 ->
                    skip_length_delimited_CommandUnsubscribe(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             TrUserData);
                3 ->
                    skip_group_CommandUnsubscribe(Rest,
                                                  Key bsr 3,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  TrUserData);
                5 ->
                    skip_32_CommandUnsubscribe(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               TrUserData)
            end
    end;
dg_read_field_def_CommandUnsubscribe(<<>>, 0, 0, F@_1,
                                     F@_2, _) ->
    #{consumer_id => F@_1, request_id => F@_2}.

d_field_CommandUnsubscribe_consumer_id(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandUnsubscribe_consumer_id(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           TrUserData);
d_field_CommandUnsubscribe_consumer_id(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandUnsubscribe(RestF,
                                          0,
                                          0,
                                          NewFValue,
                                          F@_2,
                                          TrUserData).

d_field_CommandUnsubscribe_request_id(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandUnsubscribe_request_id(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          TrUserData);
d_field_CommandUnsubscribe_request_id(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandUnsubscribe(RestF,
                                          0,
                                          0,
                                          F@_1,
                                          NewFValue,
                                          TrUserData).

skip_varint_CommandUnsubscribe(<<1:1, _:7,
                                 Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_CommandUnsubscribe(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   TrUserData);
skip_varint_CommandUnsubscribe(<<0:1, _:7,
                                 Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandUnsubscribe(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          TrUserData).

skip_length_delimited_CommandUnsubscribe(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandUnsubscribe(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
skip_length_delimited_CommandUnsubscribe(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandUnsubscribe(Rest2,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          TrUserData).

skip_group_CommandUnsubscribe(Bin, FNum, Z2, F@_1, F@_2,
                              TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandUnsubscribe(Rest,
                                          0,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          TrUserData).

skip_32_CommandUnsubscribe(<<_:32, Rest/binary>>, Z1,
                           Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandUnsubscribe(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          TrUserData).

skip_64_CommandUnsubscribe(<<_:64, Rest/binary>>, Z1,
                           Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandUnsubscribe(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          TrUserData).

decode_msg_CommandSeek(Bin, TrUserData) ->
    dfp_read_field_def_CommandSeek(Bin,
                                   0,
                                   0,
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   TrUserData).

dfp_read_field_def_CommandSeek(<<8, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_CommandSeek_consumer_id(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    TrUserData);
dfp_read_field_def_CommandSeek(<<16, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_CommandSeek_request_id(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
dfp_read_field_def_CommandSeek(<<26, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_CommandSeek_message_id(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
dfp_read_field_def_CommandSeek(<<32, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    d_field_CommandSeek_message_publish_time(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             TrUserData);
dfp_read_field_def_CommandSeek(<<>>, 0, 0, F@_1, F@_2,
                               F@_3, F@_4, _) ->
    S1 = #{consumer_id => F@_1, request_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{message_id => F@_3}
         end,
    if F@_4 == '$undef' -> S2;
       true -> S2#{message_publish_time => F@_4}
    end;
dfp_read_field_def_CommandSeek(Other, Z1, Z2, F@_1,
                               F@_2, F@_3, F@_4, TrUserData) ->
    dg_read_field_def_CommandSeek(Other,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  TrUserData).

dg_read_field_def_CommandSeek(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandSeek(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  TrUserData);
dg_read_field_def_CommandSeek(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandSeek_consumer_id(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            TrUserData);
        16 ->
            d_field_CommandSeek_request_id(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
        26 ->
            d_field_CommandSeek_message_id(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
        32 ->
            d_field_CommandSeek_message_publish_time(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandSeek(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            TrUserData);
                1 ->
                    skip_64_CommandSeek(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        TrUserData);
                2 ->
                    skip_length_delimited_CommandSeek(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      TrUserData);
                3 ->
                    skip_group_CommandSeek(Rest,
                                           Key bsr 3,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           TrUserData);
                5 ->
                    skip_32_CommandSeek(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        TrUserData)
            end
    end;
dg_read_field_def_CommandSeek(<<>>, 0, 0, F@_1, F@_2,
                              F@_3, F@_4, _) ->
    S1 = #{consumer_id => F@_1, request_id => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{message_id => F@_3}
         end,
    if F@_4 == '$undef' -> S2;
       true -> S2#{message_publish_time => F@_4}
    end.

d_field_CommandSeek_consumer_id(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandSeek_consumer_id(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    TrUserData);
d_field_CommandSeek_consumer_id(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSeek(RestF,
                                   0,
                                   0,
                                   NewFValue,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData).

d_field_CommandSeek_request_id(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandSeek_request_id(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
d_field_CommandSeek_request_id(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, _, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSeek(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   NewFValue,
                                   F@_3,
                                   F@_4,
                                   TrUserData).

d_field_CommandSeek_message_id(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandSeek_message_id(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData);
d_field_CommandSeek_message_id(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, Prev, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSeek(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_MessageIdData(Prev,
                                                                  NewFValue,
                                                                  TrUserData)
                                   end,
                                   F@_4,
                                   TrUserData).

d_field_CommandSeek_message_publish_time(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4,
                                         TrUserData)
    when N < 57 ->
    d_field_CommandSeek_message_publish_time(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             TrUserData);
d_field_CommandSeek_message_publish_time(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, _,
                                         TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSeek(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   NewFValue,
                                   TrUserData).

skip_varint_CommandSeek(<<1:1, _:7, Rest/binary>>, Z1,
                        Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    skip_varint_CommandSeek(Rest,
                            Z1,
                            Z2,
                            F@_1,
                            F@_2,
                            F@_3,
                            F@_4,
                            TrUserData);
skip_varint_CommandSeek(<<0:1, _:7, Rest/binary>>, Z1,
                        Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSeek(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData).

skip_length_delimited_CommandSeek(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandSeek(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      TrUserData);
skip_length_delimited_CommandSeek(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandSeek(Rest2,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData).

skip_group_CommandSeek(Bin, FNum, Z2, F@_1, F@_2, F@_3,
                       F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandSeek(Rest,
                                   0,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData).

skip_32_CommandSeek(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
                    F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSeek(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData).

skip_64_CommandSeek(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
                    F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandSeek(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   TrUserData).

decode_msg_CommandReachedEndOfTopic(Bin, TrUserData) ->
    dfp_read_field_def_CommandReachedEndOfTopic(Bin,
                                                0,
                                                0,
                                                id('$undef', TrUserData),
                                                TrUserData).

dfp_read_field_def_CommandReachedEndOfTopic(<<8,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, TrUserData) ->
    d_field_CommandReachedEndOfTopic_consumer_id(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 TrUserData);
dfp_read_field_def_CommandReachedEndOfTopic(<<>>, 0, 0,
                                            F@_1, _) ->
    #{consumer_id => F@_1};
dfp_read_field_def_CommandReachedEndOfTopic(Other, Z1,
                                            Z2, F@_1, TrUserData) ->
    dg_read_field_def_CommandReachedEndOfTopic(Other,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               TrUserData).

dg_read_field_def_CommandReachedEndOfTopic(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandReachedEndOfTopic(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               TrUserData);
dg_read_field_def_CommandReachedEndOfTopic(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandReachedEndOfTopic_consumer_id(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandReachedEndOfTopic(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         TrUserData);
                1 ->
                    skip_64_CommandReachedEndOfTopic(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     TrUserData);
                2 ->
                    skip_length_delimited_CommandReachedEndOfTopic(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   TrUserData);
                3 ->
                    skip_group_CommandReachedEndOfTopic(Rest,
                                                        Key bsr 3,
                                                        0,
                                                        F@_1,
                                                        TrUserData);
                5 ->
                    skip_32_CommandReachedEndOfTopic(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     TrUserData)
            end
    end;
dg_read_field_def_CommandReachedEndOfTopic(<<>>, 0, 0,
                                           F@_1, _) ->
    #{consumer_id => F@_1}.

d_field_CommandReachedEndOfTopic_consumer_id(<<1:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, TrUserData)
    when N < 57 ->
    d_field_CommandReachedEndOfTopic_consumer_id(Rest,
                                                 N + 7,
                                                 X bsl N + Acc,
                                                 F@_1,
                                                 TrUserData);
d_field_CommandReachedEndOfTopic_consumer_id(<<0:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandReachedEndOfTopic(RestF,
                                                0,
                                                0,
                                                NewFValue,
                                                TrUserData).

skip_varint_CommandReachedEndOfTopic(<<1:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, TrUserData) ->
    skip_varint_CommandReachedEndOfTopic(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         TrUserData);
skip_varint_CommandReachedEndOfTopic(<<0:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, TrUserData) ->
    dfp_read_field_def_CommandReachedEndOfTopic(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                TrUserData).

skip_length_delimited_CommandReachedEndOfTopic(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandReachedEndOfTopic(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   TrUserData);
skip_length_delimited_CommandReachedEndOfTopic(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandReachedEndOfTopic(Rest2,
                                                0,
                                                0,
                                                F@_1,
                                                TrUserData).

skip_group_CommandReachedEndOfTopic(Bin, FNum, Z2, F@_1,
                                    TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandReachedEndOfTopic(Rest,
                                                0,
                                                Z2,
                                                F@_1,
                                                TrUserData).

skip_32_CommandReachedEndOfTopic(<<_:32, Rest/binary>>,
                                 Z1, Z2, F@_1, TrUserData) ->
    dfp_read_field_def_CommandReachedEndOfTopic(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                TrUserData).

skip_64_CommandReachedEndOfTopic(<<_:64, Rest/binary>>,
                                 Z1, Z2, F@_1, TrUserData) ->
    dfp_read_field_def_CommandReachedEndOfTopic(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                TrUserData).

decode_msg_CommandCloseProducer(Bin, TrUserData) ->
    dfp_read_field_def_CommandCloseProducer(Bin,
                                            0,
                                            0,
                                            id('$undef', TrUserData),
                                            id('$undef', TrUserData),
                                            TrUserData).

dfp_read_field_def_CommandCloseProducer(<<8,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandCloseProducer_producer_id(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
dfp_read_field_def_CommandCloseProducer(<<16,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandCloseProducer_request_id(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
dfp_read_field_def_CommandCloseProducer(<<>>, 0, 0,
                                        F@_1, F@_2, _) ->
    #{producer_id => F@_1, request_id => F@_2};
dfp_read_field_def_CommandCloseProducer(Other, Z1, Z2,
                                        F@_1, F@_2, TrUserData) ->
    dg_read_field_def_CommandCloseProducer(Other,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           TrUserData).

dg_read_field_def_CommandCloseProducer(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandCloseProducer(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           TrUserData);
dg_read_field_def_CommandCloseProducer(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandCloseProducer_producer_id(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     TrUserData);
        16 ->
            d_field_CommandCloseProducer_request_id(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandCloseProducer(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     TrUserData);
                1 ->
                    skip_64_CommandCloseProducer(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 TrUserData);
                2 ->
                    skip_length_delimited_CommandCloseProducer(Rest,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               TrUserData);
                3 ->
                    skip_group_CommandCloseProducer(Rest,
                                                    Key bsr 3,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
                5 ->
                    skip_32_CommandCloseProducer(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 TrUserData)
            end
    end;
dg_read_field_def_CommandCloseProducer(<<>>, 0, 0, F@_1,
                                       F@_2, _) ->
    #{producer_id => F@_1, request_id => F@_2}.

d_field_CommandCloseProducer_producer_id(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandCloseProducer_producer_id(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
d_field_CommandCloseProducer_producer_id(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandCloseProducer(RestF,
                                            0,
                                            0,
                                            NewFValue,
                                            F@_2,
                                            TrUserData).

d_field_CommandCloseProducer_request_id(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandCloseProducer_request_id(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
d_field_CommandCloseProducer_request_id(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandCloseProducer(RestF,
                                            0,
                                            0,
                                            F@_1,
                                            NewFValue,
                                            TrUserData).

skip_varint_CommandCloseProducer(<<1:1, _:7,
                                   Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_CommandCloseProducer(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     TrUserData);
skip_varint_CommandCloseProducer(<<0:1, _:7,
                                   Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandCloseProducer(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_length_delimited_CommandCloseProducer(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandCloseProducer(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               TrUserData);
skip_length_delimited_CommandCloseProducer(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandCloseProducer(Rest2,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_group_CommandCloseProducer(Bin, FNum, Z2, F@_1,
                                F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandCloseProducer(Rest,
                                            0,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_32_CommandCloseProducer(<<_:32, Rest/binary>>, Z1,
                             Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandCloseProducer(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_64_CommandCloseProducer(<<_:64, Rest/binary>>, Z1,
                             Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandCloseProducer(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

decode_msg_CommandCloseConsumer(Bin, TrUserData) ->
    dfp_read_field_def_CommandCloseConsumer(Bin,
                                            0,
                                            0,
                                            id('$undef', TrUserData),
                                            id('$undef', TrUserData),
                                            TrUserData).

dfp_read_field_def_CommandCloseConsumer(<<8,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandCloseConsumer_consumer_id(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
dfp_read_field_def_CommandCloseConsumer(<<16,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandCloseConsumer_request_id(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
dfp_read_field_def_CommandCloseConsumer(<<>>, 0, 0,
                                        F@_1, F@_2, _) ->
    #{consumer_id => F@_1, request_id => F@_2};
dfp_read_field_def_CommandCloseConsumer(Other, Z1, Z2,
                                        F@_1, F@_2, TrUserData) ->
    dg_read_field_def_CommandCloseConsumer(Other,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           TrUserData).

dg_read_field_def_CommandCloseConsumer(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandCloseConsumer(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           TrUserData);
dg_read_field_def_CommandCloseConsumer(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandCloseConsumer_consumer_id(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     TrUserData);
        16 ->
            d_field_CommandCloseConsumer_request_id(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandCloseConsumer(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     TrUserData);
                1 ->
                    skip_64_CommandCloseConsumer(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 TrUserData);
                2 ->
                    skip_length_delimited_CommandCloseConsumer(Rest,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               TrUserData);
                3 ->
                    skip_group_CommandCloseConsumer(Rest,
                                                    Key bsr 3,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
                5 ->
                    skip_32_CommandCloseConsumer(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 TrUserData)
            end
    end;
dg_read_field_def_CommandCloseConsumer(<<>>, 0, 0, F@_1,
                                       F@_2, _) ->
    #{consumer_id => F@_1, request_id => F@_2}.

d_field_CommandCloseConsumer_consumer_id(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandCloseConsumer_consumer_id(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
d_field_CommandCloseConsumer_consumer_id(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandCloseConsumer(RestF,
                                            0,
                                            0,
                                            NewFValue,
                                            F@_2,
                                            TrUserData).

d_field_CommandCloseConsumer_request_id(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandCloseConsumer_request_id(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
d_field_CommandCloseConsumer_request_id(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandCloseConsumer(RestF,
                                            0,
                                            0,
                                            F@_1,
                                            NewFValue,
                                            TrUserData).

skip_varint_CommandCloseConsumer(<<1:1, _:7,
                                   Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_CommandCloseConsumer(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     TrUserData);
skip_varint_CommandCloseConsumer(<<0:1, _:7,
                                   Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandCloseConsumer(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_length_delimited_CommandCloseConsumer(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandCloseConsumer(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               TrUserData);
skip_length_delimited_CommandCloseConsumer(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandCloseConsumer(Rest2,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_group_CommandCloseConsumer(Bin, FNum, Z2, F@_1,
                                F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandCloseConsumer(Rest,
                                            0,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_32_CommandCloseConsumer(<<_:32, Rest/binary>>, Z1,
                             Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandCloseConsumer(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_64_CommandCloseConsumer(<<_:64, Rest/binary>>, Z1,
                             Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandCloseConsumer(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

decode_msg_CommandRedeliverUnacknowledgedMessages(Bin,
                                                  TrUserData) ->
    dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(Bin,
                                                              0,
                                                              0,
                                                              id('$undef',
                                                                 TrUserData),
                                                              id([],
                                                                 TrUserData),
                                                              TrUserData).

dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(<<8,
                                                            Rest/binary>>,
                                                          Z1, Z2, F@_1, F@_2,
                                                          TrUserData) ->
    d_field_CommandRedeliverUnacknowledgedMessages_consumer_id(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               TrUserData);
dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(<<18,
                                                            Rest/binary>>,
                                                          Z1, Z2, F@_1, F@_2,
                                                          TrUserData) ->
    d_field_CommandRedeliverUnacknowledgedMessages_message_ids(Rest,
                                                               Z1,
                                                               Z2,
                                                               F@_1,
                                                               F@_2,
                                                               TrUserData);
dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(<<>>,
                                                          0, 0, F@_1, R1,
                                                          TrUserData) ->
    S1 = #{consumer_id => F@_1},
    if R1 == '$undef' -> S1;
       true ->
           S1#{message_ids => lists_reverse(R1, TrUserData)}
    end;
dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(Other,
                                                          Z1, Z2, F@_1, F@_2,
                                                          TrUserData) ->
    dg_read_field_def_CommandRedeliverUnacknowledgedMessages(Other,
                                                             Z1,
                                                             Z2,
                                                             F@_1,
                                                             F@_2,
                                                             TrUserData).

dg_read_field_def_CommandRedeliverUnacknowledgedMessages(<<1:1,
                                                           X:7, Rest/binary>>,
                                                         N, Acc, F@_1, F@_2,
                                                         TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandRedeliverUnacknowledgedMessages(Rest,
                                                             N + 7,
                                                             X bsl N + Acc,
                                                             F@_1,
                                                             F@_2,
                                                             TrUserData);
dg_read_field_def_CommandRedeliverUnacknowledgedMessages(<<0:1,
                                                           X:7, Rest/binary>>,
                                                         N, Acc, F@_1, F@_2,
                                                         TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandRedeliverUnacknowledgedMessages_consumer_id(Rest,
                                                                       0,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       TrUserData);
        18 ->
            d_field_CommandRedeliverUnacknowledgedMessages_message_ids(Rest,
                                                                       0,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandRedeliverUnacknowledgedMessages(Rest,
                                                                       0,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       TrUserData);
                1 ->
                    skip_64_CommandRedeliverUnacknowledgedMessages(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   TrUserData);
                2 ->
                    skip_length_delimited_CommandRedeliverUnacknowledgedMessages(Rest,
                                                                                 0,
                                                                                 0,
                                                                                 F@_1,
                                                                                 F@_2,
                                                                                 TrUserData);
                3 ->
                    skip_group_CommandRedeliverUnacknowledgedMessages(Rest,
                                                                      Key bsr 3,
                                                                      0,
                                                                      F@_1,
                                                                      F@_2,
                                                                      TrUserData);
                5 ->
                    skip_32_CommandRedeliverUnacknowledgedMessages(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   TrUserData)
            end
    end;
dg_read_field_def_CommandRedeliverUnacknowledgedMessages(<<>>,
                                                         0, 0, F@_1, R1,
                                                         TrUserData) ->
    S1 = #{consumer_id => F@_1},
    if R1 == '$undef' -> S1;
       true ->
           S1#{message_ids => lists_reverse(R1, TrUserData)}
    end.

d_field_CommandRedeliverUnacknowledgedMessages_consumer_id(<<1:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, F@_2,
                                                           TrUserData)
    when N < 57 ->
    d_field_CommandRedeliverUnacknowledgedMessages_consumer_id(Rest,
                                                               N + 7,
                                                               X bsl N + Acc,
                                                               F@_1,
                                                               F@_2,
                                                               TrUserData);
d_field_CommandRedeliverUnacknowledgedMessages_consumer_id(<<0:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, _, F@_2,
                                                           TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(RestF,
                                                              0,
                                                              0,
                                                              NewFValue,
                                                              F@_2,
                                                              TrUserData).

d_field_CommandRedeliverUnacknowledgedMessages_message_ids(<<1:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, F@_2,
                                                           TrUserData)
    when N < 57 ->
    d_field_CommandRedeliverUnacknowledgedMessages_message_ids(Rest,
                                                               N + 7,
                                                               X bsl N + Acc,
                                                               F@_1,
                                                               F@_2,
                                                               TrUserData);
d_field_CommandRedeliverUnacknowledgedMessages_message_ids(<<0:1,
                                                             X:7, Rest/binary>>,
                                                           N, Acc, F@_1, Prev,
                                                           TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(RestF,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              cons(NewFValue,
                                                                   Prev,
                                                                   TrUserData),
                                                              TrUserData).

skip_varint_CommandRedeliverUnacknowledgedMessages(<<1:1,
                                                     _:7, Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2,
                                                   TrUserData) ->
    skip_varint_CommandRedeliverUnacknowledgedMessages(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       TrUserData);
skip_varint_CommandRedeliverUnacknowledgedMessages(<<0:1,
                                                     _:7, Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2,
                                                   TrUserData) ->
    dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(Rest,
                                                              Z1,
                                                              Z2,
                                                              F@_1,
                                                              F@_2,
                                                              TrUserData).

skip_length_delimited_CommandRedeliverUnacknowledgedMessages(<<1:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandRedeliverUnacknowledgedMessages(Rest,
                                                                 N + 7,
                                                                 X bsl N + Acc,
                                                                 F@_1,
                                                                 F@_2,
                                                                 TrUserData);
skip_length_delimited_CommandRedeliverUnacknowledgedMessages(<<0:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(Rest2,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              F@_2,
                                                              TrUserData).

skip_group_CommandRedeliverUnacknowledgedMessages(Bin,
                                                  FNum, Z2, F@_1, F@_2,
                                                  TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(Rest,
                                                              0,
                                                              Z2,
                                                              F@_1,
                                                              F@_2,
                                                              TrUserData).

skip_32_CommandRedeliverUnacknowledgedMessages(<<_:32,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2,
                                               TrUserData) ->
    dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(Rest,
                                                              Z1,
                                                              Z2,
                                                              F@_1,
                                                              F@_2,
                                                              TrUserData).

skip_64_CommandRedeliverUnacknowledgedMessages(<<_:64,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2,
                                               TrUserData) ->
    dfp_read_field_def_CommandRedeliverUnacknowledgedMessages(Rest,
                                                              Z1,
                                                              Z2,
                                                              F@_1,
                                                              F@_2,
                                                              TrUserData).

decode_msg_CommandSuccess(Bin, TrUserData) ->
    dfp_read_field_def_CommandSuccess(Bin,
                                      0,
                                      0,
                                      id('$undef', TrUserData),
                                      id('$undef', TrUserData),
                                      TrUserData).

dfp_read_field_def_CommandSuccess(<<8, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandSuccess_request_id(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      TrUserData);
dfp_read_field_def_CommandSuccess(<<18, Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandSuccess_schema(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  TrUserData);
dfp_read_field_def_CommandSuccess(<<>>, 0, 0, F@_1,
                                  F@_2, _) ->
    S1 = #{request_id => F@_1},
    if F@_2 == '$undef' -> S1;
       true -> S1#{schema => F@_2}
    end;
dfp_read_field_def_CommandSuccess(Other, Z1, Z2, F@_1,
                                  F@_2, TrUserData) ->
    dg_read_field_def_CommandSuccess(Other,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     TrUserData).

dg_read_field_def_CommandSuccess(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandSuccess(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     TrUserData);
dg_read_field_def_CommandSuccess(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandSuccess_request_id(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              TrUserData);
        18 ->
            d_field_CommandSuccess_schema(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandSuccess(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               TrUserData);
                1 ->
                    skip_64_CommandSuccess(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           TrUserData);
                2 ->
                    skip_length_delimited_CommandSuccess(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         TrUserData);
                3 ->
                    skip_group_CommandSuccess(Rest,
                                              Key bsr 3,
                                              0,
                                              F@_1,
                                              F@_2,
                                              TrUserData);
                5 ->
                    skip_32_CommandSuccess(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           TrUserData)
            end
    end;
dg_read_field_def_CommandSuccess(<<>>, 0, 0, F@_1, F@_2,
                                 _) ->
    S1 = #{request_id => F@_1},
    if F@_2 == '$undef' -> S1;
       true -> S1#{schema => F@_2}
    end.

d_field_CommandSuccess_request_id(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandSuccess_request_id(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      TrUserData);
d_field_CommandSuccess_request_id(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandSuccess(RestF,
                                      0,
                                      0,
                                      NewFValue,
                                      F@_2,
                                      TrUserData).

d_field_CommandSuccess_schema(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandSuccess_schema(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  TrUserData);
d_field_CommandSuccess_schema(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_Schema(Bs, TrUserData), TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandSuccess(RestF,
                                      0,
                                      0,
                                      F@_1,
                                      if Prev == '$undef' -> NewFValue;
                                         true ->
                                             merge_msg_Schema(Prev,
                                                              NewFValue,
                                                              TrUserData)
                                      end,
                                      TrUserData).

skip_varint_CommandSuccess(<<1:1, _:7, Rest/binary>>,
                           Z1, Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_CommandSuccess(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               TrUserData);
skip_varint_CommandSuccess(<<0:1, _:7, Rest/binary>>,
                           Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandSuccess(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      TrUserData).

skip_length_delimited_CommandSuccess(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandSuccess(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         TrUserData);
skip_length_delimited_CommandSuccess(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandSuccess(Rest2,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      TrUserData).

skip_group_CommandSuccess(Bin, FNum, Z2, F@_1, F@_2,
                          TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandSuccess(Rest,
                                      0,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      TrUserData).

skip_32_CommandSuccess(<<_:32, Rest/binary>>, Z1, Z2,
                       F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandSuccess(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      TrUserData).

skip_64_CommandSuccess(<<_:64, Rest/binary>>, Z1, Z2,
                       F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandSuccess(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      TrUserData).

decode_msg_CommandProducerSuccess(Bin, TrUserData) ->
    dfp_read_field_def_CommandProducerSuccess(Bin,
                                              0,
                                              0,
                                              id('$undef', TrUserData),
                                              id('$undef', TrUserData),
                                              id('$undef', TrUserData),
                                              id('$undef', TrUserData),
                                              TrUserData).

dfp_read_field_def_CommandProducerSuccess(<<8,
                                            Rest/binary>>,
                                          Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                          TrUserData) ->
    d_field_CommandProducerSuccess_request_id(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData);
dfp_read_field_def_CommandProducerSuccess(<<18,
                                            Rest/binary>>,
                                          Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                          TrUserData) ->
    d_field_CommandProducerSuccess_producer_name(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 TrUserData);
dfp_read_field_def_CommandProducerSuccess(<<24,
                                            Rest/binary>>,
                                          Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                          TrUserData) ->
    d_field_CommandProducerSuccess_last_sequence_id(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    TrUserData);
dfp_read_field_def_CommandProducerSuccess(<<34,
                                            Rest/binary>>,
                                          Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                          TrUserData) ->
    d_field_CommandProducerSuccess_schema_version(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  TrUserData);
dfp_read_field_def_CommandProducerSuccess(<<>>, 0, 0,
                                          F@_1, F@_2, F@_3, F@_4, _) ->
    S1 = #{request_id => F@_1, producer_name => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{last_sequence_id => F@_3}
         end,
    if F@_4 == '$undef' -> S2;
       true -> S2#{schema_version => F@_4}
    end;
dfp_read_field_def_CommandProducerSuccess(Other, Z1, Z2,
                                          F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dg_read_field_def_CommandProducerSuccess(Other,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             TrUserData).

dg_read_field_def_CommandProducerSuccess(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4,
                                         TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandProducerSuccess(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             TrUserData);
dg_read_field_def_CommandProducerSuccess(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4,
                                         TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandProducerSuccess_request_id(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      TrUserData);
        18 ->
            d_field_CommandProducerSuccess_producer_name(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         TrUserData);
        24 ->
            d_field_CommandProducerSuccess_last_sequence_id(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            TrUserData);
        34 ->
            d_field_CommandProducerSuccess_schema_version(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandProducerSuccess(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       TrUserData);
                1 ->
                    skip_64_CommandProducerSuccess(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
                2 ->
                    skip_length_delimited_CommandProducerSuccess(Rest,
                                                                 0,
                                                                 0,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 TrUserData);
                3 ->
                    skip_group_CommandProducerSuccess(Rest,
                                                      Key bsr 3,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      TrUserData);
                5 ->
                    skip_32_CommandProducerSuccess(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData)
            end
    end;
dg_read_field_def_CommandProducerSuccess(<<>>, 0, 0,
                                         F@_1, F@_2, F@_3, F@_4, _) ->
    S1 = #{request_id => F@_1, producer_name => F@_2},
    S2 = if F@_3 == '$undef' -> S1;
            true -> S1#{last_sequence_id => F@_3}
         end,
    if F@_4 == '$undef' -> S2;
       true -> S2#{schema_version => F@_4}
    end.

d_field_CommandProducerSuccess_request_id(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4,
                                          TrUserData)
    when N < 57 ->
    d_field_CommandProducerSuccess_request_id(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData);
d_field_CommandProducerSuccess_request_id(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, _, F@_2, F@_3, F@_4,
                                          TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandProducerSuccess(RestF,
                                              0,
                                              0,
                                              NewFValue,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData).

d_field_CommandProducerSuccess_producer_name(<<1:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             TrUserData)
    when N < 57 ->
    d_field_CommandProducerSuccess_producer_name(Rest,
                                                 N + 7,
                                                 X bsl N + Acc,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 TrUserData);
d_field_CommandProducerSuccess_producer_name(<<0:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, _, F@_3, F@_4,
                                             TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandProducerSuccess(RestF,
                                              0,
                                              0,
                                              F@_1,
                                              NewFValue,
                                              F@_3,
                                              F@_4,
                                              TrUserData).

d_field_CommandProducerSuccess_last_sequence_id(<<1:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                TrUserData)
    when N < 57 ->
    d_field_CommandProducerSuccess_last_sequence_id(Rest,
                                                    N + 7,
                                                    X bsl N + Acc,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    TrUserData);
d_field_CommandProducerSuccess_last_sequence_id(<<0:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, _, F@_4,
                                                TrUserData) ->
    {NewFValue, RestF} = {begin
                              <<Res:64/signed-native>> = <<(X bsl N +
                                                                Acc):64/unsigned-native>>,
                              id(Res, TrUserData)
                          end,
                          Rest},
    dfp_read_field_def_CommandProducerSuccess(RestF,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              NewFValue,
                                              F@_4,
                                              TrUserData).

d_field_CommandProducerSuccess_schema_version(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              TrUserData)
    when N < 57 ->
    d_field_CommandProducerSuccess_schema_version(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  TrUserData);
d_field_CommandProducerSuccess_schema_version(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, _,
                                              TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_CommandProducerSuccess(RestF,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              NewFValue,
                                              TrUserData).

skip_varint_CommandProducerSuccess(<<1:1, _:7,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                   TrUserData) ->
    skip_varint_CommandProducerSuccess(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       TrUserData);
skip_varint_CommandProducerSuccess(<<0:1, _:7,
                                     Rest/binary>>,
                                   Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                   TrUserData) ->
    dfp_read_field_def_CommandProducerSuccess(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData).

skip_length_delimited_CommandProducerSuccess(<<1:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandProducerSuccess(Rest,
                                                 N + 7,
                                                 X bsl N + Acc,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 TrUserData);
skip_length_delimited_CommandProducerSuccess(<<0:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandProducerSuccess(Rest2,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData).

skip_group_CommandProducerSuccess(Bin, FNum, Z2, F@_1,
                                  F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandProducerSuccess(Rest,
                                              0,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData).

skip_32_CommandProducerSuccess(<<_:32, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandProducerSuccess(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData).

skip_64_CommandProducerSuccess(<<_:64, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandProducerSuccess(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              TrUserData).

decode_msg_CommandError(Bin, TrUserData) ->
    dfp_read_field_def_CommandError(Bin,
                                    0,
                                    0,
                                    id('$undef', TrUserData),
                                    id('$undef', TrUserData),
                                    id('$undef', TrUserData),
                                    TrUserData).

dfp_read_field_def_CommandError(<<8, Rest/binary>>, Z1,
                                Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandError_request_id(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData);
dfp_read_field_def_CommandError(<<16, Rest/binary>>, Z1,
                                Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandError_error(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               F@_3,
                               TrUserData);
dfp_read_field_def_CommandError(<<26, Rest/binary>>, Z1,
                                Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandError_message(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 TrUserData);
dfp_read_field_def_CommandError(<<>>, 0, 0, F@_1, F@_2,
                                F@_3, _) ->
    #{request_id => F@_1, error => F@_2, message => F@_3};
dfp_read_field_def_CommandError(Other, Z1, Z2, F@_1,
                                F@_2, F@_3, TrUserData) ->
    dg_read_field_def_CommandError(Other,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   TrUserData).

dg_read_field_def_CommandError(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandError(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   TrUserData);
dg_read_field_def_CommandError(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandError_request_id(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
        16 ->
            d_field_CommandError_error(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       TrUserData);
        26 ->
            d_field_CommandError_message(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandError(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
                1 ->
                    skip_64_CommandError(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         TrUserData);
                2 ->
                    skip_length_delimited_CommandError(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData);
                3 ->
                    skip_group_CommandError(Rest,
                                            Key bsr 3,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
                5 ->
                    skip_32_CommandError(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         TrUserData)
            end
    end;
dg_read_field_def_CommandError(<<>>, 0, 0, F@_1, F@_2,
                               F@_3, _) ->
    #{request_id => F@_1, error => F@_2, message => F@_3}.

d_field_CommandError_request_id(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandError_request_id(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData);
d_field_CommandError_request_id(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandError(RestF,
                                    0,
                                    0,
                                    NewFValue,
                                    F@_2,
                                    F@_3,
                                    TrUserData).

d_field_CommandError_error(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandError_error(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               F@_3,
                               TrUserData);
d_field_CommandError_error(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandError(RestF,
                                    0,
                                    0,
                                    F@_1,
                                    NewFValue,
                                    F@_3,
                                    TrUserData).

d_field_CommandError_message(<<1:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandError_message(Rest,
                                 N + 7,
                                 X bsl N + Acc,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 TrUserData);
d_field_CommandError_message(<<0:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandError(RestF,
                                    0,
                                    0,
                                    F@_1,
                                    F@_2,
                                    NewFValue,
                                    TrUserData).

skip_varint_CommandError(<<1:1, _:7, Rest/binary>>, Z1,
                         Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_CommandError(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             F@_3,
                             TrUserData);
skip_varint_CommandError(<<0:1, _:7, Rest/binary>>, Z1,
                         Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandError(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData).

skip_length_delimited_CommandError(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandError(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       TrUserData);
skip_length_delimited_CommandError(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandError(Rest2,
                                    0,
                                    0,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData).

skip_group_CommandError(Bin, FNum, Z2, F@_1, F@_2, F@_3,
                        TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandError(Rest,
                                    0,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData).

skip_32_CommandError(<<_:32, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandError(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData).

skip_64_CommandError(<<_:64, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandError(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData).

decode_msg_CommandPing(Bin, TrUserData) ->
    dfp_read_field_def_CommandPing(Bin, 0, 0, TrUserData).

dfp_read_field_def_CommandPing(<<>>, 0, 0, _) -> #{};
dfp_read_field_def_CommandPing(Other, Z1, Z2,
                               TrUserData) ->
    dg_read_field_def_CommandPing(Other,
                                  Z1,
                                  Z2,
                                  TrUserData).

dg_read_field_def_CommandPing(<<1:1, X:7, Rest/binary>>,
                              N, Acc, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandPing(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  TrUserData);
dg_read_field_def_CommandPing(<<0:1, X:7, Rest/binary>>,
                              N, Acc, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> skip_varint_CommandPing(Rest, 0, 0, TrUserData);
        1 -> skip_64_CommandPing(Rest, 0, 0, TrUserData);
        2 ->
            skip_length_delimited_CommandPing(Rest,
                                              0,
                                              0,
                                              TrUserData);
        3 ->
            skip_group_CommandPing(Rest, Key bsr 3, 0, TrUserData);
        5 -> skip_32_CommandPing(Rest, 0, 0, TrUserData)
    end;
dg_read_field_def_CommandPing(<<>>, 0, 0, _) -> #{}.

skip_varint_CommandPing(<<1:1, _:7, Rest/binary>>, Z1,
                        Z2, TrUserData) ->
    skip_varint_CommandPing(Rest, Z1, Z2, TrUserData);
skip_varint_CommandPing(<<0:1, _:7, Rest/binary>>, Z1,
                        Z2, TrUserData) ->
    dfp_read_field_def_CommandPing(Rest,
                                   Z1,
                                   Z2,
                                   TrUserData).

skip_length_delimited_CommandPing(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandPing(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      TrUserData);
skip_length_delimited_CommandPing(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandPing(Rest2, 0, 0, TrUserData).

skip_group_CommandPing(Bin, FNum, Z2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandPing(Rest, 0, Z2, TrUserData).

skip_32_CommandPing(<<_:32, Rest/binary>>, Z1, Z2,
                    TrUserData) ->
    dfp_read_field_def_CommandPing(Rest,
                                   Z1,
                                   Z2,
                                   TrUserData).

skip_64_CommandPing(<<_:64, Rest/binary>>, Z1, Z2,
                    TrUserData) ->
    dfp_read_field_def_CommandPing(Rest,
                                   Z1,
                                   Z2,
                                   TrUserData).

decode_msg_CommandPong(Bin, TrUserData) ->
    dfp_read_field_def_CommandPong(Bin, 0, 0, TrUserData).

dfp_read_field_def_CommandPong(<<>>, 0, 0, _) -> #{};
dfp_read_field_def_CommandPong(Other, Z1, Z2,
                               TrUserData) ->
    dg_read_field_def_CommandPong(Other,
                                  Z1,
                                  Z2,
                                  TrUserData).

dg_read_field_def_CommandPong(<<1:1, X:7, Rest/binary>>,
                              N, Acc, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandPong(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  TrUserData);
dg_read_field_def_CommandPong(<<0:1, X:7, Rest/binary>>,
                              N, Acc, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> skip_varint_CommandPong(Rest, 0, 0, TrUserData);
        1 -> skip_64_CommandPong(Rest, 0, 0, TrUserData);
        2 ->
            skip_length_delimited_CommandPong(Rest,
                                              0,
                                              0,
                                              TrUserData);
        3 ->
            skip_group_CommandPong(Rest, Key bsr 3, 0, TrUserData);
        5 -> skip_32_CommandPong(Rest, 0, 0, TrUserData)
    end;
dg_read_field_def_CommandPong(<<>>, 0, 0, _) -> #{}.

skip_varint_CommandPong(<<1:1, _:7, Rest/binary>>, Z1,
                        Z2, TrUserData) ->
    skip_varint_CommandPong(Rest, Z1, Z2, TrUserData);
skip_varint_CommandPong(<<0:1, _:7, Rest/binary>>, Z1,
                        Z2, TrUserData) ->
    dfp_read_field_def_CommandPong(Rest,
                                   Z1,
                                   Z2,
                                   TrUserData).

skip_length_delimited_CommandPong(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandPong(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      TrUserData);
skip_length_delimited_CommandPong(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandPong(Rest2, 0, 0, TrUserData).

skip_group_CommandPong(Bin, FNum, Z2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandPong(Rest, 0, Z2, TrUserData).

skip_32_CommandPong(<<_:32, Rest/binary>>, Z1, Z2,
                    TrUserData) ->
    dfp_read_field_def_CommandPong(Rest,
                                   Z1,
                                   Z2,
                                   TrUserData).

skip_64_CommandPong(<<_:64, Rest/binary>>, Z1, Z2,
                    TrUserData) ->
    dfp_read_field_def_CommandPong(Rest,
                                   Z1,
                                   Z2,
                                   TrUserData).

decode_msg_CommandConsumerStats(Bin, TrUserData) ->
    dfp_read_field_def_CommandConsumerStats(Bin,
                                            0,
                                            0,
                                            id('$undef', TrUserData),
                                            id('$undef', TrUserData),
                                            TrUserData).

dfp_read_field_def_CommandConsumerStats(<<8,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandConsumerStats_request_id(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
dfp_read_field_def_CommandConsumerStats(<<32,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandConsumerStats_consumer_id(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
dfp_read_field_def_CommandConsumerStats(<<>>, 0, 0,
                                        F@_1, F@_2, _) ->
    #{request_id => F@_1, consumer_id => F@_2};
dfp_read_field_def_CommandConsumerStats(Other, Z1, Z2,
                                        F@_1, F@_2, TrUserData) ->
    dg_read_field_def_CommandConsumerStats(Other,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           TrUserData).

dg_read_field_def_CommandConsumerStats(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandConsumerStats(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           TrUserData);
dg_read_field_def_CommandConsumerStats(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandConsumerStats_request_id(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
        32 ->
            d_field_CommandConsumerStats_consumer_id(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandConsumerStats(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     TrUserData);
                1 ->
                    skip_64_CommandConsumerStats(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 TrUserData);
                2 ->
                    skip_length_delimited_CommandConsumerStats(Rest,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               TrUserData);
                3 ->
                    skip_group_CommandConsumerStats(Rest,
                                                    Key bsr 3,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
                5 ->
                    skip_32_CommandConsumerStats(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 TrUserData)
            end
    end;
dg_read_field_def_CommandConsumerStats(<<>>, 0, 0, F@_1,
                                       F@_2, _) ->
    #{request_id => F@_1, consumer_id => F@_2}.

d_field_CommandConsumerStats_request_id(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStats_request_id(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
d_field_CommandConsumerStats_request_id(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandConsumerStats(RestF,
                                            0,
                                            0,
                                            NewFValue,
                                            F@_2,
                                            TrUserData).

d_field_CommandConsumerStats_consumer_id(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStats_consumer_id(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
d_field_CommandConsumerStats_consumer_id(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandConsumerStats(RestF,
                                            0,
                                            0,
                                            F@_1,
                                            NewFValue,
                                            TrUserData).

skip_varint_CommandConsumerStats(<<1:1, _:7,
                                   Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_CommandConsumerStats(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     TrUserData);
skip_varint_CommandConsumerStats(<<0:1, _:7,
                                   Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandConsumerStats(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_length_delimited_CommandConsumerStats(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandConsumerStats(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               TrUserData);
skip_length_delimited_CommandConsumerStats(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandConsumerStats(Rest2,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_group_CommandConsumerStats(Bin, FNum, Z2, F@_1,
                                F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandConsumerStats(Rest,
                                            0,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_32_CommandConsumerStats(<<_:32, Rest/binary>>, Z1,
                             Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandConsumerStats(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

skip_64_CommandConsumerStats(<<_:64, Rest/binary>>, Z1,
                             Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandConsumerStats(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            TrUserData).

decode_msg_CommandConsumerStatsResponse(Bin,
                                        TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Bin,
                                                    0,
                                                    0,
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    id('$undef', TrUserData),
                                                    TrUserData).

dfp_read_field_def_CommandConsumerStatsResponse(<<8,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_request_id(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<16,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_error_code(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<26,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_error_message(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       F@_9,
                                                       F@_10,
                                                       F@_11,
                                                       F@_12,
                                                       F@_13,
                                                       F@_14,
                                                       F@_15,
                                                       TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<33,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_msgRateOut(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<41,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_msgThroughputOut(Rest,
                                                          Z1,
                                                          Z2,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<49,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_msgRateRedeliver(Rest,
                                                          Z1,
                                                          Z2,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<58,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_consumerName(Rest,
                                                      Z1,
                                                      Z2,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<64,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_availablePermits(Rest,
                                                          Z1,
                                                          Z2,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<72,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_unackedMessages(Rest,
                                                         Z1,
                                                         Z2,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         F@_7,
                                                         F@_8,
                                                         F@_9,
                                                         F@_10,
                                                         F@_11,
                                                         F@_12,
                                                         F@_13,
                                                         F@_14,
                                                         F@_15,
                                                         TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<80,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_blockedConsumerOnUnackedMsgs(Rest,
                                                                      Z1,
                                                                      Z2,
                                                                      F@_1,
                                                                      F@_2,
                                                                      F@_3,
                                                                      F@_4,
                                                                      F@_5,
                                                                      F@_6,
                                                                      F@_7,
                                                                      F@_8,
                                                                      F@_9,
                                                                      F@_10,
                                                                      F@_11,
                                                                      F@_12,
                                                                      F@_13,
                                                                      F@_14,
                                                                      F@_15,
                                                                      TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<90,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_address(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<98,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_connectedSince(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        F@_11,
                                                        F@_12,
                                                        F@_13,
                                                        F@_14,
                                                        F@_15,
                                                        TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<106,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_type(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<113,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_msgRateExpired(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        F@_11,
                                                        F@_12,
                                                        F@_13,
                                                        F@_14,
                                                        F@_15,
                                                        TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<120,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    d_field_CommandConsumerStatsResponse_msgBacklog(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
dfp_read_field_def_CommandConsumerStatsResponse(<<>>, 0,
                                                0, F@_1, F@_2, F@_3, F@_4, F@_5,
                                                F@_6, F@_7, F@_8, F@_9, F@_10,
                                                F@_11, F@_12, F@_13, F@_14,
                                                F@_15, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{error_code => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{error_message => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{msgRateOut => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{msgThroughputOut => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{msgRateRedeliver => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{consumerName => F@_7}
         end,
    S8 = if F@_8 == '$undef' -> S7;
            true -> S7#{availablePermits => F@_8}
         end,
    S9 = if F@_9 == '$undef' -> S8;
            true -> S8#{unackedMessages => F@_9}
         end,
    S10 = if F@_10 == '$undef' -> S9;
             true -> S9#{blockedConsumerOnUnackedMsgs => F@_10}
          end,
    S11 = if F@_11 == '$undef' -> S10;
             true -> S10#{address => F@_11}
          end,
    S12 = if F@_12 == '$undef' -> S11;
             true -> S11#{connectedSince => F@_12}
          end,
    S13 = if F@_13 == '$undef' -> S12;
             true -> S12#{type => F@_13}
          end,
    S14 = if F@_14 == '$undef' -> S13;
             true -> S13#{msgRateExpired => F@_14}
          end,
    if F@_15 == '$undef' -> S14;
       true -> S14#{msgBacklog => F@_15}
    end;
dfp_read_field_def_CommandConsumerStatsResponse(Other,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    dg_read_field_def_CommandConsumerStatsResponse(Other,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   F@_7,
                                                   F@_8,
                                                   F@_9,
                                                   F@_10,
                                                   F@_11,
                                                   F@_12,
                                                   F@_13,
                                                   F@_14,
                                                   F@_15,
                                                   TrUserData).

dg_read_field_def_CommandConsumerStatsResponse(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, F@_6, F@_7, F@_8, F@_9,
                                               F@_10, F@_11, F@_12, F@_13,
                                               F@_14, F@_15, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandConsumerStatsResponse(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   F@_7,
                                                   F@_8,
                                                   F@_9,
                                                   F@_10,
                                                   F@_11,
                                                   F@_12,
                                                   F@_13,
                                                   F@_14,
                                                   F@_15,
                                                   TrUserData);
dg_read_field_def_CommandConsumerStatsResponse(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, F@_6, F@_7, F@_8, F@_9,
                                               F@_10, F@_11, F@_12, F@_13,
                                               F@_14, F@_15, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandConsumerStatsResponse_request_id(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            F@_6,
                                                            F@_7,
                                                            F@_8,
                                                            F@_9,
                                                            F@_10,
                                                            F@_11,
                                                            F@_12,
                                                            F@_13,
                                                            F@_14,
                                                            F@_15,
                                                            TrUserData);
        16 ->
            d_field_CommandConsumerStatsResponse_error_code(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            F@_6,
                                                            F@_7,
                                                            F@_8,
                                                            F@_9,
                                                            F@_10,
                                                            F@_11,
                                                            F@_12,
                                                            F@_13,
                                                            F@_14,
                                                            F@_15,
                                                            TrUserData);
        26 ->
            d_field_CommandConsumerStatsResponse_error_message(Rest,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               F@_4,
                                                               F@_5,
                                                               F@_6,
                                                               F@_7,
                                                               F@_8,
                                                               F@_9,
                                                               F@_10,
                                                               F@_11,
                                                               F@_12,
                                                               F@_13,
                                                               F@_14,
                                                               F@_15,
                                                               TrUserData);
        33 ->
            d_field_CommandConsumerStatsResponse_msgRateOut(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            F@_6,
                                                            F@_7,
                                                            F@_8,
                                                            F@_9,
                                                            F@_10,
                                                            F@_11,
                                                            F@_12,
                                                            F@_13,
                                                            F@_14,
                                                            F@_15,
                                                            TrUserData);
        41 ->
            d_field_CommandConsumerStatsResponse_msgThroughputOut(Rest,
                                                                  0,
                                                                  0,
                                                                  F@_1,
                                                                  F@_2,
                                                                  F@_3,
                                                                  F@_4,
                                                                  F@_5,
                                                                  F@_6,
                                                                  F@_7,
                                                                  F@_8,
                                                                  F@_9,
                                                                  F@_10,
                                                                  F@_11,
                                                                  F@_12,
                                                                  F@_13,
                                                                  F@_14,
                                                                  F@_15,
                                                                  TrUserData);
        49 ->
            d_field_CommandConsumerStatsResponse_msgRateRedeliver(Rest,
                                                                  0,
                                                                  0,
                                                                  F@_1,
                                                                  F@_2,
                                                                  F@_3,
                                                                  F@_4,
                                                                  F@_5,
                                                                  F@_6,
                                                                  F@_7,
                                                                  F@_8,
                                                                  F@_9,
                                                                  F@_10,
                                                                  F@_11,
                                                                  F@_12,
                                                                  F@_13,
                                                                  F@_14,
                                                                  F@_15,
                                                                  TrUserData);
        58 ->
            d_field_CommandConsumerStatsResponse_consumerName(Rest,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              F@_6,
                                                              F@_7,
                                                              F@_8,
                                                              F@_9,
                                                              F@_10,
                                                              F@_11,
                                                              F@_12,
                                                              F@_13,
                                                              F@_14,
                                                              F@_15,
                                                              TrUserData);
        64 ->
            d_field_CommandConsumerStatsResponse_availablePermits(Rest,
                                                                  0,
                                                                  0,
                                                                  F@_1,
                                                                  F@_2,
                                                                  F@_3,
                                                                  F@_4,
                                                                  F@_5,
                                                                  F@_6,
                                                                  F@_7,
                                                                  F@_8,
                                                                  F@_9,
                                                                  F@_10,
                                                                  F@_11,
                                                                  F@_12,
                                                                  F@_13,
                                                                  F@_14,
                                                                  F@_15,
                                                                  TrUserData);
        72 ->
            d_field_CommandConsumerStatsResponse_unackedMessages(Rest,
                                                                 0,
                                                                 0,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 F@_6,
                                                                 F@_7,
                                                                 F@_8,
                                                                 F@_9,
                                                                 F@_10,
                                                                 F@_11,
                                                                 F@_12,
                                                                 F@_13,
                                                                 F@_14,
                                                                 F@_15,
                                                                 TrUserData);
        80 ->
            d_field_CommandConsumerStatsResponse_blockedConsumerOnUnackedMsgs(Rest,
                                                                              0,
                                                                              0,
                                                                              F@_1,
                                                                              F@_2,
                                                                              F@_3,
                                                                              F@_4,
                                                                              F@_5,
                                                                              F@_6,
                                                                              F@_7,
                                                                              F@_8,
                                                                              F@_9,
                                                                              F@_10,
                                                                              F@_11,
                                                                              F@_12,
                                                                              F@_13,
                                                                              F@_14,
                                                                              F@_15,
                                                                              TrUserData);
        90 ->
            d_field_CommandConsumerStatsResponse_address(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         F@_7,
                                                         F@_8,
                                                         F@_9,
                                                         F@_10,
                                                         F@_11,
                                                         F@_12,
                                                         F@_13,
                                                         F@_14,
                                                         F@_15,
                                                         TrUserData);
        98 ->
            d_field_CommandConsumerStatsResponse_connectedSince(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                F@_6,
                                                                F@_7,
                                                                F@_8,
                                                                F@_9,
                                                                F@_10,
                                                                F@_11,
                                                                F@_12,
                                                                F@_13,
                                                                F@_14,
                                                                F@_15,
                                                                TrUserData);
        106 ->
            d_field_CommandConsumerStatsResponse_type(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      TrUserData);
        113 ->
            d_field_CommandConsumerStatsResponse_msgRateExpired(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                F@_6,
                                                                F@_7,
                                                                F@_8,
                                                                F@_9,
                                                                F@_10,
                                                                F@_11,
                                                                F@_12,
                                                                F@_13,
                                                                F@_14,
                                                                F@_15,
                                                                TrUserData);
        120 ->
            d_field_CommandConsumerStatsResponse_msgBacklog(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            F@_6,
                                                            F@_7,
                                                            F@_8,
                                                            F@_9,
                                                            F@_10,
                                                            F@_11,
                                                            F@_12,
                                                            F@_13,
                                                            F@_14,
                                                            F@_15,
                                                            TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandConsumerStatsResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             F@_7,
                                                             F@_8,
                                                             F@_9,
                                                             F@_10,
                                                             F@_11,
                                                             F@_12,
                                                             F@_13,
                                                             F@_14,
                                                             F@_15,
                                                             TrUserData);
                1 ->
                    skip_64_CommandConsumerStatsResponse(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         F@_7,
                                                         F@_8,
                                                         F@_9,
                                                         F@_10,
                                                         F@_11,
                                                         F@_12,
                                                         F@_13,
                                                         F@_14,
                                                         F@_15,
                                                         TrUserData);
                2 ->
                    skip_length_delimited_CommandConsumerStatsResponse(Rest,
                                                                       0,
                                                                       0,
                                                                       F@_1,
                                                                       F@_2,
                                                                       F@_3,
                                                                       F@_4,
                                                                       F@_5,
                                                                       F@_6,
                                                                       F@_7,
                                                                       F@_8,
                                                                       F@_9,
                                                                       F@_10,
                                                                       F@_11,
                                                                       F@_12,
                                                                       F@_13,
                                                                       F@_14,
                                                                       F@_15,
                                                                       TrUserData);
                3 ->
                    skip_group_CommandConsumerStatsResponse(Rest,
                                                            Key bsr 3,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            F@_6,
                                                            F@_7,
                                                            F@_8,
                                                            F@_9,
                                                            F@_10,
                                                            F@_11,
                                                            F@_12,
                                                            F@_13,
                                                            F@_14,
                                                            F@_15,
                                                            TrUserData);
                5 ->
                    skip_32_CommandConsumerStatsResponse(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         F@_7,
                                                         F@_8,
                                                         F@_9,
                                                         F@_10,
                                                         F@_11,
                                                         F@_12,
                                                         F@_13,
                                                         F@_14,
                                                         F@_15,
                                                         TrUserData)
            end
    end;
dg_read_field_def_CommandConsumerStatsResponse(<<>>, 0,
                                               0, F@_1, F@_2, F@_3, F@_4, F@_5,
                                               F@_6, F@_7, F@_8, F@_9, F@_10,
                                               F@_11, F@_12, F@_13, F@_14,
                                               F@_15, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{error_code => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{error_message => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{msgRateOut => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{msgThroughputOut => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{msgRateRedeliver => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{consumerName => F@_7}
         end,
    S8 = if F@_8 == '$undef' -> S7;
            true -> S7#{availablePermits => F@_8}
         end,
    S9 = if F@_9 == '$undef' -> S8;
            true -> S8#{unackedMessages => F@_9}
         end,
    S10 = if F@_10 == '$undef' -> S9;
             true -> S9#{blockedConsumerOnUnackedMsgs => F@_10}
          end,
    S11 = if F@_11 == '$undef' -> S10;
             true -> S10#{address => F@_11}
          end,
    S12 = if F@_12 == '$undef' -> S11;
             true -> S11#{connectedSince => F@_12}
          end,
    S13 = if F@_13 == '$undef' -> S12;
             true -> S12#{type => F@_13}
          end,
    S14 = if F@_14 == '$undef' -> S13;
             true -> S13#{msgRateExpired => F@_14}
          end,
    if F@_15 == '$undef' -> S14;
       true -> S14#{msgBacklog => F@_15}
    end.

d_field_CommandConsumerStatsResponse_request_id(<<1:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_request_id(Rest,
                                                    N + 7,
                                                    X bsl N + Acc,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_request_id(<<0:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, _, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    NewFValue,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_error_code(<<1:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_error_code(Rest,
                                                    N + 7,
                                                    X bsl N + Acc,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_error_code(<<0:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, _, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    NewFValue,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_error_message(<<1:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, F@_6, F@_7, F@_8,
                                                   F@_9, F@_10, F@_11, F@_12,
                                                   F@_13, F@_14, F@_15,
                                                   TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_error_message(Rest,
                                                       N + 7,
                                                       X bsl N + Acc,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       F@_9,
                                                       F@_10,
                                                       F@_11,
                                                       F@_12,
                                                       F@_13,
                                                       F@_14,
                                                       F@_15,
                                                       TrUserData);
d_field_CommandConsumerStatsResponse_error_message(<<0:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, _, F@_4,
                                                   F@_5, F@_6, F@_7, F@_8, F@_9,
                                                   F@_10, F@_11, F@_12, F@_13,
                                                   F@_14, F@_15, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    NewFValue,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_msgRateOut(<<0:48,
                                                  240, 127, Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, _,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    id(infinity, TrUserData),
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateOut(<<0:48,
                                                  240, 255, Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, _,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    id('-infinity', TrUserData),
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateOut(<<_:48,
                                                  15:4, _:4, _:1, 127:7,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, _,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    id(nan, TrUserData),
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateOut(<<Value:64/little-float,
                                                  Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, _,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    id(Value, TrUserData),
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_msgThroughputOut(<<0:48,
                                                        240, 127, Rest/binary>>,
                                                      Z1, Z2, F@_1, F@_2, F@_3,
                                                      F@_4, _, F@_6, F@_7, F@_8,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    id(infinity, TrUserData),
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgThroughputOut(<<0:48,
                                                        240, 255, Rest/binary>>,
                                                      Z1, Z2, F@_1, F@_2, F@_3,
                                                      F@_4, _, F@_6, F@_7, F@_8,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    id('-infinity', TrUserData),
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgThroughputOut(<<_:48,
                                                        15:4, _:4, _:1, 127:7,
                                                        Rest/binary>>,
                                                      Z1, Z2, F@_1, F@_2, F@_3,
                                                      F@_4, _, F@_6, F@_7, F@_8,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    id(nan, TrUserData),
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgThroughputOut(<<Value:64/little-float,
                                                        Rest/binary>>,
                                                      Z1, Z2, F@_1, F@_2, F@_3,
                                                      F@_4, _, F@_6, F@_7, F@_8,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    id(Value, TrUserData),
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_msgRateRedeliver(<<0:48,
                                                        240, 127, Rest/binary>>,
                                                      Z1, Z2, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, _, F@_7, F@_8,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    id(infinity, TrUserData),
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateRedeliver(<<0:48,
                                                        240, 255, Rest/binary>>,
                                                      Z1, Z2, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, _, F@_7, F@_8,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    id('-infinity', TrUserData),
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateRedeliver(<<_:48,
                                                        15:4, _:4, _:1, 127:7,
                                                        Rest/binary>>,
                                                      Z1, Z2, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, _, F@_7, F@_8,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    id(nan, TrUserData),
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateRedeliver(<<Value:64/little-float,
                                                        Rest/binary>>,
                                                      Z1, Z2, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, _, F@_7, F@_8,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    id(Value, TrUserData),
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_consumerName(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, F@_6, F@_7, F@_8,
                                                  F@_9, F@_10, F@_11, F@_12,
                                                  F@_13, F@_14, F@_15,
                                                  TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_consumerName(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      TrUserData);
d_field_CommandConsumerStatsResponse_consumerName(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, F@_6, _, F@_8,
                                                  F@_9, F@_10, F@_11, F@_12,
                                                  F@_13, F@_14, F@_15,
                                                  TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    NewFValue,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_availablePermits(<<1:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, F@_6, F@_7,
                                                      F@_8, F@_9, F@_10, F@_11,
                                                      F@_12, F@_13, F@_14,
                                                      F@_15, TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_availablePermits(Rest,
                                                          N + 7,
                                                          X bsl N + Acc,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          TrUserData);
d_field_CommandConsumerStatsResponse_availablePermits(<<0:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, F@_6, F@_7, _,
                                                      F@_9, F@_10, F@_11, F@_12,
                                                      F@_13, F@_14, F@_15,
                                                      TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    NewFValue,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_unackedMessages(<<1:1,
                                                       X:7, Rest/binary>>,
                                                     N, Acc, F@_1, F@_2, F@_3,
                                                     F@_4, F@_5, F@_6, F@_7,
                                                     F@_8, F@_9, F@_10, F@_11,
                                                     F@_12, F@_13, F@_14, F@_15,
                                                     TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_unackedMessages(Rest,
                                                         N + 7,
                                                         X bsl N + Acc,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         F@_7,
                                                         F@_8,
                                                         F@_9,
                                                         F@_10,
                                                         F@_11,
                                                         F@_12,
                                                         F@_13,
                                                         F@_14,
                                                         F@_15,
                                                         TrUserData);
d_field_CommandConsumerStatsResponse_unackedMessages(<<0:1,
                                                       X:7, Rest/binary>>,
                                                     N, Acc, F@_1, F@_2, F@_3,
                                                     F@_4, F@_5, F@_6, F@_7,
                                                     F@_8, _, F@_10, F@_11,
                                                     F@_12, F@_13, F@_14, F@_15,
                                                     TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    NewFValue,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_blockedConsumerOnUnackedMsgs(<<1:1,
                                                                    X:7,
                                                                    Rest/binary>>,
                                                                  N, Acc, F@_1,
                                                                  F@_2, F@_3,
                                                                  F@_4, F@_5,
                                                                  F@_6, F@_7,
                                                                  F@_8, F@_9,
                                                                  F@_10, F@_11,
                                                                  F@_12, F@_13,
                                                                  F@_14, F@_15,
                                                                  TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_blockedConsumerOnUnackedMsgs(Rest,
                                                                      N + 7,
                                                                      X bsl N +
                                                                          Acc,
                                                                      F@_1,
                                                                      F@_2,
                                                                      F@_3,
                                                                      F@_4,
                                                                      F@_5,
                                                                      F@_6,
                                                                      F@_7,
                                                                      F@_8,
                                                                      F@_9,
                                                                      F@_10,
                                                                      F@_11,
                                                                      F@_12,
                                                                      F@_13,
                                                                      F@_14,
                                                                      F@_15,
                                                                      TrUserData);
d_field_CommandConsumerStatsResponse_blockedConsumerOnUnackedMsgs(<<0:1,
                                                                    X:7,
                                                                    Rest/binary>>,
                                                                  N, Acc, F@_1,
                                                                  F@_2, F@_3,
                                                                  F@_4, F@_5,
                                                                  F@_6, F@_7,
                                                                  F@_8, F@_9, _,
                                                                  F@_11, F@_12,
                                                                  F@_13, F@_14,
                                                                  F@_15,
                                                                  TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0,
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    NewFValue,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_address(<<1:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, F@_6, F@_7, F@_8, F@_9,
                                             F@_10, F@_11, F@_12, F@_13, F@_14,
                                             F@_15, TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_address(Rest,
                                                 N + 7,
                                                 X bsl N + Acc,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 TrUserData);
d_field_CommandConsumerStatsResponse_address(<<0:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, F@_6, F@_7, F@_8, F@_9,
                                             F@_10, _, F@_12, F@_13, F@_14,
                                             F@_15, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    NewFValue,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_connectedSince(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, F@_10, F@_11,
                                                    F@_12, F@_13, F@_14, F@_15,
                                                    TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_connectedSince(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        F@_11,
                                                        F@_12,
                                                        F@_13,
                                                        F@_14,
                                                        F@_15,
                                                        TrUserData);
d_field_CommandConsumerStatsResponse_connectedSince(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, F@_10, F@_11, _,
                                                    F@_13, F@_14, F@_15,
                                                    TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    NewFValue,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_type(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                          F@_12, F@_13, F@_14, F@_15,
                                          TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_type(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              TrUserData);
d_field_CommandConsumerStatsResponse_type(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                          F@_12, _, F@_14, F@_15, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    NewFValue,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_msgRateExpired(<<0:48,
                                                      240, 127, Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, F@_10, F@_11,
                                                    F@_12, F@_13, _, F@_15,
                                                    TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    id(infinity, TrUserData),
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateExpired(<<0:48,
                                                      240, 255, Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, F@_10, F@_11,
                                                    F@_12, F@_13, _, F@_15,
                                                    TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    id('-infinity', TrUserData),
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateExpired(<<_:48,
                                                      15:4, _:4, _:1, 127:7,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, F@_10, F@_11,
                                                    F@_12, F@_13, _, F@_15,
                                                    TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    id(nan, TrUserData),
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgRateExpired(<<Value:64/little-float,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, F@_10, F@_11,
                                                    F@_12, F@_13, _, F@_15,
                                                    TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    id(Value, TrUserData),
                                                    F@_15,
                                                    TrUserData).

d_field_CommandConsumerStatsResponse_msgBacklog(<<1:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, F@_15, TrUserData)
    when N < 57 ->
    d_field_CommandConsumerStatsResponse_msgBacklog(Rest,
                                                    N + 7,
                                                    X bsl N + Acc,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData);
d_field_CommandConsumerStatsResponse_msgBacklog(<<0:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, F@_6, F@_7, F@_8, F@_9,
                                                F@_10, F@_11, F@_12, F@_13,
                                                F@_14, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandConsumerStatsResponse(RestF,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    NewFValue,
                                                    TrUserData).

skip_varint_CommandConsumerStatsResponse(<<1:1, _:7,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15,
                                         TrUserData) ->
    skip_varint_CommandConsumerStatsResponse(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             TrUserData);
skip_varint_CommandConsumerStatsResponse(<<0:1, _:7,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15,
                                         TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

skip_length_delimited_CommandConsumerStatsResponse(<<1:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, F@_6, F@_7, F@_8,
                                                   F@_9, F@_10, F@_11, F@_12,
                                                   F@_13, F@_14, F@_15,
                                                   TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandConsumerStatsResponse(Rest,
                                                       N + 7,
                                                       X bsl N + Acc,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       F@_9,
                                                       F@_10,
                                                       F@_11,
                                                       F@_12,
                                                       F@_13,
                                                       F@_14,
                                                       F@_15,
                                                       TrUserData);
skip_length_delimited_CommandConsumerStatsResponse(<<0:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, F@_6, F@_7, F@_8,
                                                   F@_9, F@_10, F@_11, F@_12,
                                                   F@_13, F@_14, F@_15,
                                                   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandConsumerStatsResponse(Rest2,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

skip_group_CommandConsumerStatsResponse(Bin, FNum, Z2,
                                        F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                        F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                        F@_13, F@_14, F@_15, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    0,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

skip_32_CommandConsumerStatsResponse(<<_:32,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

skip_64_CommandConsumerStatsResponse(<<_:64,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, TrUserData) ->
    dfp_read_field_def_CommandConsumerStatsResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    TrUserData).

decode_msg_CommandGetLastMessageId(Bin, TrUserData) ->
    dfp_read_field_def_CommandGetLastMessageId(Bin,
                                               0,
                                               0,
                                               id('$undef', TrUserData),
                                               id('$undef', TrUserData),
                                               TrUserData).

dfp_read_field_def_CommandGetLastMessageId(<<8,
                                             Rest/binary>>,
                                           Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandGetLastMessageId_consumer_id(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                TrUserData);
dfp_read_field_def_CommandGetLastMessageId(<<16,
                                             Rest/binary>>,
                                           Z1, Z2, F@_1, F@_2, TrUserData) ->
    d_field_CommandGetLastMessageId_request_id(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               TrUserData);
dfp_read_field_def_CommandGetLastMessageId(<<>>, 0, 0,
                                           F@_1, F@_2, _) ->
    #{consumer_id => F@_1, request_id => F@_2};
dfp_read_field_def_CommandGetLastMessageId(Other, Z1,
                                           Z2, F@_1, F@_2, TrUserData) ->
    dg_read_field_def_CommandGetLastMessageId(Other,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              TrUserData).

dg_read_field_def_CommandGetLastMessageId(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandGetLastMessageId(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              TrUserData);
dg_read_field_def_CommandGetLastMessageId(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandGetLastMessageId_consumer_id(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        TrUserData);
        16 ->
            d_field_CommandGetLastMessageId_request_id(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandGetLastMessageId(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        TrUserData);
                1 ->
                    skip_64_CommandGetLastMessageId(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
                2 ->
                    skip_length_delimited_CommandGetLastMessageId(Rest,
                                                                  0,
                                                                  0,
                                                                  F@_1,
                                                                  F@_2,
                                                                  TrUserData);
                3 ->
                    skip_group_CommandGetLastMessageId(Rest,
                                                       Key bsr 3,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       TrUserData);
                5 ->
                    skip_32_CommandGetLastMessageId(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData)
            end
    end;
dg_read_field_def_CommandGetLastMessageId(<<>>, 0, 0,
                                          F@_1, F@_2, _) ->
    #{consumer_id => F@_1, request_id => F@_2}.

d_field_CommandGetLastMessageId_consumer_id(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandGetLastMessageId_consumer_id(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                TrUserData);
d_field_CommandGetLastMessageId_consumer_id(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetLastMessageId(RestF,
                                               0,
                                               0,
                                               NewFValue,
                                               F@_2,
                                               TrUserData).

d_field_CommandGetLastMessageId_request_id(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_CommandGetLastMessageId_request_id(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               TrUserData);
d_field_CommandGetLastMessageId_request_id(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetLastMessageId(RestF,
                                               0,
                                               0,
                                               F@_1,
                                               NewFValue,
                                               TrUserData).

skip_varint_CommandGetLastMessageId(<<1:1, _:7,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_CommandGetLastMessageId(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        TrUserData);
skip_varint_CommandGetLastMessageId(<<0:1, _:7,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandGetLastMessageId(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               TrUserData).

skip_length_delimited_CommandGetLastMessageId(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandGetLastMessageId(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  TrUserData);
skip_length_delimited_CommandGetLastMessageId(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandGetLastMessageId(Rest2,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               TrUserData).

skip_group_CommandGetLastMessageId(Bin, FNum, Z2, F@_1,
                                   F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandGetLastMessageId(Rest,
                                               0,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               TrUserData).

skip_32_CommandGetLastMessageId(<<_:32, Rest/binary>>,
                                Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandGetLastMessageId(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               TrUserData).

skip_64_CommandGetLastMessageId(<<_:64, Rest/binary>>,
                                Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandGetLastMessageId(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               TrUserData).

decode_msg_CommandGetLastMessageIdResponse(Bin,
                                           TrUserData) ->
    dfp_read_field_def_CommandGetLastMessageIdResponse(Bin,
                                                       0,
                                                       0,
                                                       id('$undef', TrUserData),
                                                       id('$undef', TrUserData),
                                                       id('$undef', TrUserData),
                                                       TrUserData).

dfp_read_field_def_CommandGetLastMessageIdResponse(<<10,
                                                     Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   TrUserData) ->
    d_field_CommandGetLastMessageIdResponse_last_message_id(Rest,
                                                            Z1,
                                                            Z2,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            TrUserData);
dfp_read_field_def_CommandGetLastMessageIdResponse(<<16,
                                                     Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   TrUserData) ->
    d_field_CommandGetLastMessageIdResponse_request_id(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData);
dfp_read_field_def_CommandGetLastMessageIdResponse(<<26,
                                                     Rest/binary>>,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   TrUserData) ->
    d_field_CommandGetLastMessageIdResponse_consumer_mark_delete_position(Rest,
                                                                          Z1,
                                                                          Z2,
                                                                          F@_1,
                                                                          F@_2,
                                                                          F@_3,
                                                                          TrUserData);
dfp_read_field_def_CommandGetLastMessageIdResponse(<<>>,
                                                   0, 0, F@_1, F@_2, F@_3, _) ->
    S1 = #{request_id => F@_2},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{last_message_id => F@_1}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{consumer_mark_delete_position => F@_3}
    end;
dfp_read_field_def_CommandGetLastMessageIdResponse(Other,
                                                   Z1, Z2, F@_1, F@_2, F@_3,
                                                   TrUserData) ->
    dg_read_field_def_CommandGetLastMessageIdResponse(Other,
                                                      Z1,
                                                      Z2,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      TrUserData).

dg_read_field_def_CommandGetLastMessageIdResponse(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandGetLastMessageIdResponse(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      TrUserData);
dg_read_field_def_CommandGetLastMessageIdResponse(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_CommandGetLastMessageIdResponse_last_message_id(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    TrUserData);
        16 ->
            d_field_CommandGetLastMessageIdResponse_request_id(Rest,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               TrUserData);
        26 ->
            d_field_CommandGetLastMessageIdResponse_consumer_mark_delete_position(Rest,
                                                                                  0,
                                                                                  0,
                                                                                  F@_1,
                                                                                  F@_2,
                                                                                  F@_3,
                                                                                  TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandGetLastMessageIdResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                TrUserData);
                1 ->
                    skip_64_CommandGetLastMessageIdResponse(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            TrUserData);
                2 ->
                    skip_length_delimited_CommandGetLastMessageIdResponse(Rest,
                                                                          0,
                                                                          0,
                                                                          F@_1,
                                                                          F@_2,
                                                                          F@_3,
                                                                          TrUserData);
                3 ->
                    skip_group_CommandGetLastMessageIdResponse(Rest,
                                                               Key bsr 3,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               F@_3,
                                                               TrUserData);
                5 ->
                    skip_32_CommandGetLastMessageIdResponse(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            TrUserData)
            end
    end;
dg_read_field_def_CommandGetLastMessageIdResponse(<<>>,
                                                  0, 0, F@_1, F@_2, F@_3, _) ->
    S1 = #{request_id => F@_2},
    S2 = if F@_1 == '$undef' -> S1;
            true -> S1#{last_message_id => F@_1}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{consumer_mark_delete_position => F@_3}
    end.

d_field_CommandGetLastMessageIdResponse_last_message_id(<<1:1,
                                                          X:7, Rest/binary>>,
                                                        N, Acc, F@_1, F@_2,
                                                        F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandGetLastMessageIdResponse_last_message_id(Rest,
                                                            N + 7,
                                                            X bsl N + Acc,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            TrUserData);
d_field_CommandGetLastMessageIdResponse_last_message_id(<<0:1,
                                                          X:7, Rest/binary>>,
                                                        N, Acc, Prev, F@_2,
                                                        F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetLastMessageIdResponse(RestF,
                                                       0,
                                                       0,
                                                       if Prev == '$undef' ->
                                                              NewFValue;
                                                          true ->
                                                              merge_msg_MessageIdData(Prev,
                                                                                      NewFValue,
                                                                                      TrUserData)
                                                       end,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData).

d_field_CommandGetLastMessageIdResponse_request_id(<<1:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   TrUserData)
    when N < 57 ->
    d_field_CommandGetLastMessageIdResponse_request_id(Rest,
                                                       N + 7,
                                                       X bsl N + Acc,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData);
d_field_CommandGetLastMessageIdResponse_request_id(<<0:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, _, F@_3,
                                                   TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetLastMessageIdResponse(RestF,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       NewFValue,
                                                       F@_3,
                                                       TrUserData).

d_field_CommandGetLastMessageIdResponse_consumer_mark_delete_position(<<1:1,
                                                                        X:7,
                                                                        Rest/binary>>,
                                                                      N, Acc,
                                                                      F@_1,
                                                                      F@_2,
                                                                      F@_3,
                                                                      TrUserData)
    when N < 57 ->
    d_field_CommandGetLastMessageIdResponse_consumer_mark_delete_position(Rest,
                                                                          N + 7,
                                                                          X bsl
                                                                              N
                                                                              +
                                                                              Acc,
                                                                          F@_1,
                                                                          F@_2,
                                                                          F@_3,
                                                                          TrUserData);
d_field_CommandGetLastMessageIdResponse_consumer_mark_delete_position(<<0:1,
                                                                        X:7,
                                                                        Rest/binary>>,
                                                                      N, Acc,
                                                                      F@_1,
                                                                      F@_2,
                                                                      Prev,
                                                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetLastMessageIdResponse(RestF,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       if Prev == '$undef' ->
                                                              NewFValue;
                                                          true ->
                                                              merge_msg_MessageIdData(Prev,
                                                                                      NewFValue,
                                                                                      TrUserData)
                                                       end,
                                                       TrUserData).

skip_varint_CommandGetLastMessageIdResponse(<<1:1, _:7,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3,
                                            TrUserData) ->
    skip_varint_CommandGetLastMessageIdResponse(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
skip_varint_CommandGetLastMessageIdResponse(<<0:1, _:7,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3,
                                            TrUserData) ->
    dfp_read_field_def_CommandGetLastMessageIdResponse(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData).

skip_length_delimited_CommandGetLastMessageIdResponse(<<1:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandGetLastMessageIdResponse(Rest,
                                                          N + 7,
                                                          X bsl N + Acc,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          TrUserData);
skip_length_delimited_CommandGetLastMessageIdResponse(<<0:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandGetLastMessageIdResponse(Rest2,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData).

skip_group_CommandGetLastMessageIdResponse(Bin, FNum,
                                           Z2, F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandGetLastMessageIdResponse(Rest,
                                                       0,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData).

skip_32_CommandGetLastMessageIdResponse(<<_:32,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetLastMessageIdResponse(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData).

skip_64_CommandGetLastMessageIdResponse(<<_:64,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetLastMessageIdResponse(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       TrUserData).

decode_msg_CommandGetTopicsOfNamespace(Bin,
                                       TrUserData) ->
    dfp_read_field_def_CommandGetTopicsOfNamespace(Bin,
                                                   0,
                                                   0,
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   TrUserData).

dfp_read_field_def_CommandGetTopicsOfNamespace(<<8,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3,
                                               TrUserData) ->
    d_field_CommandGetTopicsOfNamespace_request_id(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData);
dfp_read_field_def_CommandGetTopicsOfNamespace(<<18,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3,
                                               TrUserData) ->
    d_field_CommandGetTopicsOfNamespace_namespace(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData);
dfp_read_field_def_CommandGetTopicsOfNamespace(<<24,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3,
                                               TrUserData) ->
    d_field_CommandGetTopicsOfNamespace_mode(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
dfp_read_field_def_CommandGetTopicsOfNamespace(<<>>, 0,
                                               0, F@_1, F@_2, F@_3, _) ->
    S1 = #{request_id => F@_1, namespace => F@_2},
    if F@_3 == '$undef' -> S1;
       true -> S1#{mode => F@_3}
    end;
dfp_read_field_def_CommandGetTopicsOfNamespace(Other,
                                               Z1, Z2, F@_1, F@_2, F@_3,
                                               TrUserData) ->
    dg_read_field_def_CommandGetTopicsOfNamespace(Other,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData).

dg_read_field_def_CommandGetTopicsOfNamespace(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3,
                                              TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandGetTopicsOfNamespace(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData);
dg_read_field_def_CommandGetTopicsOfNamespace(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3,
                                              TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandGetTopicsOfNamespace_request_id(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           TrUserData);
        18 ->
            d_field_CommandGetTopicsOfNamespace_namespace(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          TrUserData);
        24 ->
            d_field_CommandGetTopicsOfNamespace_mode(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandGetTopicsOfNamespace(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            TrUserData);
                1 ->
                    skip_64_CommandGetTopicsOfNamespace(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        TrUserData);
                2 ->
                    skip_length_delimited_CommandGetTopicsOfNamespace(Rest,
                                                                      0,
                                                                      0,
                                                                      F@_1,
                                                                      F@_2,
                                                                      F@_3,
                                                                      TrUserData);
                3 ->
                    skip_group_CommandGetTopicsOfNamespace(Rest,
                                                           Key bsr 3,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           TrUserData);
                5 ->
                    skip_32_CommandGetTopicsOfNamespace(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        TrUserData)
            end
    end;
dg_read_field_def_CommandGetTopicsOfNamespace(<<>>, 0,
                                              0, F@_1, F@_2, F@_3, _) ->
    S1 = #{request_id => F@_1, namespace => F@_2},
    if F@_3 == '$undef' -> S1;
       true -> S1#{mode => F@_3}
    end.

d_field_CommandGetTopicsOfNamespace_request_id(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3,
                                               TrUserData)
    when N < 57 ->
    d_field_CommandGetTopicsOfNamespace_request_id(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData);
d_field_CommandGetTopicsOfNamespace_request_id(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, _, F@_2, F@_3,
                                               TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetTopicsOfNamespace(RestF,
                                                   0,
                                                   0,
                                                   NewFValue,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData).

d_field_CommandGetTopicsOfNamespace_namespace(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3,
                                              TrUserData)
    when N < 57 ->
    d_field_CommandGetTopicsOfNamespace_namespace(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData);
d_field_CommandGetTopicsOfNamespace_namespace(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, _, F@_3,
                                              TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetTopicsOfNamespace(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   NewFValue,
                                                   F@_3,
                                                   TrUserData).

d_field_CommandGetTopicsOfNamespace_mode(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandGetTopicsOfNamespace_mode(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
d_field_CommandGetTopicsOfNamespace_mode(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} =
        {id('d_enum_CommandGetTopicsOfNamespace.Mode'(begin
                                                          <<Res:32/signed-native>> =
                                                              <<(X bsl N +
                                                                     Acc):32/unsigned-native>>,
                                                          id(Res, TrUserData)
                                                      end),
            TrUserData),
         Rest},
    dfp_read_field_def_CommandGetTopicsOfNamespace(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   NewFValue,
                                                   TrUserData).

skip_varint_CommandGetTopicsOfNamespace(<<1:1, _:7,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_CommandGetTopicsOfNamespace(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
skip_varint_CommandGetTopicsOfNamespace(<<0:1, _:7,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetTopicsOfNamespace(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData).

skip_length_delimited_CommandGetTopicsOfNamespace(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandGetTopicsOfNamespace(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      TrUserData);
skip_length_delimited_CommandGetTopicsOfNamespace(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandGetTopicsOfNamespace(Rest2,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData).

skip_group_CommandGetTopicsOfNamespace(Bin, FNum, Z2,
                                       F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandGetTopicsOfNamespace(Rest,
                                                   0,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData).

skip_32_CommandGetTopicsOfNamespace(<<_:32,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetTopicsOfNamespace(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData).

skip_64_CommandGetTopicsOfNamespace(<<_:64,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetTopicsOfNamespace(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData).

decode_msg_CommandGetTopicsOfNamespaceResponse(Bin,
                                               TrUserData) ->
    dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(Bin,
                                                           0,
                                                           0,
                                                           id('$undef',
                                                              TrUserData),
                                                           id([], TrUserData),
                                                           TrUserData).

dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(<<8,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2,
                                                       TrUserData) ->
    d_field_CommandGetTopicsOfNamespaceResponse_request_id(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           TrUserData);
dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(<<18,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2,
                                                       TrUserData) ->
    d_field_CommandGetTopicsOfNamespaceResponse_topics(Rest,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       TrUserData);
dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(<<>>,
                                                       0, 0, F@_1, R1,
                                                       TrUserData) ->
    #{request_id => F@_1,
      topics => lists_reverse(R1, TrUserData)};
dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(Other,
                                                       Z1, Z2, F@_1, F@_2,
                                                       TrUserData) ->
    dg_read_field_def_CommandGetTopicsOfNamespaceResponse(Other,
                                                          Z1,
                                                          Z2,
                                                          F@_1,
                                                          F@_2,
                                                          TrUserData).

dg_read_field_def_CommandGetTopicsOfNamespaceResponse(<<1:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2,
                                                      TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandGetTopicsOfNamespaceResponse(Rest,
                                                          N + 7,
                                                          X bsl N + Acc,
                                                          F@_1,
                                                          F@_2,
                                                          TrUserData);
dg_read_field_def_CommandGetTopicsOfNamespaceResponse(<<0:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2,
                                                      TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandGetTopicsOfNamespaceResponse_request_id(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   TrUserData);
        18 ->
            d_field_CommandGetTopicsOfNamespaceResponse_topics(Rest,
                                                               0,
                                                               0,
                                                               F@_1,
                                                               F@_2,
                                                               TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandGetTopicsOfNamespaceResponse(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    TrUserData);
                1 ->
                    skip_64_CommandGetTopicsOfNamespaceResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                TrUserData);
                2 ->
                    skip_length_delimited_CommandGetTopicsOfNamespaceResponse(Rest,
                                                                              0,
                                                                              0,
                                                                              F@_1,
                                                                              F@_2,
                                                                              TrUserData);
                3 ->
                    skip_group_CommandGetTopicsOfNamespaceResponse(Rest,
                                                                   Key bsr 3,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   TrUserData);
                5 ->
                    skip_32_CommandGetTopicsOfNamespaceResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                TrUserData)
            end
    end;
dg_read_field_def_CommandGetTopicsOfNamespaceResponse(<<>>,
                                                      0, 0, F@_1, R1,
                                                      TrUserData) ->
    #{request_id => F@_1,
      topics => lists_reverse(R1, TrUserData)}.

d_field_CommandGetTopicsOfNamespaceResponse_request_id(<<1:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2,
                                                       TrUserData)
    when N < 57 ->
    d_field_CommandGetTopicsOfNamespaceResponse_request_id(Rest,
                                                           N + 7,
                                                           X bsl N + Acc,
                                                           F@_1,
                                                           F@_2,
                                                           TrUserData);
d_field_CommandGetTopicsOfNamespaceResponse_request_id(<<0:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, _, F@_2,
                                                       TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(RestF,
                                                           0,
                                                           0,
                                                           NewFValue,
                                                           F@_2,
                                                           TrUserData).

d_field_CommandGetTopicsOfNamespaceResponse_topics(<<1:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2,
                                                   TrUserData)
    when N < 57 ->
    d_field_CommandGetTopicsOfNamespaceResponse_topics(Rest,
                                                       N + 7,
                                                       X bsl N + Acc,
                                                       F@_1,
                                                       F@_2,
                                                       TrUserData);
d_field_CommandGetTopicsOfNamespaceResponse_topics(<<0:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, Prev,
                                                   TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           cons(NewFValue,
                                                                Prev,
                                                                TrUserData),
                                                           TrUserData).

skip_varint_CommandGetTopicsOfNamespaceResponse(<<1:1,
                                                  _:7, Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2,
                                                TrUserData) ->
    skip_varint_CommandGetTopicsOfNamespaceResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    TrUserData);
skip_varint_CommandGetTopicsOfNamespaceResponse(<<0:1,
                                                  _:7, Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2,
                                                TrUserData) ->
    dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           TrUserData).

skip_length_delimited_CommandGetTopicsOfNamespaceResponse(<<1:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandGetTopicsOfNamespaceResponse(Rest,
                                                              N + 7,
                                                              X bsl N + Acc,
                                                              F@_1,
                                                              F@_2,
                                                              TrUserData);
skip_length_delimited_CommandGetTopicsOfNamespaceResponse(<<0:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(Rest2,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           TrUserData).

skip_group_CommandGetTopicsOfNamespaceResponse(Bin,
                                               FNum, Z2, F@_1, F@_2,
                                               TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(Rest,
                                                           0,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           TrUserData).

skip_32_CommandGetTopicsOfNamespaceResponse(<<_:32,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           TrUserData).

skip_64_CommandGetTopicsOfNamespaceResponse(<<_:64,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_CommandGetTopicsOfNamespaceResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           TrUserData).

decode_msg_CommandGetSchema(Bin, TrUserData) ->
    dfp_read_field_def_CommandGetSchema(Bin,
                                        0,
                                        0,
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        id('$undef', TrUserData),
                                        TrUserData).

dfp_read_field_def_CommandGetSchema(<<8, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandGetSchema_request_id(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData);
dfp_read_field_def_CommandGetSchema(<<18, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandGetSchema_topic(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   TrUserData);
dfp_read_field_def_CommandGetSchema(<<26, Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandGetSchema_schema_version(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
dfp_read_field_def_CommandGetSchema(<<>>, 0, 0, F@_1,
                                    F@_2, F@_3, _) ->
    S1 = #{request_id => F@_1, topic => F@_2},
    if F@_3 == '$undef' -> S1;
       true -> S1#{schema_version => F@_3}
    end;
dfp_read_field_def_CommandGetSchema(Other, Z1, Z2, F@_1,
                                    F@_2, F@_3, TrUserData) ->
    dg_read_field_def_CommandGetSchema(Other,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       TrUserData).

dg_read_field_def_CommandGetSchema(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandGetSchema(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       TrUserData);
dg_read_field_def_CommandGetSchema(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandGetSchema_request_id(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
        18 ->
            d_field_CommandGetSchema_topic(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
        26 ->
            d_field_CommandGetSchema_schema_version(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandGetSchema(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 TrUserData);
                1 ->
                    skip_64_CommandGetSchema(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
                2 ->
                    skip_length_delimited_CommandGetSchema(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           TrUserData);
                3 ->
                    skip_group_CommandGetSchema(Rest,
                                                Key bsr 3,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
                5 ->
                    skip_32_CommandGetSchema(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData)
            end
    end;
dg_read_field_def_CommandGetSchema(<<>>, 0, 0, F@_1,
                                   F@_2, F@_3, _) ->
    S1 = #{request_id => F@_1, topic => F@_2},
    if F@_3 == '$undef' -> S1;
       true -> S1#{schema_version => F@_3}
    end.

d_field_CommandGetSchema_request_id(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandGetSchema_request_id(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData);
d_field_CommandGetSchema_request_id(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetSchema(RestF,
                                        0,
                                        0,
                                        NewFValue,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

d_field_CommandGetSchema_topic(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandGetSchema_topic(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   TrUserData);
d_field_CommandGetSchema_topic(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetSchema(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        NewFValue,
                                        F@_3,
                                        TrUserData).

d_field_CommandGetSchema_schema_version(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandGetSchema_schema_version(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
d_field_CommandGetSchema_schema_version(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_CommandGetSchema(RestF,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        NewFValue,
                                        TrUserData).

skip_varint_CommandGetSchema(<<1:1, _:7, Rest/binary>>,
                             Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_CommandGetSchema(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 TrUserData);
skip_varint_CommandGetSchema(<<0:1, _:7, Rest/binary>>,
                             Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetSchema(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

skip_length_delimited_CommandGetSchema(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandGetSchema(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
skip_length_delimited_CommandGetSchema(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandGetSchema(Rest2,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

skip_group_CommandGetSchema(Bin, FNum, Z2, F@_1, F@_2,
                            F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandGetSchema(Rest,
                                        0,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

skip_32_CommandGetSchema(<<_:32, Rest/binary>>, Z1, Z2,
                         F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetSchema(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

skip_64_CommandGetSchema(<<_:64, Rest/binary>>, Z1, Z2,
                         F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetSchema(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData).

decode_msg_CommandGetSchemaResponse(Bin, TrUserData) ->
    dfp_read_field_def_CommandGetSchemaResponse(Bin,
                                                0,
                                                0,
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                TrUserData).

dfp_read_field_def_CommandGetSchemaResponse(<<8,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    d_field_CommandGetSchemaResponse_request_id(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
dfp_read_field_def_CommandGetSchemaResponse(<<16,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    d_field_CommandGetSchemaResponse_error_code(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
dfp_read_field_def_CommandGetSchemaResponse(<<26,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    d_field_CommandGetSchemaResponse_error_message(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
dfp_read_field_def_CommandGetSchemaResponse(<<34,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    d_field_CommandGetSchemaResponse_schema(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            TrUserData);
dfp_read_field_def_CommandGetSchemaResponse(<<42,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    d_field_CommandGetSchemaResponse_schema_version(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    TrUserData);
dfp_read_field_def_CommandGetSchemaResponse(<<>>, 0, 0,
                                            F@_1, F@_2, F@_3, F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{error_code => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{error_message => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{schema => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{schema_version => F@_5}
    end;
dfp_read_field_def_CommandGetSchemaResponse(Other, Z1,
                                            Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                            TrUserData) ->
    dg_read_field_def_CommandGetSchemaResponse(Other,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               TrUserData).

dg_read_field_def_CommandGetSchemaResponse(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandGetSchemaResponse(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               TrUserData);
dg_read_field_def_CommandGetSchemaResponse(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandGetSchemaResponse_request_id(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
        16 ->
            d_field_CommandGetSchemaResponse_error_code(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
        26 ->
            d_field_CommandGetSchemaResponse_error_message(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
        34 ->
            d_field_CommandGetSchemaResponse_schema(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    TrUserData);
        42 ->
            d_field_CommandGetSchemaResponse_schema_version(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandGetSchemaResponse(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         TrUserData);
                1 ->
                    skip_64_CommandGetSchemaResponse(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
                2 ->
                    skip_length_delimited_CommandGetSchemaResponse(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   F@_5,
                                                                   TrUserData);
                3 ->
                    skip_group_CommandGetSchemaResponse(Rest,
                                                        Key bsr 3,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
                5 ->
                    skip_32_CommandGetSchemaResponse(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData)
            end
    end;
dg_read_field_def_CommandGetSchemaResponse(<<>>, 0, 0,
                                           F@_1, F@_2, F@_3, F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{error_code => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{error_message => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{schema => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{schema_version => F@_5}
    end.

d_field_CommandGetSchemaResponse_request_id(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandGetSchemaResponse_request_id(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
d_field_CommandGetSchemaResponse_request_id(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, _, F@_2, F@_3, F@_4, F@_5,
                                            TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetSchemaResponse(RestF,
                                                0,
                                                0,
                                                NewFValue,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData).

d_field_CommandGetSchemaResponse_error_code(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandGetSchemaResponse_error_code(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
d_field_CommandGetSchemaResponse_error_code(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, _, F@_3, F@_4, F@_5,
                                            TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetSchemaResponse(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                NewFValue,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData).

d_field_CommandGetSchemaResponse_error_message(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandGetSchemaResponse_error_message(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
d_field_CommandGetSchemaResponse_error_message(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, _, F@_4,
                                               F@_5, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetSchemaResponse(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                NewFValue,
                                                F@_4,
                                                F@_5,
                                                TrUserData).

d_field_CommandGetSchemaResponse_schema(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData)
    when N < 57 ->
    d_field_CommandGetSchemaResponse_schema(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            TrUserData);
d_field_CommandGetSchemaResponse_schema(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, Prev, F@_5,
                                        TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_Schema(Bs, TrUserData), TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetSchemaResponse(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                if Prev == '$undef' ->
                                                       NewFValue;
                                                   true ->
                                                       merge_msg_Schema(Prev,
                                                                        NewFValue,
                                                                        TrUserData)
                                                end,
                                                F@_5,
                                                TrUserData).

d_field_CommandGetSchemaResponse_schema_version(<<1:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandGetSchemaResponse_schema_version(Rest,
                                                    N + 7,
                                                    X bsl N + Acc,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    TrUserData);
d_field_CommandGetSchemaResponse_schema_version(<<0:1,
                                                  X:7, Rest/binary>>,
                                                N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_CommandGetSchemaResponse(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                NewFValue,
                                                TrUserData).

skip_varint_CommandGetSchemaResponse(<<1:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                     TrUserData) ->
    skip_varint_CommandGetSchemaResponse(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         TrUserData);
skip_varint_CommandGetSchemaResponse(<<0:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                     TrUserData) ->
    dfp_read_field_def_CommandGetSchemaResponse(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData).

skip_length_delimited_CommandGetSchemaResponse(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandGetSchemaResponse(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
skip_length_delimited_CommandGetSchemaResponse(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandGetSchemaResponse(Rest2,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData).

skip_group_CommandGetSchemaResponse(Bin, FNum, Z2, F@_1,
                                    F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandGetSchemaResponse(Rest,
                                                0,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData).

skip_32_CommandGetSchemaResponse(<<_:32, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData) ->
    dfp_read_field_def_CommandGetSchemaResponse(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData).

skip_64_CommandGetSchemaResponse(<<_:64, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData) ->
    dfp_read_field_def_CommandGetSchemaResponse(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData).

decode_msg_CommandGetOrCreateSchema(Bin, TrUserData) ->
    dfp_read_field_def_CommandGetOrCreateSchema(Bin,
                                                0,
                                                0,
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                TrUserData).

dfp_read_field_def_CommandGetOrCreateSchema(<<8,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3,
                                            TrUserData) ->
    d_field_CommandGetOrCreateSchema_request_id(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
dfp_read_field_def_CommandGetOrCreateSchema(<<18,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3,
                                            TrUserData) ->
    d_field_CommandGetOrCreateSchema_topic(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
dfp_read_field_def_CommandGetOrCreateSchema(<<26,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3,
                                            TrUserData) ->
    d_field_CommandGetOrCreateSchema_schema(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
dfp_read_field_def_CommandGetOrCreateSchema(<<>>, 0, 0,
                                            F@_1, F@_2, F@_3, _) ->
    S1 = #{request_id => F@_1, topic => F@_2},
    if F@_3 == '$undef' -> S1;
       true -> S1#{schema => F@_3}
    end;
dfp_read_field_def_CommandGetOrCreateSchema(Other, Z1,
                                            Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dg_read_field_def_CommandGetOrCreateSchema(Other,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               TrUserData).

dg_read_field_def_CommandGetOrCreateSchema(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandGetOrCreateSchema(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               TrUserData);
dg_read_field_def_CommandGetOrCreateSchema(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3,
                                           TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandGetOrCreateSchema_request_id(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        TrUserData);
        18 ->
            d_field_CommandGetOrCreateSchema_topic(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData);
        26 ->
            d_field_CommandGetOrCreateSchema_schema(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandGetOrCreateSchema(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         TrUserData);
                1 ->
                    skip_64_CommandGetOrCreateSchema(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     TrUserData);
                2 ->
                    skip_length_delimited_CommandGetOrCreateSchema(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   TrUserData);
                3 ->
                    skip_group_CommandGetOrCreateSchema(Rest,
                                                        Key bsr 3,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        TrUserData);
                5 ->
                    skip_32_CommandGetOrCreateSchema(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     TrUserData)
            end
    end;
dg_read_field_def_CommandGetOrCreateSchema(<<>>, 0, 0,
                                           F@_1, F@_2, F@_3, _) ->
    S1 = #{request_id => F@_1, topic => F@_2},
    if F@_3 == '$undef' -> S1;
       true -> S1#{schema => F@_3}
    end.

d_field_CommandGetOrCreateSchema_request_id(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3,
                                            TrUserData)
    when N < 57 ->
    d_field_CommandGetOrCreateSchema_request_id(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData);
d_field_CommandGetOrCreateSchema_request_id(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, _, F@_2, F@_3,
                                            TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetOrCreateSchema(RestF,
                                                0,
                                                0,
                                                NewFValue,
                                                F@_2,
                                                F@_3,
                                                TrUserData).

d_field_CommandGetOrCreateSchema_topic(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandGetOrCreateSchema_topic(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           TrUserData);
d_field_CommandGetOrCreateSchema_topic(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetOrCreateSchema(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                NewFValue,
                                                F@_3,
                                                TrUserData).

d_field_CommandGetOrCreateSchema_schema(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandGetOrCreateSchema_schema(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            TrUserData);
d_field_CommandGetOrCreateSchema_schema(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, Prev, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_Schema(Bs, TrUserData), TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetOrCreateSchema(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                if Prev == '$undef' ->
                                                       NewFValue;
                                                   true ->
                                                       merge_msg_Schema(Prev,
                                                                        NewFValue,
                                                                        TrUserData)
                                                end,
                                                TrUserData).

skip_varint_CommandGetOrCreateSchema(<<1:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_CommandGetOrCreateSchema(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         TrUserData);
skip_varint_CommandGetOrCreateSchema(<<0:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetOrCreateSchema(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData).

skip_length_delimited_CommandGetOrCreateSchema(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3,
                                               TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandGetOrCreateSchema(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   TrUserData);
skip_length_delimited_CommandGetOrCreateSchema(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3,
                                               TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandGetOrCreateSchema(Rest2,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData).

skip_group_CommandGetOrCreateSchema(Bin, FNum, Z2, F@_1,
                                    F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandGetOrCreateSchema(Rest,
                                                0,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData).

skip_32_CommandGetOrCreateSchema(<<_:32, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetOrCreateSchema(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData).

skip_64_CommandGetOrCreateSchema(<<_:64, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandGetOrCreateSchema(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                TrUserData).

decode_msg_CommandGetOrCreateSchemaResponse(Bin,
                                            TrUserData) ->
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(Bin,
                                                        0,
                                                        0,
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        TrUserData).

dfp_read_field_def_CommandGetOrCreateSchemaResponse(<<8,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, TrUserData) ->
    d_field_CommandGetOrCreateSchemaResponse_request_id(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
dfp_read_field_def_CommandGetOrCreateSchemaResponse(<<16,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, TrUserData) ->
    d_field_CommandGetOrCreateSchemaResponse_error_code(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
dfp_read_field_def_CommandGetOrCreateSchemaResponse(<<26,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, TrUserData) ->
    d_field_CommandGetOrCreateSchemaResponse_error_message(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           TrUserData);
dfp_read_field_def_CommandGetOrCreateSchemaResponse(<<34,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, TrUserData) ->
    d_field_CommandGetOrCreateSchemaResponse_schema_version(Rest,
                                                            Z1,
                                                            Z2,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            TrUserData);
dfp_read_field_def_CommandGetOrCreateSchemaResponse(<<>>,
                                                    0, 0, F@_1, F@_2, F@_3,
                                                    F@_4, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{error_code => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{error_message => F@_3}
         end,
    if F@_4 == '$undef' -> S3;
       true -> S3#{schema_version => F@_4}
    end;
dfp_read_field_def_CommandGetOrCreateSchemaResponse(Other,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, TrUserData) ->
    dg_read_field_def_CommandGetOrCreateSchemaResponse(Other,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       TrUserData).

dg_read_field_def_CommandGetOrCreateSchemaResponse(<<1:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandGetOrCreateSchemaResponse(Rest,
                                                       N + 7,
                                                       X bsl N + Acc,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       TrUserData);
dg_read_field_def_CommandGetOrCreateSchemaResponse(<<0:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandGetOrCreateSchemaResponse_request_id(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                TrUserData);
        16 ->
            d_field_CommandGetOrCreateSchemaResponse_error_code(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                TrUserData);
        26 ->
            d_field_CommandGetOrCreateSchemaResponse_error_message(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   TrUserData);
        34 ->
            d_field_CommandGetOrCreateSchemaResponse_schema_version(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandGetOrCreateSchemaResponse(Rest,
                                                                 0,
                                                                 0,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 TrUserData);
                1 ->
                    skip_64_CommandGetOrCreateSchemaResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             TrUserData);
                2 ->
                    skip_length_delimited_CommandGetOrCreateSchemaResponse(Rest,
                                                                           0,
                                                                           0,
                                                                           F@_1,
                                                                           F@_2,
                                                                           F@_3,
                                                                           F@_4,
                                                                           TrUserData);
                3 ->
                    skip_group_CommandGetOrCreateSchemaResponse(Rest,
                                                                Key bsr 3,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                TrUserData);
                5 ->
                    skip_32_CommandGetOrCreateSchemaResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             TrUserData)
            end
    end;
dg_read_field_def_CommandGetOrCreateSchemaResponse(<<>>,
                                                   0, 0, F@_1, F@_2, F@_3, F@_4,
                                                   _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{error_code => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{error_message => F@_3}
         end,
    if F@_4 == '$undef' -> S3;
       true -> S3#{schema_version => F@_4}
    end.

d_field_CommandGetOrCreateSchemaResponse_request_id(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandGetOrCreateSchemaResponse_request_id(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
d_field_CommandGetOrCreateSchemaResponse_request_id(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, _, F@_2, F@_3, F@_4,
                                                    TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(RestF,
                                                        0,
                                                        0,
                                                        NewFValue,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData).

d_field_CommandGetOrCreateSchemaResponse_error_code(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandGetOrCreateSchemaResponse_error_code(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
d_field_CommandGetOrCreateSchemaResponse_error_code(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, _, F@_3, F@_4,
                                                    TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        NewFValue,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData).

d_field_CommandGetOrCreateSchemaResponse_error_message(<<1:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandGetOrCreateSchemaResponse_error_message(Rest,
                                                           N + 7,
                                                           X bsl N + Acc,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           TrUserData);
d_field_CommandGetOrCreateSchemaResponse_error_message(<<0:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, _,
                                                       F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        NewFValue,
                                                        F@_4,
                                                        TrUserData).

d_field_CommandGetOrCreateSchemaResponse_schema_version(<<1:1,
                                                          X:7, Rest/binary>>,
                                                        N, Acc, F@_1, F@_2,
                                                        F@_3, F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandGetOrCreateSchemaResponse_schema_version(Rest,
                                                            N + 7,
                                                            X bsl N + Acc,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            TrUserData);
d_field_CommandGetOrCreateSchemaResponse_schema_version(<<0:1,
                                                          X:7, Rest/binary>>,
                                                        N, Acc, F@_1, F@_2,
                                                        F@_3, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bytes:Len/binary, Rest2/binary>> = Rest,
                             {id(binary:copy(Bytes), TrUserData), Rest2}
                         end,
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        NewFValue,
                                                        TrUserData).

skip_varint_CommandGetOrCreateSchemaResponse(<<1:1, _:7,
                                               Rest/binary>>,
                                             Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                             TrUserData) ->
    skip_varint_CommandGetOrCreateSchemaResponse(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 TrUserData);
skip_varint_CommandGetOrCreateSchemaResponse(<<0:1, _:7,
                                               Rest/binary>>,
                                             Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                             TrUserData) ->
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData).

skip_length_delimited_CommandGetOrCreateSchemaResponse(<<1:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandGetOrCreateSchemaResponse(Rest,
                                                           N + 7,
                                                           X bsl N + Acc,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           TrUserData);
skip_length_delimited_CommandGetOrCreateSchemaResponse(<<0:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(Rest2,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData).

skip_group_CommandGetOrCreateSchemaResponse(Bin, FNum,
                                            Z2, F@_1, F@_2, F@_3, F@_4,
                                            TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(Rest,
                                                        0,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData).

skip_32_CommandGetOrCreateSchemaResponse(<<_:32,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                         TrUserData) ->
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData).

skip_64_CommandGetOrCreateSchemaResponse(<<_:64,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                         TrUserData) ->
    dfp_read_field_def_CommandGetOrCreateSchemaResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData).

decode_msg_CommandNewTxn(Bin, TrUserData) ->
    dfp_read_field_def_CommandNewTxn(Bin,
                                     0,
                                     0,
                                     id('$undef', TrUserData),
                                     id('$undef', TrUserData),
                                     id('$undef', TrUserData),
                                     TrUserData).

dfp_read_field_def_CommandNewTxn(<<8, Rest/binary>>, Z1,
                                 Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandNewTxn_request_id(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData);
dfp_read_field_def_CommandNewTxn(<<16, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandNewTxn_txn_ttl_seconds(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          TrUserData);
dfp_read_field_def_CommandNewTxn(<<24, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, TrUserData) ->
    d_field_CommandNewTxn_tc_id(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                F@_3,
                                TrUserData);
dfp_read_field_def_CommandNewTxn(<<>>, 0, 0, F@_1, F@_2,
                                 F@_3, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txn_ttl_seconds => F@_2}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{tc_id => F@_3}
    end;
dfp_read_field_def_CommandNewTxn(Other, Z1, Z2, F@_1,
                                 F@_2, F@_3, TrUserData) ->
    dg_read_field_def_CommandNewTxn(Other,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData).

dg_read_field_def_CommandNewTxn(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandNewTxn(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    TrUserData);
dg_read_field_def_CommandNewTxn(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandNewTxn_request_id(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
        16 ->
            d_field_CommandNewTxn_txn_ttl_seconds(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  TrUserData);
        24 ->
            d_field_CommandNewTxn_tc_id(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandNewTxn(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              TrUserData);
                1 ->
                    skip_64_CommandNewTxn(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          TrUserData);
                2 ->
                    skip_length_delimited_CommandNewTxn(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        TrUserData);
                3 ->
                    skip_group_CommandNewTxn(Rest,
                                             Key bsr 3,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             TrUserData);
                5 ->
                    skip_32_CommandNewTxn(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          TrUserData)
            end
    end;
dg_read_field_def_CommandNewTxn(<<>>, 0, 0, F@_1, F@_2,
                                F@_3, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txn_ttl_seconds => F@_2}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{tc_id => F@_3}
    end.

d_field_CommandNewTxn_request_id(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandNewTxn_request_id(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData);
d_field_CommandNewTxn_request_id(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandNewTxn(RestF,
                                     0,
                                     0,
                                     NewFValue,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

d_field_CommandNewTxn_txn_ttl_seconds(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandNewTxn_txn_ttl_seconds(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          TrUserData);
d_field_CommandNewTxn_txn_ttl_seconds(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandNewTxn(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     NewFValue,
                                     F@_3,
                                     TrUserData).

d_field_CommandNewTxn_tc_id(<<1:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    d_field_CommandNewTxn_tc_id(Rest,
                                N + 7,
                                X bsl N + Acc,
                                F@_1,
                                F@_2,
                                F@_3,
                                TrUserData);
d_field_CommandNewTxn_tc_id(<<0:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandNewTxn(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     NewFValue,
                                     TrUserData).

skip_varint_CommandNewTxn(<<1:1, _:7, Rest/binary>>, Z1,
                          Z2, F@_1, F@_2, F@_3, TrUserData) ->
    skip_varint_CommandNewTxn(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              TrUserData);
skip_varint_CommandNewTxn(<<0:1, _:7, Rest/binary>>, Z1,
                          Z2, F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandNewTxn(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

skip_length_delimited_CommandNewTxn(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandNewTxn(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        TrUserData);
skip_length_delimited_CommandNewTxn(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandNewTxn(Rest2,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

skip_group_CommandNewTxn(Bin, FNum, Z2, F@_1, F@_2,
                         F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandNewTxn(Rest,
                                     0,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

skip_32_CommandNewTxn(<<_:32, Rest/binary>>, Z1, Z2,
                      F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandNewTxn(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

skip_64_CommandNewTxn(<<_:64, Rest/binary>>, Z1, Z2,
                      F@_1, F@_2, F@_3, TrUserData) ->
    dfp_read_field_def_CommandNewTxn(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     TrUserData).

decode_msg_CommandNewTxnResponse(Bin, TrUserData) ->
    dfp_read_field_def_CommandNewTxnResponse(Bin,
                                             0,
                                             0,
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             TrUserData).

dfp_read_field_def_CommandNewTxnResponse(<<8,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandNewTxnResponse_request_id(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData);
dfp_read_field_def_CommandNewTxnResponse(<<16,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandNewTxnResponse_txnid_least_bits(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
dfp_read_field_def_CommandNewTxnResponse(<<24,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandNewTxnResponse_txnid_most_bits(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
dfp_read_field_def_CommandNewTxnResponse(<<32,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandNewTxnResponse_error(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        TrUserData);
dfp_read_field_def_CommandNewTxnResponse(<<42,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandNewTxnResponse_message(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          TrUserData);
dfp_read_field_def_CommandNewTxnResponse(<<>>, 0, 0,
                                         F@_1, F@_2, F@_3, F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end;
dfp_read_field_def_CommandNewTxnResponse(Other, Z1, Z2,
                                         F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    dg_read_field_def_CommandNewTxnResponse(Other,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            TrUserData).

dg_read_field_def_CommandNewTxnResponse(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandNewTxnResponse(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            TrUserData);
dg_read_field_def_CommandNewTxnResponse(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandNewTxnResponse_request_id(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
        16 ->
            d_field_CommandNewTxnResponse_txnid_least_bits(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
        24 ->
            d_field_CommandNewTxnResponse_txnid_most_bits(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData);
        32 ->
            d_field_CommandNewTxnResponse_error(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
        42 ->
            d_field_CommandNewTxnResponse_message(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandNewTxnResponse(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData);
                1 ->
                    skip_64_CommandNewTxnResponse(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
                2 ->
                    skip_length_delimited_CommandNewTxnResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
                3 ->
                    skip_group_CommandNewTxnResponse(Rest,
                                                     Key bsr 3,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
                5 ->
                    skip_32_CommandNewTxnResponse(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData)
            end
    end;
dg_read_field_def_CommandNewTxnResponse(<<>>, 0, 0,
                                        F@_1, F@_2, F@_3, F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end.

d_field_CommandNewTxnResponse_request_id(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData)
    when N < 57 ->
    d_field_CommandNewTxnResponse_request_id(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData);
d_field_CommandNewTxnResponse_request_id(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, _, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandNewTxnResponse(RestF,
                                             0,
                                             0,
                                             NewFValue,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

d_field_CommandNewTxnResponse_txnid_least_bits(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandNewTxnResponse_txnid_least_bits(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
d_field_CommandNewTxnResponse_txnid_least_bits(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, _, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandNewTxnResponse(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             NewFValue,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

d_field_CommandNewTxnResponse_txnid_most_bits(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandNewTxnResponse_txnid_most_bits(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
d_field_CommandNewTxnResponse_txnid_most_bits(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, _, F@_4, F@_5,
                                              TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandNewTxnResponse(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             NewFValue,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

d_field_CommandNewTxnResponse_error(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                    TrUserData)
    when N < 57 ->
    d_field_CommandNewTxnResponse_error(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        TrUserData);
d_field_CommandNewTxnResponse_error(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, _, F@_5,
                                    TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandNewTxnResponse(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             NewFValue,
                                             F@_5,
                                             TrUserData).

d_field_CommandNewTxnResponse_message(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      TrUserData)
    when N < 57 ->
    d_field_CommandNewTxnResponse_message(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          TrUserData);
d_field_CommandNewTxnResponse_message(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, _,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandNewTxnResponse(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             NewFValue,
                                             TrUserData).

skip_varint_CommandNewTxnResponse(<<1:1, _:7,
                                    Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                  TrUserData) ->
    skip_varint_CommandNewTxnResponse(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      TrUserData);
skip_varint_CommandNewTxnResponse(<<0:1, _:7,
                                    Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                  TrUserData) ->
    dfp_read_field_def_CommandNewTxnResponse(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

skip_length_delimited_CommandNewTxnResponse(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandNewTxnResponse(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
skip_length_delimited_CommandNewTxnResponse(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandNewTxnResponse(Rest2,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

skip_group_CommandNewTxnResponse(Bin, FNum, Z2, F@_1,
                                 F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandNewTxnResponse(Rest,
                                             0,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

skip_32_CommandNewTxnResponse(<<_:32, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    dfp_read_field_def_CommandNewTxnResponse(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

skip_64_CommandNewTxnResponse(<<_:64, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    dfp_read_field_def_CommandNewTxnResponse(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

decode_msg_CommandAddPartitionToTxn(Bin, TrUserData) ->
    dfp_read_field_def_CommandAddPartitionToTxn(Bin,
                                                0,
                                                0,
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id([], TrUserData),
                                                TrUserData).

dfp_read_field_def_CommandAddPartitionToTxn(<<8,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            TrUserData) ->
    d_field_CommandAddPartitionToTxn_request_id(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData);
dfp_read_field_def_CommandAddPartitionToTxn(<<16,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            TrUserData) ->
    d_field_CommandAddPartitionToTxn_txnid_least_bits(Rest,
                                                      Z1,
                                                      Z2,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      TrUserData);
dfp_read_field_def_CommandAddPartitionToTxn(<<24,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            TrUserData) ->
    d_field_CommandAddPartitionToTxn_txnid_most_bits(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     TrUserData);
dfp_read_field_def_CommandAddPartitionToTxn(<<34,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            TrUserData) ->
    d_field_CommandAddPartitionToTxn_partitions(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData);
dfp_read_field_def_CommandAddPartitionToTxn(<<>>, 0, 0,
                                            F@_1, F@_2, F@_3, R1, TrUserData) ->
    S1 = #{request_id => F@_1,
           partitions => lists_reverse(R1, TrUserData)},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{txnid_most_bits => F@_3}
    end;
dfp_read_field_def_CommandAddPartitionToTxn(Other, Z1,
                                            Z2, F@_1, F@_2, F@_3, F@_4,
                                            TrUserData) ->
    dg_read_field_def_CommandAddPartitionToTxn(Other,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               TrUserData).

dg_read_field_def_CommandAddPartitionToTxn(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4,
                                           TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandAddPartitionToTxn(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               TrUserData);
dg_read_field_def_CommandAddPartitionToTxn(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4,
                                           TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandAddPartitionToTxn_request_id(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
        16 ->
            d_field_CommandAddPartitionToTxn_txnid_least_bits(Rest,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              TrUserData);
        24 ->
            d_field_CommandAddPartitionToTxn_txnid_most_bits(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             TrUserData);
        34 ->
            d_field_CommandAddPartitionToTxn_partitions(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandAddPartitionToTxn(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         TrUserData);
                1 ->
                    skip_64_CommandAddPartitionToTxn(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     TrUserData);
                2 ->
                    skip_length_delimited_CommandAddPartitionToTxn(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   TrUserData);
                3 ->
                    skip_group_CommandAddPartitionToTxn(Rest,
                                                        Key bsr 3,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
                5 ->
                    skip_32_CommandAddPartitionToTxn(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     TrUserData)
            end
    end;
dg_read_field_def_CommandAddPartitionToTxn(<<>>, 0, 0,
                                           F@_1, F@_2, F@_3, R1, TrUserData) ->
    S1 = #{request_id => F@_1,
           partitions => lists_reverse(R1, TrUserData)},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    if F@_3 == '$undef' -> S2;
       true -> S2#{txnid_most_bits => F@_3}
    end.

d_field_CommandAddPartitionToTxn_request_id(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxn_request_id(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData);
d_field_CommandAddPartitionToTxn_request_id(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, _, F@_2, F@_3, F@_4,
                                            TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddPartitionToTxn(RestF,
                                                0,
                                                0,
                                                NewFValue,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData).

d_field_CommandAddPartitionToTxn_txnid_least_bits(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxn_txnid_least_bits(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      TrUserData);
d_field_CommandAddPartitionToTxn_txnid_least_bits(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, _, F@_3, F@_4,
                                                  TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddPartitionToTxn(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                NewFValue,
                                                F@_3,
                                                F@_4,
                                                TrUserData).

d_field_CommandAddPartitionToTxn_txnid_most_bits(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxn_txnid_most_bits(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     TrUserData);
d_field_CommandAddPartitionToTxn_txnid_most_bits(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, _, F@_4,
                                                 TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddPartitionToTxn(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                NewFValue,
                                                F@_4,
                                                TrUserData).

d_field_CommandAddPartitionToTxn_partitions(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxn_partitions(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData);
d_field_CommandAddPartitionToTxn_partitions(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, Prev,
                                            TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAddPartitionToTxn(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                cons(NewFValue,
                                                     Prev,
                                                     TrUserData),
                                                TrUserData).

skip_varint_CommandAddPartitionToTxn(<<1:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                     TrUserData) ->
    skip_varint_CommandAddPartitionToTxn(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         TrUserData);
skip_varint_CommandAddPartitionToTxn(<<0:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                     TrUserData) ->
    dfp_read_field_def_CommandAddPartitionToTxn(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData).

skip_length_delimited_CommandAddPartitionToTxn(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandAddPartitionToTxn(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
skip_length_delimited_CommandAddPartitionToTxn(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandAddPartitionToTxn(Rest2,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData).

skip_group_CommandAddPartitionToTxn(Bin, FNum, Z2, F@_1,
                                    F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandAddPartitionToTxn(Rest,
                                                0,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData).

skip_32_CommandAddPartitionToTxn(<<_:32, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandAddPartitionToTxn(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData).

skip_64_CommandAddPartitionToTxn(<<_:64, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    dfp_read_field_def_CommandAddPartitionToTxn(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                TrUserData).

decode_msg_CommandAddPartitionToTxnResponse(Bin,
                                            TrUserData) ->
    dfp_read_field_def_CommandAddPartitionToTxnResponse(Bin,
                                                        0,
                                                        0,
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        TrUserData).

dfp_read_field_def_CommandAddPartitionToTxnResponse(<<8,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandAddPartitionToTxnResponse_request_id(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
dfp_read_field_def_CommandAddPartitionToTxnResponse(<<16,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandAddPartitionToTxnResponse_txnid_least_bits(Rest,
                                                              Z1,
                                                              Z2,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
dfp_read_field_def_CommandAddPartitionToTxnResponse(<<24,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandAddPartitionToTxnResponse_txnid_most_bits(Rest,
                                                             Z1,
                                                             Z2,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
dfp_read_field_def_CommandAddPartitionToTxnResponse(<<32,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandAddPartitionToTxnResponse_error(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
dfp_read_field_def_CommandAddPartitionToTxnResponse(<<42,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandAddPartitionToTxnResponse_message(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
dfp_read_field_def_CommandAddPartitionToTxnResponse(<<>>,
                                                    0, 0, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end;
dfp_read_field_def_CommandAddPartitionToTxnResponse(Other,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    dg_read_field_def_CommandAddPartitionToTxnResponse(Other,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

dg_read_field_def_CommandAddPartitionToTxnResponse(<<1:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandAddPartitionToTxnResponse(Rest,
                                                       N + 7,
                                                       X bsl N + Acc,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData);
dg_read_field_def_CommandAddPartitionToTxnResponse(<<0:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandAddPartitionToTxnResponse_request_id(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
        16 ->
            d_field_CommandAddPartitionToTxnResponse_txnid_least_bits(Rest,
                                                                      0,
                                                                      0,
                                                                      F@_1,
                                                                      F@_2,
                                                                      F@_3,
                                                                      F@_4,
                                                                      F@_5,
                                                                      TrUserData);
        24 ->
            d_field_CommandAddPartitionToTxnResponse_txnid_most_bits(Rest,
                                                                     0,
                                                                     0,
                                                                     F@_1,
                                                                     F@_2,
                                                                     F@_3,
                                                                     F@_4,
                                                                     F@_5,
                                                                     TrUserData);
        32 ->
            d_field_CommandAddPartitionToTxnResponse_error(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
        42 ->
            d_field_CommandAddPartitionToTxnResponse_message(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandAddPartitionToTxnResponse(Rest,
                                                                 0,
                                                                 0,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
                1 ->
                    skip_64_CommandAddPartitionToTxnResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
                2 ->
                    skip_length_delimited_CommandAddPartitionToTxnResponse(Rest,
                                                                           0,
                                                                           0,
                                                                           F@_1,
                                                                           F@_2,
                                                                           F@_3,
                                                                           F@_4,
                                                                           F@_5,
                                                                           TrUserData);
                3 ->
                    skip_group_CommandAddPartitionToTxnResponse(Rest,
                                                                Key bsr 3,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
                5 ->
                    skip_32_CommandAddPartitionToTxnResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData)
            end
    end;
dg_read_field_def_CommandAddPartitionToTxnResponse(<<>>,
                                                   0, 0, F@_1, F@_2, F@_3, F@_4,
                                                   F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end.

d_field_CommandAddPartitionToTxnResponse_request_id(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxnResponse_request_id(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
d_field_CommandAddPartitionToTxnResponse_request_id(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, _, F@_2, F@_3, F@_4,
                                                    F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddPartitionToTxnResponse(RestF,
                                                        0,
                                                        0,
                                                        NewFValue,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

d_field_CommandAddPartitionToTxnResponse_txnid_least_bits(<<1:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxnResponse_txnid_least_bits(Rest,
                                                              N + 7,
                                                              X bsl N + Acc,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
d_field_CommandAddPartitionToTxnResponse_txnid_least_bits(<<0:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, _, F@_3,
                                                          F@_4, F@_5,
                                                          TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddPartitionToTxnResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        NewFValue,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

d_field_CommandAddPartitionToTxnResponse_txnid_most_bits(<<1:1,
                                                           X:7, Rest/binary>>,
                                                         N, Acc, F@_1, F@_2,
                                                         F@_3, F@_4, F@_5,
                                                         TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxnResponse_txnid_most_bits(Rest,
                                                             N + 7,
                                                             X bsl N + Acc,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
d_field_CommandAddPartitionToTxnResponse_txnid_most_bits(<<0:1,
                                                           X:7, Rest/binary>>,
                                                         N, Acc, F@_1, F@_2, _,
                                                         F@_4, F@_5,
                                                         TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddPartitionToTxnResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        NewFValue,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

d_field_CommandAddPartitionToTxnResponse_error(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxnResponse_error(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
d_field_CommandAddPartitionToTxnResponse_error(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, _,
                                               F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddPartitionToTxnResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        NewFValue,
                                                        F@_5,
                                                        TrUserData).

d_field_CommandAddPartitionToTxnResponse_message(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandAddPartitionToTxnResponse_message(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
d_field_CommandAddPartitionToTxnResponse_message(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAddPartitionToTxnResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        NewFValue,
                                                        TrUserData).

skip_varint_CommandAddPartitionToTxnResponse(<<1:1, _:7,
                                               Rest/binary>>,
                                             Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, TrUserData) ->
    skip_varint_CommandAddPartitionToTxnResponse(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 TrUserData);
skip_varint_CommandAddPartitionToTxnResponse(<<0:1, _:7,
                                               Rest/binary>>,
                                             Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, TrUserData) ->
    dfp_read_field_def_CommandAddPartitionToTxnResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

skip_length_delimited_CommandAddPartitionToTxnResponse(<<1:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandAddPartitionToTxnResponse(Rest,
                                                           N + 7,
                                                           X bsl N + Acc,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
skip_length_delimited_CommandAddPartitionToTxnResponse(<<0:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandAddPartitionToTxnResponse(Rest2,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

skip_group_CommandAddPartitionToTxnResponse(Bin, FNum,
                                            Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                            TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandAddPartitionToTxnResponse(Rest,
                                                        0,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

skip_32_CommandAddPartitionToTxnResponse(<<_:32,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    dfp_read_field_def_CommandAddPartitionToTxnResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

skip_64_CommandAddPartitionToTxnResponse(<<_:64,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    dfp_read_field_def_CommandAddPartitionToTxnResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

decode_msg_Subscription(Bin, TrUserData) ->
    dfp_read_field_def_Subscription(Bin,
                                    0,
                                    0,
                                    id('$undef', TrUserData),
                                    id('$undef', TrUserData),
                                    TrUserData).

dfp_read_field_def_Subscription(<<10, Rest/binary>>, Z1,
                                Z2, F@_1, F@_2, TrUserData) ->
    d_field_Subscription_topic(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               TrUserData);
dfp_read_field_def_Subscription(<<18, Rest/binary>>, Z1,
                                Z2, F@_1, F@_2, TrUserData) ->
    d_field_Subscription_subscription(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      TrUserData);
dfp_read_field_def_Subscription(<<>>, 0, 0, F@_1, F@_2,
                                _) ->
    #{topic => F@_1, subscription => F@_2};
dfp_read_field_def_Subscription(Other, Z1, Z2, F@_1,
                                F@_2, TrUserData) ->
    dg_read_field_def_Subscription(Other,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   TrUserData).

dg_read_field_def_Subscription(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_Subscription(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   TrUserData);
dg_read_field_def_Subscription(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 ->
            d_field_Subscription_topic(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       TrUserData);
        18 ->
            d_field_Subscription_subscription(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_Subscription(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             TrUserData);
                1 ->
                    skip_64_Subscription(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         TrUserData);
                2 ->
                    skip_length_delimited_Subscription(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       TrUserData);
                3 ->
                    skip_group_Subscription(Rest,
                                            Key bsr 3,
                                            0,
                                            F@_1,
                                            F@_2,
                                            TrUserData);
                5 ->
                    skip_32_Subscription(Rest, 0, 0, F@_1, F@_2, TrUserData)
            end
    end;
dg_read_field_def_Subscription(<<>>, 0, 0, F@_1, F@_2,
                               _) ->
    #{topic => F@_1, subscription => F@_2}.

d_field_Subscription_topic(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_Subscription_topic(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               TrUserData);
d_field_Subscription_topic(<<0:1, X:7, Rest/binary>>, N,
                           Acc, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_Subscription(RestF,
                                    0,
                                    0,
                                    NewFValue,
                                    F@_2,
                                    TrUserData).

d_field_Subscription_subscription(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    d_field_Subscription_subscription(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      TrUserData);
d_field_Subscription_subscription(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_Subscription(RestF,
                                    0,
                                    0,
                                    F@_1,
                                    NewFValue,
                                    TrUserData).

skip_varint_Subscription(<<1:1, _:7, Rest/binary>>, Z1,
                         Z2, F@_1, F@_2, TrUserData) ->
    skip_varint_Subscription(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             TrUserData);
skip_varint_Subscription(<<0:1, _:7, Rest/binary>>, Z1,
                         Z2, F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_Subscription(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

skip_length_delimited_Subscription(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    skip_length_delimited_Subscription(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       TrUserData);
skip_length_delimited_Subscription(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_Subscription(Rest2,
                                    0,
                                    0,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

skip_group_Subscription(Bin, FNum, Z2, F@_1, F@_2,
                        TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_Subscription(Rest,
                                    0,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

skip_32_Subscription(<<_:32, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_Subscription(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

skip_64_Subscription(<<_:64, Rest/binary>>, Z1, Z2,
                     F@_1, F@_2, TrUserData) ->
    dfp_read_field_def_Subscription(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    TrUserData).

decode_msg_CommandAddSubscriptionToTxn(Bin,
                                       TrUserData) ->
    dfp_read_field_def_CommandAddSubscriptionToTxn(Bin,
                                                   0,
                                                   0,
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   id([], TrUserData),
                                                   TrUserData).

dfp_read_field_def_CommandAddSubscriptionToTxn(<<8,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData) ->
    d_field_CommandAddSubscriptionToTxn_request_id(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxn(<<16,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData) ->
    d_field_CommandAddSubscriptionToTxn_txnid_least_bits(Rest,
                                                         Z1,
                                                         Z2,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxn(<<24,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData) ->
    d_field_CommandAddSubscriptionToTxn_txnid_most_bits(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxn(<<34,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData) ->
    d_field_CommandAddSubscriptionToTxn_subscription(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxn(<<>>, 0,
                                               0, F@_1, F@_2, F@_3, R1,
                                               TrUserData) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    if R1 == '$undef' -> S3;
       true ->
           S3#{subscription => lists_reverse(R1, TrUserData)}
    end;
dfp_read_field_def_CommandAddSubscriptionToTxn(Other,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData) ->
    dg_read_field_def_CommandAddSubscriptionToTxn(Other,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  TrUserData).

dg_read_field_def_CommandAddSubscriptionToTxn(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandAddSubscriptionToTxn(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  TrUserData);
dg_read_field_def_CommandAddSubscriptionToTxn(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandAddSubscriptionToTxn_request_id(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           TrUserData);
        16 ->
            d_field_CommandAddSubscriptionToTxn_txnid_least_bits(Rest,
                                                                 0,
                                                                 0,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 TrUserData);
        24 ->
            d_field_CommandAddSubscriptionToTxn_txnid_most_bits(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                TrUserData);
        34 ->
            d_field_CommandAddSubscriptionToTxn_subscription(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandAddSubscriptionToTxn(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            TrUserData);
                1 ->
                    skip_64_CommandAddSubscriptionToTxn(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
                2 ->
                    skip_length_delimited_CommandAddSubscriptionToTxn(Rest,
                                                                      0,
                                                                      0,
                                                                      F@_1,
                                                                      F@_2,
                                                                      F@_3,
                                                                      F@_4,
                                                                      TrUserData);
                3 ->
                    skip_group_CommandAddSubscriptionToTxn(Rest,
                                                           Key bsr 3,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           TrUserData);
                5 ->
                    skip_32_CommandAddSubscriptionToTxn(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData)
            end
    end;
dg_read_field_def_CommandAddSubscriptionToTxn(<<>>, 0,
                                              0, F@_1, F@_2, F@_3, R1,
                                              TrUserData) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    if R1 == '$undef' -> S3;
       true ->
           S3#{subscription => lists_reverse(R1, TrUserData)}
    end.

d_field_CommandAddSubscriptionToTxn_request_id(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxn_request_id(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData);
d_field_CommandAddSubscriptionToTxn_request_id(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, _, F@_2, F@_3, F@_4,
                                               TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddSubscriptionToTxn(RestF,
                                                   0,
                                                   0,
                                                   NewFValue,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData).

d_field_CommandAddSubscriptionToTxn_txnid_least_bits(<<1:1,
                                                       X:7, Rest/binary>>,
                                                     N, Acc, F@_1, F@_2, F@_3,
                                                     F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxn_txnid_least_bits(Rest,
                                                         N + 7,
                                                         X bsl N + Acc,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         TrUserData);
d_field_CommandAddSubscriptionToTxn_txnid_least_bits(<<0:1,
                                                       X:7, Rest/binary>>,
                                                     N, Acc, F@_1, _, F@_3,
                                                     F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddSubscriptionToTxn(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   NewFValue,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData).

d_field_CommandAddSubscriptionToTxn_txnid_most_bits(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxn_txnid_most_bits(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        TrUserData);
d_field_CommandAddSubscriptionToTxn_txnid_most_bits(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, _, F@_4,
                                                    TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddSubscriptionToTxn(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   NewFValue,
                                                   F@_4,
                                                   TrUserData).

d_field_CommandAddSubscriptionToTxn_subscription(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxn_subscription(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     TrUserData);
d_field_CommandAddSubscriptionToTxn_subscription(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, Prev,
                                                 TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_Subscription(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAddSubscriptionToTxn(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   cons(NewFValue,
                                                        Prev,
                                                        TrUserData),
                                                   TrUserData).

skip_varint_CommandAddSubscriptionToTxn(<<1:1, _:7,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                        TrUserData) ->
    skip_varint_CommandAddSubscriptionToTxn(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            TrUserData);
skip_varint_CommandAddSubscriptionToTxn(<<0:1, _:7,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                        TrUserData) ->
    dfp_read_field_def_CommandAddSubscriptionToTxn(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData).

skip_length_delimited_CommandAddSubscriptionToTxn(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandAddSubscriptionToTxn(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      TrUserData);
skip_length_delimited_CommandAddSubscriptionToTxn(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandAddSubscriptionToTxn(Rest2,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData).

skip_group_CommandAddSubscriptionToTxn(Bin, FNum, Z2,
                                       F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandAddSubscriptionToTxn(Rest,
                                                   0,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData).

skip_32_CommandAddSubscriptionToTxn(<<_:32,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                    TrUserData) ->
    dfp_read_field_def_CommandAddSubscriptionToTxn(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData).

skip_64_CommandAddSubscriptionToTxn(<<_:64,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                    TrUserData) ->
    dfp_read_field_def_CommandAddSubscriptionToTxn(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   TrUserData).

decode_msg_CommandAddSubscriptionToTxnResponse(Bin,
                                               TrUserData) ->
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(Bin,
                                                           0,
                                                           0,
                                                           id('$undef',
                                                              TrUserData),
                                                           id('$undef',
                                                              TrUserData),
                                                           id('$undef',
                                                              TrUserData),
                                                           id('$undef',
                                                              TrUserData),
                                                           id('$undef',
                                                              TrUserData),
                                                           TrUserData).

dfp_read_field_def_CommandAddSubscriptionToTxnResponse(<<8,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandAddSubscriptionToTxnResponse_request_id(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxnResponse(<<16,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandAddSubscriptionToTxnResponse_txnid_least_bits(Rest,
                                                                 Z1,
                                                                 Z2,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxnResponse(<<24,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandAddSubscriptionToTxnResponse_txnid_most_bits(Rest,
                                                                Z1,
                                                                Z2,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxnResponse(<<32,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandAddSubscriptionToTxnResponse_error(Rest,
                                                      Z1,
                                                      Z2,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxnResponse(<<42,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandAddSubscriptionToTxnResponse_message(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
dfp_read_field_def_CommandAddSubscriptionToTxnResponse(<<>>,
                                                       0, 0, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end;
dfp_read_field_def_CommandAddSubscriptionToTxnResponse(Other,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    dg_read_field_def_CommandAddSubscriptionToTxnResponse(Other,
                                                          Z1,
                                                          Z2,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData).

dg_read_field_def_CommandAddSubscriptionToTxnResponse(<<1:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandAddSubscriptionToTxnResponse(Rest,
                                                          N + 7,
                                                          X bsl N + Acc,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData);
dg_read_field_def_CommandAddSubscriptionToTxnResponse(<<0:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandAddSubscriptionToTxnResponse_request_id(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   F@_5,
                                                                   TrUserData);
        16 ->
            d_field_CommandAddSubscriptionToTxnResponse_txnid_least_bits(Rest,
                                                                         0,
                                                                         0,
                                                                         F@_1,
                                                                         F@_2,
                                                                         F@_3,
                                                                         F@_4,
                                                                         F@_5,
                                                                         TrUserData);
        24 ->
            d_field_CommandAddSubscriptionToTxnResponse_txnid_most_bits(Rest,
                                                                        0,
                                                                        0,
                                                                        F@_1,
                                                                        F@_2,
                                                                        F@_3,
                                                                        F@_4,
                                                                        F@_5,
                                                                        TrUserData);
        32 ->
            d_field_CommandAddSubscriptionToTxnResponse_error(Rest,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
        42 ->
            d_field_CommandAddSubscriptionToTxnResponse_message(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandAddSubscriptionToTxnResponse(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    TrUserData);
                1 ->
                    skip_64_CommandAddSubscriptionToTxnResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
                2 ->
                    skip_length_delimited_CommandAddSubscriptionToTxnResponse(Rest,
                                                                              0,
                                                                              0,
                                                                              F@_1,
                                                                              F@_2,
                                                                              F@_3,
                                                                              F@_4,
                                                                              F@_5,
                                                                              TrUserData);
                3 ->
                    skip_group_CommandAddSubscriptionToTxnResponse(Rest,
                                                                   Key bsr 3,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   F@_5,
                                                                   TrUserData);
                5 ->
                    skip_32_CommandAddSubscriptionToTxnResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData)
            end
    end;
dg_read_field_def_CommandAddSubscriptionToTxnResponse(<<>>,
                                                      0, 0, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end.

d_field_CommandAddSubscriptionToTxnResponse_request_id(<<1:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxnResponse_request_id(Rest,
                                                           N + 7,
                                                           X bsl N + Acc,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
d_field_CommandAddSubscriptionToTxnResponse_request_id(<<0:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, _, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(RestF,
                                                           0,
                                                           0,
                                                           NewFValue,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

d_field_CommandAddSubscriptionToTxnResponse_txnid_least_bits(<<1:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             F@_3, F@_4, F@_5,
                                                             TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxnResponse_txnid_least_bits(Rest,
                                                                 N + 7,
                                                                 X bsl N + Acc,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
d_field_CommandAddSubscriptionToTxnResponse_txnid_least_bits(<<0:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, _,
                                                             F@_3, F@_4, F@_5,
                                                             TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           NewFValue,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

d_field_CommandAddSubscriptionToTxnResponse_txnid_most_bits(<<1:1,
                                                              X:7,
                                                              Rest/binary>>,
                                                            N, Acc, F@_1, F@_2,
                                                            F@_3, F@_4, F@_5,
                                                            TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxnResponse_txnid_most_bits(Rest,
                                                                N + 7,
                                                                X bsl N + Acc,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
d_field_CommandAddSubscriptionToTxnResponse_txnid_most_bits(<<0:1,
                                                              X:7,
                                                              Rest/binary>>,
                                                            N, Acc, F@_1, F@_2,
                                                            _, F@_4, F@_5,
                                                            TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           NewFValue,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

d_field_CommandAddSubscriptionToTxnResponse_error(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxnResponse_error(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData);
d_field_CommandAddSubscriptionToTxnResponse_error(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3, _,
                                                  F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           NewFValue,
                                                           F@_5,
                                                           TrUserData).

d_field_CommandAddSubscriptionToTxnResponse_message(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandAddSubscriptionToTxnResponse_message(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
d_field_CommandAddSubscriptionToTxnResponse_message(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           NewFValue,
                                                           TrUserData).

skip_varint_CommandAddSubscriptionToTxnResponse(<<1:1,
                                                  _:7, Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, TrUserData) ->
    skip_varint_CommandAddSubscriptionToTxnResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    TrUserData);
skip_varint_CommandAddSubscriptionToTxnResponse(<<0:1,
                                                  _:7, Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, TrUserData) ->
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

skip_length_delimited_CommandAddSubscriptionToTxnResponse(<<1:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandAddSubscriptionToTxnResponse(Rest,
                                                              N + 7,
                                                              X bsl N + Acc,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
skip_length_delimited_CommandAddSubscriptionToTxnResponse(<<0:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(Rest2,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

skip_group_CommandAddSubscriptionToTxnResponse(Bin,
                                               FNum, Z2, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(Rest,
                                                           0,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

skip_32_CommandAddSubscriptionToTxnResponse(<<_:32,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

skip_64_CommandAddSubscriptionToTxnResponse(<<_:64,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    dfp_read_field_def_CommandAddSubscriptionToTxnResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

decode_msg_CommandEndTxn(Bin, TrUserData) ->
    dfp_read_field_def_CommandEndTxn(Bin,
                                     0,
                                     0,
                                     id('$undef', TrUserData),
                                     id('$undef', TrUserData),
                                     id('$undef', TrUserData),
                                     id('$undef', TrUserData),
                                     id([], TrUserData),
                                     TrUserData).

dfp_read_field_def_CommandEndTxn(<<8, Rest/binary>>, Z1,
                                 Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData) ->
    d_field_CommandEndTxn_request_id(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData);
dfp_read_field_def_CommandEndTxn(<<16, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData) ->
    d_field_CommandEndTxn_txnid_least_bits(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           TrUserData);
dfp_read_field_def_CommandEndTxn(<<24, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData) ->
    d_field_CommandEndTxn_txnid_most_bits(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          TrUserData);
dfp_read_field_def_CommandEndTxn(<<32, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData) ->
    d_field_CommandEndTxn_txn_action(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData);
dfp_read_field_def_CommandEndTxn(<<42, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData) ->
    d_field_CommandEndTxn_message_id(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData);
dfp_read_field_def_CommandEndTxn(<<>>, 0, 0, F@_1, F@_2,
                                 F@_3, F@_4, R1, TrUserData) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{txn_action => F@_4}
         end,
    if R1 == '$undef' -> S4;
       true -> S4#{message_id => lists_reverse(R1, TrUserData)}
    end;
dfp_read_field_def_CommandEndTxn(Other, Z1, Z2, F@_1,
                                 F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    dg_read_field_def_CommandEndTxn(Other,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    TrUserData).

dg_read_field_def_CommandEndTxn(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandEndTxn(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    TrUserData);
dg_read_field_def_CommandEndTxn(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandEndTxn_request_id(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData);
        16 ->
            d_field_CommandEndTxn_txnid_least_bits(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
        24 ->
            d_field_CommandEndTxn_txnid_most_bits(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
        32 ->
            d_field_CommandEndTxn_txn_action(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData);
        42 ->
            d_field_CommandEndTxn_message_id(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandEndTxn(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              TrUserData);
                1 ->
                    skip_64_CommandEndTxn(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          TrUserData);
                2 ->
                    skip_length_delimited_CommandEndTxn(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
                3 ->
                    skip_group_CommandEndTxn(Rest,
                                             Key bsr 3,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData);
                5 ->
                    skip_32_CommandEndTxn(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          TrUserData)
            end
    end;
dg_read_field_def_CommandEndTxn(<<>>, 0, 0, F@_1, F@_2,
                                F@_3, F@_4, R1, TrUserData) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{txn_action => F@_4}
         end,
    if R1 == '$undef' -> S4;
       true -> S4#{message_id => lists_reverse(R1, TrUserData)}
    end.

d_field_CommandEndTxn_request_id(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData)
    when N < 57 ->
    d_field_CommandEndTxn_request_id(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData);
d_field_CommandEndTxn_request_id(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, _, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxn(RestF,
                                     0,
                                     0,
                                     NewFValue,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData).

d_field_CommandEndTxn_txnid_least_bits(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       TrUserData)
    when N < 57 ->
    d_field_CommandEndTxn_txnid_least_bits(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           TrUserData);
d_field_CommandEndTxn_txnid_least_bits(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, _, F@_3, F@_4, F@_5,
                                       TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxn(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     NewFValue,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData).

d_field_CommandEndTxn_txnid_most_bits(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      TrUserData)
    when N < 57 ->
    d_field_CommandEndTxn_txnid_most_bits(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          TrUserData);
d_field_CommandEndTxn_txnid_most_bits(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, _, F@_4, F@_5,
                                      TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxn(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     NewFValue,
                                     F@_4,
                                     F@_5,
                                     TrUserData).

d_field_CommandEndTxn_txn_action(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData)
    when N < 57 ->
    d_field_CommandEndTxn_txn_action(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData);
d_field_CommandEndTxn_txn_action(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, _, F@_5,
                                 TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_TxnAction(begin
                                                  <<Res:32/signed-native>> =
                                                      <<(X bsl N +
                                                             Acc):32/unsigned-native>>,
                                                  id(Res, TrUserData)
                                              end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxn(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     NewFValue,
                                     F@_5,
                                     TrUserData).

d_field_CommandEndTxn_message_id(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                 TrUserData)
    when N < 57 ->
    d_field_CommandEndTxn_message_id(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData);
d_field_CommandEndTxn_message_id(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, Prev,
                                 TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandEndTxn(RestF,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     cons(NewFValue, Prev, TrUserData),
                                     TrUserData).

skip_varint_CommandEndTxn(<<1:1, _:7, Rest/binary>>, Z1,
                          Z2, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    skip_varint_CommandEndTxn(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              F@_5,
                              TrUserData);
skip_varint_CommandEndTxn(<<0:1, _:7, Rest/binary>>, Z1,
                          Z2, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxn(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData).

skip_length_delimited_CommandEndTxn(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                    TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandEndTxn(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        TrUserData);
skip_length_delimited_CommandEndTxn(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandEndTxn(Rest2,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData).

skip_group_CommandEndTxn(Bin, FNum, Z2, F@_1, F@_2,
                         F@_3, F@_4, F@_5, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandEndTxn(Rest,
                                     0,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData).

skip_32_CommandEndTxn(<<_:32, Rest/binary>>, Z1, Z2,
                      F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxn(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData).

skip_64_CommandEndTxn(<<_:64, Rest/binary>>, Z1, Z2,
                      F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxn(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     TrUserData).

decode_msg_CommandEndTxnResponse(Bin, TrUserData) ->
    dfp_read_field_def_CommandEndTxnResponse(Bin,
                                             0,
                                             0,
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             id('$undef', TrUserData),
                                             TrUserData).

dfp_read_field_def_CommandEndTxnResponse(<<8,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandEndTxnResponse_request_id(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData);
dfp_read_field_def_CommandEndTxnResponse(<<16,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandEndTxnResponse_txnid_least_bits(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
dfp_read_field_def_CommandEndTxnResponse(<<24,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandEndTxnResponse_txnid_most_bits(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
dfp_read_field_def_CommandEndTxnResponse(<<32,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandEndTxnResponse_error(Rest,
                                        Z1,
                                        Z2,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        TrUserData);
dfp_read_field_def_CommandEndTxnResponse(<<42,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    d_field_CommandEndTxnResponse_message(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          TrUserData);
dfp_read_field_def_CommandEndTxnResponse(<<>>, 0, 0,
                                         F@_1, F@_2, F@_3, F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end;
dfp_read_field_def_CommandEndTxnResponse(Other, Z1, Z2,
                                         F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    dg_read_field_def_CommandEndTxnResponse(Other,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            TrUserData).

dg_read_field_def_CommandEndTxnResponse(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandEndTxnResponse(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            TrUserData);
dg_read_field_def_CommandEndTxnResponse(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandEndTxnResponse_request_id(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
        16 ->
            d_field_CommandEndTxnResponse_txnid_least_bits(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
        24 ->
            d_field_CommandEndTxnResponse_txnid_most_bits(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData);
        32 ->
            d_field_CommandEndTxnResponse_error(Rest,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
        42 ->
            d_field_CommandEndTxnResponse_message(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandEndTxnResponse(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData);
                1 ->
                    skip_64_CommandEndTxnResponse(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
                2 ->
                    skip_length_delimited_CommandEndTxnResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
                3 ->
                    skip_group_CommandEndTxnResponse(Rest,
                                                     Key bsr 3,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
                5 ->
                    skip_32_CommandEndTxnResponse(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData)
            end
    end;
dg_read_field_def_CommandEndTxnResponse(<<>>, 0, 0,
                                        F@_1, F@_2, F@_3, F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end.

d_field_CommandEndTxnResponse_request_id(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnResponse_request_id(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData);
d_field_CommandEndTxnResponse_request_id(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, _, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnResponse(RestF,
                                             0,
                                             0,
                                             NewFValue,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

d_field_CommandEndTxnResponse_txnid_least_bits(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnResponse_txnid_least_bits(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
d_field_CommandEndTxnResponse_txnid_least_bits(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, _, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnResponse(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             NewFValue,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

d_field_CommandEndTxnResponse_txnid_most_bits(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnResponse_txnid_most_bits(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
d_field_CommandEndTxnResponse_txnid_most_bits(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, _, F@_4, F@_5,
                                              TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnResponse(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             NewFValue,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

d_field_CommandEndTxnResponse_error(<<1:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                    TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnResponse_error(Rest,
                                        N + 7,
                                        X bsl N + Acc,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        TrUserData);
d_field_CommandEndTxnResponse_error(<<0:1, X:7,
                                      Rest/binary>>,
                                    N, Acc, F@_1, F@_2, F@_3, _, F@_5,
                                    TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnResponse(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             NewFValue,
                                             F@_5,
                                             TrUserData).

d_field_CommandEndTxnResponse_message(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnResponse_message(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          TrUserData);
d_field_CommandEndTxnResponse_message(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, _,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandEndTxnResponse(RestF,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             NewFValue,
                                             TrUserData).

skip_varint_CommandEndTxnResponse(<<1:1, _:7,
                                    Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                  TrUserData) ->
    skip_varint_CommandEndTxnResponse(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      TrUserData);
skip_varint_CommandEndTxnResponse(<<0:1, _:7,
                                    Rest/binary>>,
                                  Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                  TrUserData) ->
    dfp_read_field_def_CommandEndTxnResponse(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

skip_length_delimited_CommandEndTxnResponse(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandEndTxnResponse(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                TrUserData);
skip_length_delimited_CommandEndTxnResponse(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandEndTxnResponse(Rest2,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

skip_group_CommandEndTxnResponse(Bin, FNum, Z2, F@_1,
                                 F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandEndTxnResponse(Rest,
                                             0,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

skip_32_CommandEndTxnResponse(<<_:32, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxnResponse(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

skip_64_CommandEndTxnResponse(<<_:64, Rest/binary>>, Z1,
                              Z2, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxnResponse(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             TrUserData).

decode_msg_CommandEndTxnOnPartition(Bin, TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnPartition(Bin,
                                                0,
                                                0,
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id('$undef', TrUserData),
                                                id([], TrUserData),
                                                TrUserData).

dfp_read_field_def_CommandEndTxnOnPartition(<<8,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData) ->
    d_field_CommandEndTxnOnPartition_request_id(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData);
dfp_read_field_def_CommandEndTxnOnPartition(<<16,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData) ->
    d_field_CommandEndTxnOnPartition_txnid_least_bits(Rest,
                                                      Z1,
                                                      Z2,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      TrUserData);
dfp_read_field_def_CommandEndTxnOnPartition(<<24,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData) ->
    d_field_CommandEndTxnOnPartition_txnid_most_bits(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     TrUserData);
dfp_read_field_def_CommandEndTxnOnPartition(<<34,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData) ->
    d_field_CommandEndTxnOnPartition_topic(Rest,
                                           Z1,
                                           Z2,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           TrUserData);
dfp_read_field_def_CommandEndTxnOnPartition(<<40,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData) ->
    d_field_CommandEndTxnOnPartition_txn_action(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData);
dfp_read_field_def_CommandEndTxnOnPartition(<<50,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData) ->
    d_field_CommandEndTxnOnPartition_message_id(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData);
dfp_read_field_def_CommandEndTxnOnPartition(<<>>, 0, 0,
                                            F@_1, F@_2, F@_3, F@_4, F@_5, R1,
                                            TrUserData) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{topic => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{txn_action => F@_5}
         end,
    if R1 == '$undef' -> S5;
       true -> S5#{message_id => lists_reverse(R1, TrUserData)}
    end;
dfp_read_field_def_CommandEndTxnOnPartition(Other, Z1,
                                            Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                            F@_6, TrUserData) ->
    dg_read_field_def_CommandEndTxnOnPartition(Other,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               TrUserData).

dg_read_field_def_CommandEndTxnOnPartition(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandEndTxnOnPartition(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               TrUserData);
dg_read_field_def_CommandEndTxnOnPartition(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandEndTxnOnPartition_request_id(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        TrUserData);
        16 ->
            d_field_CommandEndTxnOnPartition_txnid_least_bits(Rest,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              F@_6,
                                                              TrUserData);
        24 ->
            d_field_CommandEndTxnOnPartition_txnid_most_bits(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             TrUserData);
        34 ->
            d_field_CommandEndTxnOnPartition_topic(Rest,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   TrUserData);
        40 ->
            d_field_CommandEndTxnOnPartition_txn_action(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        TrUserData);
        50 ->
            d_field_CommandEndTxnOnPartition_message_id(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandEndTxnOnPartition(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         TrUserData);
                1 ->
                    skip_64_CommandEndTxnOnPartition(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     TrUserData);
                2 ->
                    skip_length_delimited_CommandEndTxnOnPartition(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   F@_5,
                                                                   F@_6,
                                                                   TrUserData);
                3 ->
                    skip_group_CommandEndTxnOnPartition(Rest,
                                                        Key bsr 3,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        TrUserData);
                5 ->
                    skip_32_CommandEndTxnOnPartition(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     TrUserData)
            end
    end;
dg_read_field_def_CommandEndTxnOnPartition(<<>>, 0, 0,
                                           F@_1, F@_2, F@_3, F@_4, F@_5, R1,
                                           TrUserData) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{topic => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{txn_action => F@_5}
         end,
    if R1 == '$undef' -> S5;
       true -> S5#{message_id => lists_reverse(R1, TrUserData)}
    end.

d_field_CommandEndTxnOnPartition_request_id(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartition_request_id(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData);
d_field_CommandEndTxnOnPartition_request_id(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, _, F@_2, F@_3, F@_4, F@_5,
                                            F@_6, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnPartition(RestF,
                                                0,
                                                0,
                                                NewFValue,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

d_field_CommandEndTxnOnPartition_txnid_least_bits(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartition_txnid_least_bits(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      TrUserData);
d_field_CommandEndTxnOnPartition_txnid_least_bits(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, _, F@_3, F@_4,
                                                  F@_5, F@_6, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnPartition(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                NewFValue,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

d_field_CommandEndTxnOnPartition_txnid_most_bits(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartition_txnid_most_bits(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     TrUserData);
d_field_CommandEndTxnOnPartition_txnid_most_bits(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, _, F@_4,
                                                 F@_5, F@_6, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnPartition(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                NewFValue,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

d_field_CommandEndTxnOnPartition_topic(<<1:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                       F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartition_topic(Rest,
                                           N + 7,
                                           X bsl N + Acc,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           TrUserData);
d_field_CommandEndTxnOnPartition_topic(<<0:1, X:7,
                                         Rest/binary>>,
                                       N, Acc, F@_1, F@_2, F@_3, _, F@_5, F@_6,
                                       TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandEndTxnOnPartition(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                NewFValue,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

d_field_CommandEndTxnOnPartition_txn_action(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartition_txn_action(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData);
d_field_CommandEndTxnOnPartition_txn_action(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4, _,
                                            F@_6, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_TxnAction(begin
                                                  <<Res:32/signed-native>> =
                                                      <<(X bsl N +
                                                             Acc):32/unsigned-native>>,
                                                  id(Res, TrUserData)
                                              end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnPartition(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                NewFValue,
                                                F@_6,
                                                TrUserData).

d_field_CommandEndTxnOnPartition_message_id(<<1:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, F@_6, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartition_message_id(Rest,
                                                N + 7,
                                                X bsl N + Acc,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData);
d_field_CommandEndTxnOnPartition_message_id(<<0:1, X:7,
                                              Rest/binary>>,
                                            N, Acc, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, Prev, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_MessageIdData(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandEndTxnOnPartition(RestF,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                cons(NewFValue,
                                                     Prev,
                                                     TrUserData),
                                                TrUserData).

skip_varint_CommandEndTxnOnPartition(<<1:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     TrUserData) ->
    skip_varint_CommandEndTxnOnPartition(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         TrUserData);
skip_varint_CommandEndTxnOnPartition(<<0:1, _:7,
                                       Rest/binary>>,
                                     Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnPartition(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

skip_length_delimited_CommandEndTxnOnPartition(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, F@_6, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandEndTxnOnPartition(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   F@_6,
                                                   TrUserData);
skip_length_delimited_CommandEndTxnOnPartition(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, F@_6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandEndTxnOnPartition(Rest2,
                                                0,
                                                0,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

skip_group_CommandEndTxnOnPartition(Bin, FNum, Z2, F@_1,
                                    F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandEndTxnOnPartition(Rest,
                                                0,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

skip_32_CommandEndTxnOnPartition(<<_:32, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnPartition(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

skip_64_CommandEndTxnOnPartition(<<_:64, Rest/binary>>,
                                 Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnPartition(Rest,
                                                Z1,
                                                Z2,
                                                F@_1,
                                                F@_2,
                                                F@_3,
                                                F@_4,
                                                F@_5,
                                                F@_6,
                                                TrUserData).

decode_msg_CommandEndTxnOnPartitionResponse(Bin,
                                            TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(Bin,
                                                        0,
                                                        0,
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        id('$undef',
                                                           TrUserData),
                                                        TrUserData).

dfp_read_field_def_CommandEndTxnOnPartitionResponse(<<8,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandEndTxnOnPartitionResponse_request_id(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
dfp_read_field_def_CommandEndTxnOnPartitionResponse(<<16,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandEndTxnOnPartitionResponse_txnid_least_bits(Rest,
                                                              Z1,
                                                              Z2,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
dfp_read_field_def_CommandEndTxnOnPartitionResponse(<<24,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandEndTxnOnPartitionResponse_txnid_most_bits(Rest,
                                                             Z1,
                                                             Z2,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
dfp_read_field_def_CommandEndTxnOnPartitionResponse(<<32,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandEndTxnOnPartitionResponse_error(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
dfp_read_field_def_CommandEndTxnOnPartitionResponse(<<42,
                                                      Rest/binary>>,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    d_field_CommandEndTxnOnPartitionResponse_message(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
dfp_read_field_def_CommandEndTxnOnPartitionResponse(<<>>,
                                                    0, 0, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end;
dfp_read_field_def_CommandEndTxnOnPartitionResponse(Other,
                                                    Z1, Z2, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData) ->
    dg_read_field_def_CommandEndTxnOnPartitionResponse(Other,
                                                       Z1,
                                                       Z2,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData).

dg_read_field_def_CommandEndTxnOnPartitionResponse(<<1:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandEndTxnOnPartitionResponse(Rest,
                                                       N + 7,
                                                       X bsl N + Acc,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       TrUserData);
dg_read_field_def_CommandEndTxnOnPartitionResponse(<<0:1,
                                                     X:7, Rest/binary>>,
                                                   N, Acc, F@_1, F@_2, F@_3,
                                                   F@_4, F@_5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandEndTxnOnPartitionResponse_request_id(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
        16 ->
            d_field_CommandEndTxnOnPartitionResponse_txnid_least_bits(Rest,
                                                                      0,
                                                                      0,
                                                                      F@_1,
                                                                      F@_2,
                                                                      F@_3,
                                                                      F@_4,
                                                                      F@_5,
                                                                      TrUserData);
        24 ->
            d_field_CommandEndTxnOnPartitionResponse_txnid_most_bits(Rest,
                                                                     0,
                                                                     0,
                                                                     F@_1,
                                                                     F@_2,
                                                                     F@_3,
                                                                     F@_4,
                                                                     F@_5,
                                                                     TrUserData);
        32 ->
            d_field_CommandEndTxnOnPartitionResponse_error(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
        42 ->
            d_field_CommandEndTxnOnPartitionResponse_message(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandEndTxnOnPartitionResponse(Rest,
                                                                 0,
                                                                 0,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
                1 ->
                    skip_64_CommandEndTxnOnPartitionResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
                2 ->
                    skip_length_delimited_CommandEndTxnOnPartitionResponse(Rest,
                                                                           0,
                                                                           0,
                                                                           F@_1,
                                                                           F@_2,
                                                                           F@_3,
                                                                           F@_4,
                                                                           F@_5,
                                                                           TrUserData);
                3 ->
                    skip_group_CommandEndTxnOnPartitionResponse(Rest,
                                                                Key bsr 3,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
                5 ->
                    skip_32_CommandEndTxnOnPartitionResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData)
            end
    end;
dg_read_field_def_CommandEndTxnOnPartitionResponse(<<>>,
                                                   0, 0, F@_1, F@_2, F@_3, F@_4,
                                                   F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end.

d_field_CommandEndTxnOnPartitionResponse_request_id(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartitionResponse_request_id(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
d_field_CommandEndTxnOnPartitionResponse_request_id(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, _, F@_2, F@_3, F@_4,
                                                    F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(RestF,
                                                        0,
                                                        0,
                                                        NewFValue,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

d_field_CommandEndTxnOnPartitionResponse_txnid_least_bits(<<1:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartitionResponse_txnid_least_bits(Rest,
                                                              N + 7,
                                                              X bsl N + Acc,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
d_field_CommandEndTxnOnPartitionResponse_txnid_least_bits(<<0:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, _, F@_3,
                                                          F@_4, F@_5,
                                                          TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        NewFValue,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

d_field_CommandEndTxnOnPartitionResponse_txnid_most_bits(<<1:1,
                                                           X:7, Rest/binary>>,
                                                         N, Acc, F@_1, F@_2,
                                                         F@_3, F@_4, F@_5,
                                                         TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartitionResponse_txnid_most_bits(Rest,
                                                             N + 7,
                                                             X bsl N + Acc,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
d_field_CommandEndTxnOnPartitionResponse_txnid_most_bits(<<0:1,
                                                           X:7, Rest/binary>>,
                                                         N, Acc, F@_1, F@_2, _,
                                                         F@_4, F@_5,
                                                         TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        NewFValue,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

d_field_CommandEndTxnOnPartitionResponse_error(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartitionResponse_error(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
d_field_CommandEndTxnOnPartitionResponse_error(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, _,
                                               F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        NewFValue,
                                                        F@_5,
                                                        TrUserData).

d_field_CommandEndTxnOnPartitionResponse_message(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnPartitionResponse_message(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
d_field_CommandEndTxnOnPartitionResponse_message(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(RestF,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        NewFValue,
                                                        TrUserData).

skip_varint_CommandEndTxnOnPartitionResponse(<<1:1, _:7,
                                               Rest/binary>>,
                                             Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, TrUserData) ->
    skip_varint_CommandEndTxnOnPartitionResponse(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 TrUserData);
skip_varint_CommandEndTxnOnPartitionResponse(<<0:1, _:7,
                                               Rest/binary>>,
                                             Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

skip_length_delimited_CommandEndTxnOnPartitionResponse(<<1:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandEndTxnOnPartitionResponse(Rest,
                                                           N + 7,
                                                           X bsl N + Acc,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
skip_length_delimited_CommandEndTxnOnPartitionResponse(<<0:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(Rest2,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

skip_group_CommandEndTxnOnPartitionResponse(Bin, FNum,
                                            Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                            TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(Rest,
                                                        0,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

skip_32_CommandEndTxnOnPartitionResponse(<<_:32,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

skip_64_CommandEndTxnOnPartitionResponse(<<_:64,
                                           Rest/binary>>,
                                         Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnPartitionResponse(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData).

decode_msg_CommandEndTxnOnSubscription(Bin,
                                       TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnSubscription(Bin,
                                                   0,
                                                   0,
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   id('$undef', TrUserData),
                                                   TrUserData).

dfp_read_field_def_CommandEndTxnOnSubscription(<<8,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    d_field_CommandEndTxnOnSubscription_request_id(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscription(<<16,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    d_field_CommandEndTxnOnSubscription_txnid_least_bits(Rest,
                                                         Z1,
                                                         Z2,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscription(<<24,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    d_field_CommandEndTxnOnSubscription_txnid_most_bits(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscription(<<34,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    d_field_CommandEndTxnOnSubscription_subscription(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscription(<<40,
                                                 Rest/binary>>,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    d_field_CommandEndTxnOnSubscription_txn_action(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscription(<<>>, 0,
                                               0, F@_1, F@_2, F@_3, F@_4, F@_5,
                                               _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{subscription => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{txn_action => F@_5}
    end;
dfp_read_field_def_CommandEndTxnOnSubscription(Other,
                                               Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    dg_read_field_def_CommandEndTxnOnSubscription(Other,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData).

dg_read_field_def_CommandEndTxnOnSubscription(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandEndTxnOnSubscription(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  TrUserData);
dg_read_field_def_CommandEndTxnOnSubscription(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandEndTxnOnSubscription_request_id(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
        16 ->
            d_field_CommandEndTxnOnSubscription_txnid_least_bits(Rest,
                                                                 0,
                                                                 0,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
        24 ->
            d_field_CommandEndTxnOnSubscription_txnid_most_bits(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
        34 ->
            d_field_CommandEndTxnOnSubscription_subscription(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             TrUserData);
        40 ->
            d_field_CommandEndTxnOnSubscription_txn_action(Rest,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandEndTxnOnSubscription(Rest,
                                                            0,
                                                            0,
                                                            F@_1,
                                                            F@_2,
                                                            F@_3,
                                                            F@_4,
                                                            F@_5,
                                                            TrUserData);
                1 ->
                    skip_64_CommandEndTxnOnSubscription(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
                2 ->
                    skip_length_delimited_CommandEndTxnOnSubscription(Rest,
                                                                      0,
                                                                      0,
                                                                      F@_1,
                                                                      F@_2,
                                                                      F@_3,
                                                                      F@_4,
                                                                      F@_5,
                                                                      TrUserData);
                3 ->
                    skip_group_CommandEndTxnOnSubscription(Rest,
                                                           Key bsr 3,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
                5 ->
                    skip_32_CommandEndTxnOnSubscription(Rest,
                                                        0,
                                                        0,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData)
            end
    end;
dg_read_field_def_CommandEndTxnOnSubscription(<<>>, 0,
                                              0, F@_1, F@_2, F@_3, F@_4, F@_5,
                                              _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{subscription => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{txn_action => F@_5}
    end.

d_field_CommandEndTxnOnSubscription_request_id(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscription_request_id(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
d_field_CommandEndTxnOnSubscription_request_id(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, _, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnSubscription(RestF,
                                                   0,
                                                   0,
                                                   NewFValue,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData).

d_field_CommandEndTxnOnSubscription_txnid_least_bits(<<1:1,
                                                       X:7, Rest/binary>>,
                                                     N, Acc, F@_1, F@_2, F@_3,
                                                     F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscription_txnid_least_bits(Rest,
                                                         N + 7,
                                                         X bsl N + Acc,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         TrUserData);
d_field_CommandEndTxnOnSubscription_txnid_least_bits(<<0:1,
                                                       X:7, Rest/binary>>,
                                                     N, Acc, F@_1, _, F@_3,
                                                     F@_4, F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnSubscription(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   NewFValue,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData).

d_field_CommandEndTxnOnSubscription_txnid_most_bits(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscription_txnid_most_bits(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
d_field_CommandEndTxnOnSubscription_txnid_most_bits(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, _, F@_4,
                                                    F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnSubscription(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   NewFValue,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData).

d_field_CommandEndTxnOnSubscription_subscription(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscription_subscription(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     TrUserData);
d_field_CommandEndTxnOnSubscription_subscription(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, Prev,
                                                 F@_5, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_Subscription(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandEndTxnOnSubscription(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   if Prev == '$undef' ->
                                                          NewFValue;
                                                      true ->
                                                          merge_msg_Subscription(Prev,
                                                                                 NewFValue,
                                                                                 TrUserData)
                                                   end,
                                                   F@_5,
                                                   TrUserData).

d_field_CommandEndTxnOnSubscription_txn_action(<<1:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscription_txn_action(Rest,
                                                   N + 7,
                                                   X bsl N + Acc,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData);
d_field_CommandEndTxnOnSubscription_txn_action(<<0:1,
                                                 X:7, Rest/binary>>,
                                               N, Acc, F@_1, F@_2, F@_3, F@_4,
                                               _, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_TxnAction(begin
                                                  <<Res:32/signed-native>> =
                                                      <<(X bsl N +
                                                             Acc):32/unsigned-native>>,
                                                  id(Res, TrUserData)
                                              end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnSubscription(RestF,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   NewFValue,
                                                   TrUserData).

skip_varint_CommandEndTxnOnSubscription(<<1:1, _:7,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData) ->
    skip_varint_CommandEndTxnOnSubscription(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            TrUserData);
skip_varint_CommandEndTxnOnSubscription(<<0:1, _:7,
                                          Rest/binary>>,
                                        Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnSubscription(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData).

skip_length_delimited_CommandEndTxnOnSubscription(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandEndTxnOnSubscription(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData);
skip_length_delimited_CommandEndTxnOnSubscription(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandEndTxnOnSubscription(Rest2,
                                                   0,
                                                   0,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData).

skip_group_CommandEndTxnOnSubscription(Bin, FNum, Z2,
                                       F@_1, F@_2, F@_3, F@_4, F@_5,
                                       TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandEndTxnOnSubscription(Rest,
                                                   0,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData).

skip_32_CommandEndTxnOnSubscription(<<_:32,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                    TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnSubscription(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData).

skip_64_CommandEndTxnOnSubscription(<<_:64,
                                      Rest/binary>>,
                                    Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5,
                                    TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnSubscription(Rest,
                                                   Z1,
                                                   Z2,
                                                   F@_1,
                                                   F@_2,
                                                   F@_3,
                                                   F@_4,
                                                   F@_5,
                                                   TrUserData).

decode_msg_CommandEndTxnOnSubscriptionResponse(Bin,
                                               TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(Bin,
                                                           0,
                                                           0,
                                                           id('$undef',
                                                              TrUserData),
                                                           id('$undef',
                                                              TrUserData),
                                                           id('$undef',
                                                              TrUserData),
                                                           id('$undef',
                                                              TrUserData),
                                                           id('$undef',
                                                              TrUserData),
                                                           TrUserData).

dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(<<8,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandEndTxnOnSubscriptionResponse_request_id(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(<<16,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandEndTxnOnSubscriptionResponse_txnid_least_bits(Rest,
                                                                 Z1,
                                                                 Z2,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(<<24,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandEndTxnOnSubscriptionResponse_txnid_most_bits(Rest,
                                                                Z1,
                                                                Z2,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(<<32,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandEndTxnOnSubscriptionResponse_error(Rest,
                                                      Z1,
                                                      Z2,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(<<42,
                                                         Rest/binary>>,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    d_field_CommandEndTxnOnSubscriptionResponse_message(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(<<>>,
                                                       0, 0, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end;
dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(Other,
                                                       Z1, Z2, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    dg_read_field_def_CommandEndTxnOnSubscriptionResponse(Other,
                                                          Z1,
                                                          Z2,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData).

dg_read_field_def_CommandEndTxnOnSubscriptionResponse(<<1:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_CommandEndTxnOnSubscriptionResponse(Rest,
                                                          N + 7,
                                                          X bsl N + Acc,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          TrUserData);
dg_read_field_def_CommandEndTxnOnSubscriptionResponse(<<0:1,
                                                        X:7, Rest/binary>>,
                                                      N, Acc, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_CommandEndTxnOnSubscriptionResponse_request_id(Rest,
                                                                   0,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   F@_5,
                                                                   TrUserData);
        16 ->
            d_field_CommandEndTxnOnSubscriptionResponse_txnid_least_bits(Rest,
                                                                         0,
                                                                         0,
                                                                         F@_1,
                                                                         F@_2,
                                                                         F@_3,
                                                                         F@_4,
                                                                         F@_5,
                                                                         TrUserData);
        24 ->
            d_field_CommandEndTxnOnSubscriptionResponse_txnid_most_bits(Rest,
                                                                        0,
                                                                        0,
                                                                        F@_1,
                                                                        F@_2,
                                                                        F@_3,
                                                                        F@_4,
                                                                        F@_5,
                                                                        TrUserData);
        32 ->
            d_field_CommandEndTxnOnSubscriptionResponse_error(Rest,
                                                              0,
                                                              0,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
        42 ->
            d_field_CommandEndTxnOnSubscriptionResponse_message(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_CommandEndTxnOnSubscriptionResponse(Rest,
                                                                    0,
                                                                    0,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    TrUserData);
                1 ->
                    skip_64_CommandEndTxnOnSubscriptionResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
                2 ->
                    skip_length_delimited_CommandEndTxnOnSubscriptionResponse(Rest,
                                                                              0,
                                                                              0,
                                                                              F@_1,
                                                                              F@_2,
                                                                              F@_3,
                                                                              F@_4,
                                                                              F@_5,
                                                                              TrUserData);
                3 ->
                    skip_group_CommandEndTxnOnSubscriptionResponse(Rest,
                                                                   Key bsr 3,
                                                                   0,
                                                                   F@_1,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   F@_5,
                                                                   TrUserData);
                5 ->
                    skip_32_CommandEndTxnOnSubscriptionResponse(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData)
            end
    end;
dg_read_field_def_CommandEndTxnOnSubscriptionResponse(<<>>,
                                                      0, 0, F@_1, F@_2, F@_3,
                                                      F@_4, F@_5, _) ->
    S1 = #{request_id => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{txnid_least_bits => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{txnid_most_bits => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{error => F@_4}
         end,
    if F@_5 == '$undef' -> S4;
       true -> S4#{message => F@_5}
    end.

d_field_CommandEndTxnOnSubscriptionResponse_request_id(<<1:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, F@_1, F@_2, F@_3,
                                                       F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscriptionResponse_request_id(Rest,
                                                           N + 7,
                                                           X bsl N + Acc,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData);
d_field_CommandEndTxnOnSubscriptionResponse_request_id(<<0:1,
                                                         X:7, Rest/binary>>,
                                                       N, Acc, _, F@_2, F@_3,
                                                       F@_4, F@_5,
                                                       TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(RestF,
                                                           0,
                                                           0,
                                                           NewFValue,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

d_field_CommandEndTxnOnSubscriptionResponse_txnid_least_bits(<<1:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, F@_2,
                                                             F@_3, F@_4, F@_5,
                                                             TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscriptionResponse_txnid_least_bits(Rest,
                                                                 N + 7,
                                                                 X bsl N + Acc,
                                                                 F@_1,
                                                                 F@_2,
                                                                 F@_3,
                                                                 F@_4,
                                                                 F@_5,
                                                                 TrUserData);
d_field_CommandEndTxnOnSubscriptionResponse_txnid_least_bits(<<0:1,
                                                               X:7,
                                                               Rest/binary>>,
                                                             N, Acc, F@_1, _,
                                                             F@_3, F@_4, F@_5,
                                                             TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           NewFValue,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

d_field_CommandEndTxnOnSubscriptionResponse_txnid_most_bits(<<1:1,
                                                              X:7,
                                                              Rest/binary>>,
                                                            N, Acc, F@_1, F@_2,
                                                            F@_3, F@_4, F@_5,
                                                            TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscriptionResponse_txnid_most_bits(Rest,
                                                                N + 7,
                                                                X bsl N + Acc,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                TrUserData);
d_field_CommandEndTxnOnSubscriptionResponse_txnid_most_bits(<<0:1,
                                                              X:7,
                                                              Rest/binary>>,
                                                            N, Acc, F@_1, F@_2,
                                                            _, F@_4, F@_5,
                                                            TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc, TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           NewFValue,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

d_field_CommandEndTxnOnSubscriptionResponse_error(<<1:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3,
                                                  F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscriptionResponse_error(Rest,
                                                      N + 7,
                                                      X bsl N + Acc,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      TrUserData);
d_field_CommandEndTxnOnSubscriptionResponse_error(<<0:1,
                                                    X:7, Rest/binary>>,
                                                  N, Acc, F@_1, F@_2, F@_3, _,
                                                  F@_5, TrUserData) ->
    {NewFValue, RestF} = {id(d_enum_ServerError(begin
                                                    <<Res:32/signed-native>> =
                                                        <<(X bsl N +
                                                               Acc):32/unsigned-native>>,
                                                    id(Res, TrUserData)
                                                end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           NewFValue,
                                                           F@_5,
                                                           TrUserData).

d_field_CommandEndTxnOnSubscriptionResponse_message(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, TrUserData)
    when N < 57 ->
    d_field_CommandEndTxnOnSubscriptionResponse_message(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        TrUserData);
d_field_CommandEndTxnOnSubscriptionResponse_message(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, _, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Utf8:Len/binary, Rest2/binary>> = Rest,
                             {id(unicode:characters_to_list(Utf8, unicode),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(RestF,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           NewFValue,
                                                           TrUserData).

skip_varint_CommandEndTxnOnSubscriptionResponse(<<1:1,
                                                  _:7, Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, TrUserData) ->
    skip_varint_CommandEndTxnOnSubscriptionResponse(Rest,
                                                    Z1,
                                                    Z2,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    TrUserData);
skip_varint_CommandEndTxnOnSubscriptionResponse(<<0:1,
                                                  _:7, Rest/binary>>,
                                                Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                                F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

skip_length_delimited_CommandEndTxnOnSubscriptionResponse(<<1:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          TrUserData)
    when N < 57 ->
    skip_length_delimited_CommandEndTxnOnSubscriptionResponse(Rest,
                                                              N + 7,
                                                              X bsl N + Acc,
                                                              F@_1,
                                                              F@_2,
                                                              F@_3,
                                                              F@_4,
                                                              F@_5,
                                                              TrUserData);
skip_length_delimited_CommandEndTxnOnSubscriptionResponse(<<0:1,
                                                            X:7, Rest/binary>>,
                                                          N, Acc, F@_1, F@_2,
                                                          F@_3, F@_4, F@_5,
                                                          TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(Rest2,
                                                           0,
                                                           0,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

skip_group_CommandEndTxnOnSubscriptionResponse(Bin,
                                               FNum, Z2, F@_1, F@_2, F@_3, F@_4,
                                               F@_5, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(Rest,
                                                           0,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

skip_32_CommandEndTxnOnSubscriptionResponse(<<_:32,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

skip_64_CommandEndTxnOnSubscriptionResponse(<<_:64,
                                              Rest/binary>>,
                                            Z1, Z2, F@_1, F@_2, F@_3, F@_4,
                                            F@_5, TrUserData) ->
    dfp_read_field_def_CommandEndTxnOnSubscriptionResponse(Rest,
                                                           Z1,
                                                           Z2,
                                                           F@_1,
                                                           F@_2,
                                                           F@_3,
                                                           F@_4,
                                                           F@_5,
                                                           TrUserData).

decode_msg_BaseCommand(Bin, TrUserData) ->
    dfp_read_field_def_BaseCommand(Bin,
                                   0,
                                   0,
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   id('$undef', TrUserData),
                                   TrUserData).

dfp_read_field_def_BaseCommand(<<8, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_type(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
dfp_read_field_def_BaseCommand(<<18, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_connect(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                F@_9,
                                F@_10,
                                F@_11,
                                F@_12,
                                F@_13,
                                F@_14,
                                F@_15,
                                F@_16,
                                F@_17,
                                F@_18,
                                F@_19,
                                F@_20,
                                F@_21,
                                F@_22,
                                F@_23,
                                F@_24,
                                F@_25,
                                F@_26,
                                F@_27,
                                F@_28,
                                F@_29,
                                F@_30,
                                F@_31,
                                F@_32,
                                F@_33,
                                F@_34,
                                F@_35,
                                F@_36,
                                F@_37,
                                F@_38,
                                F@_39,
                                F@_40,
                                F@_41,
                                F@_42,
                                F@_43,
                                F@_44,
                                F@_45,
                                F@_46,
                                F@_47,
                                F@_48,
                                F@_49,
                                F@_50,
                                F@_51,
                                F@_52,
                                TrUserData);
dfp_read_field_def_BaseCommand(<<26, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_connected(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  F@_10,
                                  F@_11,
                                  F@_12,
                                  F@_13,
                                  F@_14,
                                  F@_15,
                                  F@_16,
                                  F@_17,
                                  F@_18,
                                  F@_19,
                                  F@_20,
                                  F@_21,
                                  F@_22,
                                  F@_23,
                                  F@_24,
                                  F@_25,
                                  F@_26,
                                  F@_27,
                                  F@_28,
                                  F@_29,
                                  F@_30,
                                  F@_31,
                                  F@_32,
                                  F@_33,
                                  F@_34,
                                  F@_35,
                                  F@_36,
                                  F@_37,
                                  F@_38,
                                  F@_39,
                                  F@_40,
                                  F@_41,
                                  F@_42,
                                  F@_43,
                                  F@_44,
                                  F@_45,
                                  F@_46,
                                  F@_47,
                                  F@_48,
                                  F@_49,
                                  F@_50,
                                  F@_51,
                                  F@_52,
                                  TrUserData);
dfp_read_field_def_BaseCommand(<<34, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_subscribe(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  F@_10,
                                  F@_11,
                                  F@_12,
                                  F@_13,
                                  F@_14,
                                  F@_15,
                                  F@_16,
                                  F@_17,
                                  F@_18,
                                  F@_19,
                                  F@_20,
                                  F@_21,
                                  F@_22,
                                  F@_23,
                                  F@_24,
                                  F@_25,
                                  F@_26,
                                  F@_27,
                                  F@_28,
                                  F@_29,
                                  F@_30,
                                  F@_31,
                                  F@_32,
                                  F@_33,
                                  F@_34,
                                  F@_35,
                                  F@_36,
                                  F@_37,
                                  F@_38,
                                  F@_39,
                                  F@_40,
                                  F@_41,
                                  F@_42,
                                  F@_43,
                                  F@_44,
                                  F@_45,
                                  F@_46,
                                  F@_47,
                                  F@_48,
                                  F@_49,
                                  F@_50,
                                  F@_51,
                                  F@_52,
                                  TrUserData);
dfp_read_field_def_BaseCommand(<<42, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_producer(Rest,
                                 Z1,
                                 Z2,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 F@_8,
                                 F@_9,
                                 F@_10,
                                 F@_11,
                                 F@_12,
                                 F@_13,
                                 F@_14,
                                 F@_15,
                                 F@_16,
                                 F@_17,
                                 F@_18,
                                 F@_19,
                                 F@_20,
                                 F@_21,
                                 F@_22,
                                 F@_23,
                                 F@_24,
                                 F@_25,
                                 F@_26,
                                 F@_27,
                                 F@_28,
                                 F@_29,
                                 F@_30,
                                 F@_31,
                                 F@_32,
                                 F@_33,
                                 F@_34,
                                 F@_35,
                                 F@_36,
                                 F@_37,
                                 F@_38,
                                 F@_39,
                                 F@_40,
                                 F@_41,
                                 F@_42,
                                 F@_43,
                                 F@_44,
                                 F@_45,
                                 F@_46,
                                 F@_47,
                                 F@_48,
                                 F@_49,
                                 F@_50,
                                 F@_51,
                                 F@_52,
                                 TrUserData);
dfp_read_field_def_BaseCommand(<<50, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_send(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
dfp_read_field_def_BaseCommand(<<58, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_send_receipt(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
dfp_read_field_def_BaseCommand(<<66, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_send_error(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData);
dfp_read_field_def_BaseCommand(<<74, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_message(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                F@_9,
                                F@_10,
                                F@_11,
                                F@_12,
                                F@_13,
                                F@_14,
                                F@_15,
                                F@_16,
                                F@_17,
                                F@_18,
                                F@_19,
                                F@_20,
                                F@_21,
                                F@_22,
                                F@_23,
                                F@_24,
                                F@_25,
                                F@_26,
                                F@_27,
                                F@_28,
                                F@_29,
                                F@_30,
                                F@_31,
                                F@_32,
                                F@_33,
                                F@_34,
                                F@_35,
                                F@_36,
                                F@_37,
                                F@_38,
                                F@_39,
                                F@_40,
                                F@_41,
                                F@_42,
                                F@_43,
                                F@_44,
                                F@_45,
                                F@_46,
                                F@_47,
                                F@_48,
                                F@_49,
                                F@_50,
                                F@_51,
                                F@_52,
                                TrUserData);
dfp_read_field_def_BaseCommand(<<82, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_ack(Rest,
                            Z1,
                            Z2,
                            F@_1,
                            F@_2,
                            F@_3,
                            F@_4,
                            F@_5,
                            F@_6,
                            F@_7,
                            F@_8,
                            F@_9,
                            F@_10,
                            F@_11,
                            F@_12,
                            F@_13,
                            F@_14,
                            F@_15,
                            F@_16,
                            F@_17,
                            F@_18,
                            F@_19,
                            F@_20,
                            F@_21,
                            F@_22,
                            F@_23,
                            F@_24,
                            F@_25,
                            F@_26,
                            F@_27,
                            F@_28,
                            F@_29,
                            F@_30,
                            F@_31,
                            F@_32,
                            F@_33,
                            F@_34,
                            F@_35,
                            F@_36,
                            F@_37,
                            F@_38,
                            F@_39,
                            F@_40,
                            F@_41,
                            F@_42,
                            F@_43,
                            F@_44,
                            F@_45,
                            F@_46,
                            F@_47,
                            F@_48,
                            F@_49,
                            F@_50,
                            F@_51,
                            F@_52,
                            TrUserData);
dfp_read_field_def_BaseCommand(<<90, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_flow(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
dfp_read_field_def_BaseCommand(<<98, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_unsubscribe(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    F@_18,
                                    F@_19,
                                    F@_20,
                                    F@_21,
                                    F@_22,
                                    F@_23,
                                    F@_24,
                                    F@_25,
                                    F@_26,
                                    F@_27,
                                    F@_28,
                                    F@_29,
                                    F@_30,
                                    F@_31,
                                    F@_32,
                                    F@_33,
                                    F@_34,
                                    F@_35,
                                    F@_36,
                                    F@_37,
                                    F@_38,
                                    F@_39,
                                    F@_40,
                                    F@_41,
                                    F@_42,
                                    F@_43,
                                    F@_44,
                                    F@_45,
                                    F@_46,
                                    F@_47,
                                    F@_48,
                                    F@_49,
                                    F@_50,
                                    F@_51,
                                    F@_52,
                                    TrUserData);
dfp_read_field_def_BaseCommand(<<106, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_success(Rest,
                                Z1,
                                Z2,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                F@_9,
                                F@_10,
                                F@_11,
                                F@_12,
                                F@_13,
                                F@_14,
                                F@_15,
                                F@_16,
                                F@_17,
                                F@_18,
                                F@_19,
                                F@_20,
                                F@_21,
                                F@_22,
                                F@_23,
                                F@_24,
                                F@_25,
                                F@_26,
                                F@_27,
                                F@_28,
                                F@_29,
                                F@_30,
                                F@_31,
                                F@_32,
                                F@_33,
                                F@_34,
                                F@_35,
                                F@_36,
                                F@_37,
                                F@_38,
                                F@_39,
                                F@_40,
                                F@_41,
                                F@_42,
                                F@_43,
                                F@_44,
                                F@_45,
                                F@_46,
                                F@_47,
                                F@_48,
                                F@_49,
                                F@_50,
                                F@_51,
                                F@_52,
                                TrUserData);
dfp_read_field_def_BaseCommand(<<114, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_error(Rest,
                              Z1,
                              Z2,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              F@_5,
                              F@_6,
                              F@_7,
                              F@_8,
                              F@_9,
                              F@_10,
                              F@_11,
                              F@_12,
                              F@_13,
                              F@_14,
                              F@_15,
                              F@_16,
                              F@_17,
                              F@_18,
                              F@_19,
                              F@_20,
                              F@_21,
                              F@_22,
                              F@_23,
                              F@_24,
                              F@_25,
                              F@_26,
                              F@_27,
                              F@_28,
                              F@_29,
                              F@_30,
                              F@_31,
                              F@_32,
                              F@_33,
                              F@_34,
                              F@_35,
                              F@_36,
                              F@_37,
                              F@_38,
                              F@_39,
                              F@_40,
                              F@_41,
                              F@_42,
                              F@_43,
                              F@_44,
                              F@_45,
                              F@_46,
                              F@_47,
                              F@_48,
                              F@_49,
                              F@_50,
                              F@_51,
                              F@_52,
                              TrUserData);
dfp_read_field_def_BaseCommand(<<122, Rest/binary>>, Z1,
                               Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_close_producer(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
dfp_read_field_def_BaseCommand(<<130, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_close_consumer(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
dfp_read_field_def_BaseCommand(<<138, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_producer_success(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         F@_29,
                                         F@_30,
                                         F@_31,
                                         F@_32,
                                         F@_33,
                                         F@_34,
                                         F@_35,
                                         F@_36,
                                         F@_37,
                                         F@_38,
                                         F@_39,
                                         F@_40,
                                         F@_41,
                                         F@_42,
                                         F@_43,
                                         F@_44,
                                         F@_45,
                                         F@_46,
                                         F@_47,
                                         F@_48,
                                         F@_49,
                                         F@_50,
                                         F@_51,
                                         F@_52,
                                         TrUserData);
dfp_read_field_def_BaseCommand(<<146, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_ping(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
dfp_read_field_def_BaseCommand(<<154, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_pong(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
dfp_read_field_def_BaseCommand(<<162, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_redeliverUnacknowledgedMessages(Rest,
                                                        Z1,
                                                        Z2,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        F@_11,
                                                        F@_12,
                                                        F@_13,
                                                        F@_14,
                                                        F@_15,
                                                        F@_16,
                                                        F@_17,
                                                        F@_18,
                                                        F@_19,
                                                        F@_20,
                                                        F@_21,
                                                        F@_22,
                                                        F@_23,
                                                        F@_24,
                                                        F@_25,
                                                        F@_26,
                                                        F@_27,
                                                        F@_28,
                                                        F@_29,
                                                        F@_30,
                                                        F@_31,
                                                        F@_32,
                                                        F@_33,
                                                        F@_34,
                                                        F@_35,
                                                        F@_36,
                                                        F@_37,
                                                        F@_38,
                                                        F@_39,
                                                        F@_40,
                                                        F@_41,
                                                        F@_42,
                                                        F@_43,
                                                        F@_44,
                                                        F@_45,
                                                        F@_46,
                                                        F@_47,
                                                        F@_48,
                                                        F@_49,
                                                        F@_50,
                                                        F@_51,
                                                        F@_52,
                                                        TrUserData);
dfp_read_field_def_BaseCommand(<<170, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_partitionMetadata(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
dfp_read_field_def_BaseCommand(<<178, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_partitionMetadataResponse(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
dfp_read_field_def_BaseCommand(<<186, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_lookupTopic(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    F@_18,
                                    F@_19,
                                    F@_20,
                                    F@_21,
                                    F@_22,
                                    F@_23,
                                    F@_24,
                                    F@_25,
                                    F@_26,
                                    F@_27,
                                    F@_28,
                                    F@_29,
                                    F@_30,
                                    F@_31,
                                    F@_32,
                                    F@_33,
                                    F@_34,
                                    F@_35,
                                    F@_36,
                                    F@_37,
                                    F@_38,
                                    F@_39,
                                    F@_40,
                                    F@_41,
                                    F@_42,
                                    F@_43,
                                    F@_44,
                                    F@_45,
                                    F@_46,
                                    F@_47,
                                    F@_48,
                                    F@_49,
                                    F@_50,
                                    F@_51,
                                    F@_52,
                                    TrUserData);
dfp_read_field_def_BaseCommand(<<194, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_lookupTopicResponse(Rest,
                                            Z1,
                                            Z2,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            F@_29,
                                            F@_30,
                                            F@_31,
                                            F@_32,
                                            F@_33,
                                            F@_34,
                                            F@_35,
                                            F@_36,
                                            F@_37,
                                            F@_38,
                                            F@_39,
                                            F@_40,
                                            F@_41,
                                            F@_42,
                                            F@_43,
                                            F@_44,
                                            F@_45,
                                            F@_46,
                                            F@_47,
                                            F@_48,
                                            F@_49,
                                            F@_50,
                                            F@_51,
                                            F@_52,
                                            TrUserData);
dfp_read_field_def_BaseCommand(<<202, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_consumerStats(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      F@_18,
                                      F@_19,
                                      F@_20,
                                      F@_21,
                                      F@_22,
                                      F@_23,
                                      F@_24,
                                      F@_25,
                                      F@_26,
                                      F@_27,
                                      F@_28,
                                      F@_29,
                                      F@_30,
                                      F@_31,
                                      F@_32,
                                      F@_33,
                                      F@_34,
                                      F@_35,
                                      F@_36,
                                      F@_37,
                                      F@_38,
                                      F@_39,
                                      F@_40,
                                      F@_41,
                                      F@_42,
                                      F@_43,
                                      F@_44,
                                      F@_45,
                                      F@_46,
                                      F@_47,
                                      F@_48,
                                      F@_49,
                                      F@_50,
                                      F@_51,
                                      F@_52,
                                      TrUserData);
dfp_read_field_def_BaseCommand(<<210, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_consumerStatsResponse(Rest,
                                              Z1,
                                              Z2,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              F@_18,
                                              F@_19,
                                              F@_20,
                                              F@_21,
                                              F@_22,
                                              F@_23,
                                              F@_24,
                                              F@_25,
                                              F@_26,
                                              F@_27,
                                              F@_28,
                                              F@_29,
                                              F@_30,
                                              F@_31,
                                              F@_32,
                                              F@_33,
                                              F@_34,
                                              F@_35,
                                              F@_36,
                                              F@_37,
                                              F@_38,
                                              F@_39,
                                              F@_40,
                                              F@_41,
                                              F@_42,
                                              F@_43,
                                              F@_44,
                                              F@_45,
                                              F@_46,
                                              F@_47,
                                              F@_48,
                                              F@_49,
                                              F@_50,
                                              F@_51,
                                              F@_52,
                                              TrUserData);
dfp_read_field_def_BaseCommand(<<218, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_reachedEndOfTopic(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
dfp_read_field_def_BaseCommand(<<226, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_seek(Rest,
                             Z1,
                             Z2,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
dfp_read_field_def_BaseCommand(<<234, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_getLastMessageId(Rest,
                                         Z1,
                                         Z2,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         F@_29,
                                         F@_30,
                                         F@_31,
                                         F@_32,
                                         F@_33,
                                         F@_34,
                                         F@_35,
                                         F@_36,
                                         F@_37,
                                         F@_38,
                                         F@_39,
                                         F@_40,
                                         F@_41,
                                         F@_42,
                                         F@_43,
                                         F@_44,
                                         F@_45,
                                         F@_46,
                                         F@_47,
                                         F@_48,
                                         F@_49,
                                         F@_50,
                                         F@_51,
                                         F@_52,
                                         TrUserData);
dfp_read_field_def_BaseCommand(<<242, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_getLastMessageIdResponse(Rest,
                                                 Z1,
                                                 Z2,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 F@_29,
                                                 F@_30,
                                                 F@_31,
                                                 F@_32,
                                                 F@_33,
                                                 F@_34,
                                                 F@_35,
                                                 F@_36,
                                                 F@_37,
                                                 F@_38,
                                                 F@_39,
                                                 F@_40,
                                                 F@_41,
                                                 F@_42,
                                                 F@_43,
                                                 F@_44,
                                                 F@_45,
                                                 F@_46,
                                                 F@_47,
                                                 F@_48,
                                                 F@_49,
                                                 F@_50,
                                                 F@_51,
                                                 F@_52,
                                                 TrUserData);
dfp_read_field_def_BaseCommand(<<250, 1, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_active_consumer_change(Rest,
                                               Z1,
                                               Z2,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               F@_29,
                                               F@_30,
                                               F@_31,
                                               F@_32,
                                               F@_33,
                                               F@_34,
                                               F@_35,
                                               F@_36,
                                               F@_37,
                                               F@_38,
                                               F@_39,
                                               F@_40,
                                               F@_41,
                                               F@_42,
                                               F@_43,
                                               F@_44,
                                               F@_45,
                                               F@_46,
                                               F@_47,
                                               F@_48,
                                               F@_49,
                                               F@_50,
                                               F@_51,
                                               F@_52,
                                               TrUserData);
dfp_read_field_def_BaseCommand(<<130, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_getTopicsOfNamespace(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             F@_29,
                                             F@_30,
                                             F@_31,
                                             F@_32,
                                             F@_33,
                                             F@_34,
                                             F@_35,
                                             F@_36,
                                             F@_37,
                                             F@_38,
                                             F@_39,
                                             F@_40,
                                             F@_41,
                                             F@_42,
                                             F@_43,
                                             F@_44,
                                             F@_45,
                                             F@_46,
                                             F@_47,
                                             F@_48,
                                             F@_49,
                                             F@_50,
                                             F@_51,
                                             F@_52,
                                             TrUserData);
dfp_read_field_def_BaseCommand(<<138, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_getTopicsOfNamespaceResponse(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
dfp_read_field_def_BaseCommand(<<146, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_getSchema(Rest,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  F@_10,
                                  F@_11,
                                  F@_12,
                                  F@_13,
                                  F@_14,
                                  F@_15,
                                  F@_16,
                                  F@_17,
                                  F@_18,
                                  F@_19,
                                  F@_20,
                                  F@_21,
                                  F@_22,
                                  F@_23,
                                  F@_24,
                                  F@_25,
                                  F@_26,
                                  F@_27,
                                  F@_28,
                                  F@_29,
                                  F@_30,
                                  F@_31,
                                  F@_32,
                                  F@_33,
                                  F@_34,
                                  F@_35,
                                  F@_36,
                                  F@_37,
                                  F@_38,
                                  F@_39,
                                  F@_40,
                                  F@_41,
                                  F@_42,
                                  F@_43,
                                  F@_44,
                                  F@_45,
                                  F@_46,
                                  F@_47,
                                  F@_48,
                                  F@_49,
                                  F@_50,
                                  F@_51,
                                  F@_52,
                                  TrUserData);
dfp_read_field_def_BaseCommand(<<154, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_getSchemaResponse(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
dfp_read_field_def_BaseCommand(<<162, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_authChallenge(Rest,
                                      Z1,
                                      Z2,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      F@_18,
                                      F@_19,
                                      F@_20,
                                      F@_21,
                                      F@_22,
                                      F@_23,
                                      F@_24,
                                      F@_25,
                                      F@_26,
                                      F@_27,
                                      F@_28,
                                      F@_29,
                                      F@_30,
                                      F@_31,
                                      F@_32,
                                      F@_33,
                                      F@_34,
                                      F@_35,
                                      F@_36,
                                      F@_37,
                                      F@_38,
                                      F@_39,
                                      F@_40,
                                      F@_41,
                                      F@_42,
                                      F@_43,
                                      F@_44,
                                      F@_45,
                                      F@_46,
                                      F@_47,
                                      F@_48,
                                      F@_49,
                                      F@_50,
                                      F@_51,
                                      F@_52,
                                      TrUserData);
dfp_read_field_def_BaseCommand(<<170, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_authResponse(Rest,
                                     Z1,
                                     Z2,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
dfp_read_field_def_BaseCommand(<<178, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_ackResponse(Rest,
                                    Z1,
                                    Z2,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    F@_18,
                                    F@_19,
                                    F@_20,
                                    F@_21,
                                    F@_22,
                                    F@_23,
                                    F@_24,
                                    F@_25,
                                    F@_26,
                                    F@_27,
                                    F@_28,
                                    F@_29,
                                    F@_30,
                                    F@_31,
                                    F@_32,
                                    F@_33,
                                    F@_34,
                                    F@_35,
                                    F@_36,
                                    F@_37,
                                    F@_38,
                                    F@_39,
                                    F@_40,
                                    F@_41,
                                    F@_42,
                                    F@_43,
                                    F@_44,
                                    F@_45,
                                    F@_46,
                                    F@_47,
                                    F@_48,
                                    F@_49,
                                    F@_50,
                                    F@_51,
                                    F@_52,
                                    TrUserData);
dfp_read_field_def_BaseCommand(<<186, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_getOrCreateSchema(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
dfp_read_field_def_BaseCommand(<<194, 2, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_getOrCreateSchemaResponse(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
dfp_read_field_def_BaseCommand(<<146, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_newTxn(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               F@_3,
                               F@_4,
                               F@_5,
                               F@_6,
                               F@_7,
                               F@_8,
                               F@_9,
                               F@_10,
                               F@_11,
                               F@_12,
                               F@_13,
                               F@_14,
                               F@_15,
                               F@_16,
                               F@_17,
                               F@_18,
                               F@_19,
                               F@_20,
                               F@_21,
                               F@_22,
                               F@_23,
                               F@_24,
                               F@_25,
                               F@_26,
                               F@_27,
                               F@_28,
                               F@_29,
                               F@_30,
                               F@_31,
                               F@_32,
                               F@_33,
                               F@_34,
                               F@_35,
                               F@_36,
                               F@_37,
                               F@_38,
                               F@_39,
                               F@_40,
                               F@_41,
                               F@_42,
                               F@_43,
                               F@_44,
                               F@_45,
                               F@_46,
                               F@_47,
                               F@_48,
                               F@_49,
                               F@_50,
                               F@_51,
                               F@_52,
                               TrUserData);
dfp_read_field_def_BaseCommand(<<154, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_newTxnResponse(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
dfp_read_field_def_BaseCommand(<<162, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_addPartitionToTxn(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
dfp_read_field_def_BaseCommand(<<170, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_addPartitionToTxnResponse(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
dfp_read_field_def_BaseCommand(<<178, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_addSubscriptionToTxn(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             F@_29,
                                             F@_30,
                                             F@_31,
                                             F@_32,
                                             F@_33,
                                             F@_34,
                                             F@_35,
                                             F@_36,
                                             F@_37,
                                             F@_38,
                                             F@_39,
                                             F@_40,
                                             F@_41,
                                             F@_42,
                                             F@_43,
                                             F@_44,
                                             F@_45,
                                             F@_46,
                                             F@_47,
                                             F@_48,
                                             F@_49,
                                             F@_50,
                                             F@_51,
                                             F@_52,
                                             TrUserData);
dfp_read_field_def_BaseCommand(<<186, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_addSubscriptionToTxnResponse(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
dfp_read_field_def_BaseCommand(<<194, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_endTxn(Rest,
                               Z1,
                               Z2,
                               F@_1,
                               F@_2,
                               F@_3,
                               F@_4,
                               F@_5,
                               F@_6,
                               F@_7,
                               F@_8,
                               F@_9,
                               F@_10,
                               F@_11,
                               F@_12,
                               F@_13,
                               F@_14,
                               F@_15,
                               F@_16,
                               F@_17,
                               F@_18,
                               F@_19,
                               F@_20,
                               F@_21,
                               F@_22,
                               F@_23,
                               F@_24,
                               F@_25,
                               F@_26,
                               F@_27,
                               F@_28,
                               F@_29,
                               F@_30,
                               F@_31,
                               F@_32,
                               F@_33,
                               F@_34,
                               F@_35,
                               F@_36,
                               F@_37,
                               F@_38,
                               F@_39,
                               F@_40,
                               F@_41,
                               F@_42,
                               F@_43,
                               F@_44,
                               F@_45,
                               F@_46,
                               F@_47,
                               F@_48,
                               F@_49,
                               F@_50,
                               F@_51,
                               F@_52,
                               TrUserData);
dfp_read_field_def_BaseCommand(<<202, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_endTxnResponse(Rest,
                                       Z1,
                                       Z2,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
dfp_read_field_def_BaseCommand(<<210, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_endTxnOnPartition(Rest,
                                          Z1,
                                          Z2,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
dfp_read_field_def_BaseCommand(<<218, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_endTxnOnPartitionResponse(Rest,
                                                  Z1,
                                                  Z2,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
dfp_read_field_def_BaseCommand(<<226, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_endTxnOnSubscription(Rest,
                                             Z1,
                                             Z2,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             F@_29,
                                             F@_30,
                                             F@_31,
                                             F@_32,
                                             F@_33,
                                             F@_34,
                                             F@_35,
                                             F@_36,
                                             F@_37,
                                             F@_38,
                                             F@_39,
                                             F@_40,
                                             F@_41,
                                             F@_42,
                                             F@_43,
                                             F@_44,
                                             F@_45,
                                             F@_46,
                                             F@_47,
                                             F@_48,
                                             F@_49,
                                             F@_50,
                                             F@_51,
                                             F@_52,
                                             TrUserData);
dfp_read_field_def_BaseCommand(<<234, 3, Rest/binary>>,
                               Z1, Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    d_field_BaseCommand_endTxnOnSubscriptionResponse(Rest,
                                                     Z1,
                                                     Z2,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
dfp_read_field_def_BaseCommand(<<>>, 0, 0, F@_1, F@_2,
                               F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                               F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                               F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                               F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                               F@_32, F@_33, F@_34, F@_35, F@_36, F@_37, F@_38,
                               F@_39, F@_40, F@_41, F@_42, F@_43, F@_44, F@_45,
                               F@_46, F@_47, F@_48, F@_49, F@_50, F@_51, F@_52,
                               _) ->
    S1 = #{type => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{connect => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{connected => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{subscribe => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{producer => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{send => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{send_receipt => F@_7}
         end,
    S8 = if F@_8 == '$undef' -> S7;
            true -> S7#{send_error => F@_8}
         end,
    S9 = if F@_9 == '$undef' -> S8;
            true -> S8#{message => F@_9}
         end,
    S10 = if F@_10 == '$undef' -> S9;
             true -> S9#{ack => F@_10}
          end,
    S11 = if F@_11 == '$undef' -> S10;
             true -> S10#{flow => F@_11}
          end,
    S12 = if F@_12 == '$undef' -> S11;
             true -> S11#{unsubscribe => F@_12}
          end,
    S13 = if F@_13 == '$undef' -> S12;
             true -> S12#{success => F@_13}
          end,
    S14 = if F@_14 == '$undef' -> S13;
             true -> S13#{error => F@_14}
          end,
    S15 = if F@_15 == '$undef' -> S14;
             true -> S14#{close_producer => F@_15}
          end,
    S16 = if F@_16 == '$undef' -> S15;
             true -> S15#{close_consumer => F@_16}
          end,
    S17 = if F@_17 == '$undef' -> S16;
             true -> S16#{producer_success => F@_17}
          end,
    S18 = if F@_18 == '$undef' -> S17;
             true -> S17#{ping => F@_18}
          end,
    S19 = if F@_19 == '$undef' -> S18;
             true -> S18#{pong => F@_19}
          end,
    S20 = if F@_20 == '$undef' -> S19;
             true -> S19#{redeliverUnacknowledgedMessages => F@_20}
          end,
    S21 = if F@_21 == '$undef' -> S20;
             true -> S20#{partitionMetadata => F@_21}
          end,
    S22 = if F@_22 == '$undef' -> S21;
             true -> S21#{partitionMetadataResponse => F@_22}
          end,
    S23 = if F@_23 == '$undef' -> S22;
             true -> S22#{lookupTopic => F@_23}
          end,
    S24 = if F@_24 == '$undef' -> S23;
             true -> S23#{lookupTopicResponse => F@_24}
          end,
    S25 = if F@_25 == '$undef' -> S24;
             true -> S24#{consumerStats => F@_25}
          end,
    S26 = if F@_26 == '$undef' -> S25;
             true -> S25#{consumerStatsResponse => F@_26}
          end,
    S27 = if F@_27 == '$undef' -> S26;
             true -> S26#{reachedEndOfTopic => F@_27}
          end,
    S28 = if F@_28 == '$undef' -> S27;
             true -> S27#{seek => F@_28}
          end,
    S29 = if F@_29 == '$undef' -> S28;
             true -> S28#{getLastMessageId => F@_29}
          end,
    S30 = if F@_30 == '$undef' -> S29;
             true -> S29#{getLastMessageIdResponse => F@_30}
          end,
    S31 = if F@_31 == '$undef' -> S30;
             true -> S30#{active_consumer_change => F@_31}
          end,
    S32 = if F@_32 == '$undef' -> S31;
             true -> S31#{getTopicsOfNamespace => F@_32}
          end,
    S33 = if F@_33 == '$undef' -> S32;
             true -> S32#{getTopicsOfNamespaceResponse => F@_33}
          end,
    S34 = if F@_34 == '$undef' -> S33;
             true -> S33#{getSchema => F@_34}
          end,
    S35 = if F@_35 == '$undef' -> S34;
             true -> S34#{getSchemaResponse => F@_35}
          end,
    S36 = if F@_36 == '$undef' -> S35;
             true -> S35#{authChallenge => F@_36}
          end,
    S37 = if F@_37 == '$undef' -> S36;
             true -> S36#{authResponse => F@_37}
          end,
    S38 = if F@_38 == '$undef' -> S37;
             true -> S37#{ackResponse => F@_38}
          end,
    S39 = if F@_39 == '$undef' -> S38;
             true -> S38#{getOrCreateSchema => F@_39}
          end,
    S40 = if F@_40 == '$undef' -> S39;
             true -> S39#{getOrCreateSchemaResponse => F@_40}
          end,
    S41 = if F@_41 == '$undef' -> S40;
             true -> S40#{newTxn => F@_41}
          end,
    S42 = if F@_42 == '$undef' -> S41;
             true -> S41#{newTxnResponse => F@_42}
          end,
    S43 = if F@_43 == '$undef' -> S42;
             true -> S42#{addPartitionToTxn => F@_43}
          end,
    S44 = if F@_44 == '$undef' -> S43;
             true -> S43#{addPartitionToTxnResponse => F@_44}
          end,
    S45 = if F@_45 == '$undef' -> S44;
             true -> S44#{addSubscriptionToTxn => F@_45}
          end,
    S46 = if F@_46 == '$undef' -> S45;
             true -> S45#{addSubscriptionToTxnResponse => F@_46}
          end,
    S47 = if F@_47 == '$undef' -> S46;
             true -> S46#{endTxn => F@_47}
          end,
    S48 = if F@_48 == '$undef' -> S47;
             true -> S47#{endTxnResponse => F@_48}
          end,
    S49 = if F@_49 == '$undef' -> S48;
             true -> S48#{endTxnOnPartition => F@_49}
          end,
    S50 = if F@_50 == '$undef' -> S49;
             true -> S49#{endTxnOnPartitionResponse => F@_50}
          end,
    S51 = if F@_51 == '$undef' -> S50;
             true -> S50#{endTxnOnSubscription => F@_51}
          end,
    if F@_52 == '$undef' -> S51;
       true -> S51#{endTxnOnSubscriptionResponse => F@_52}
    end;
dfp_read_field_def_BaseCommand(Other, Z1, Z2, F@_1,
                               F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                               F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                               F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                               F@_24, F@_25, F@_26, F@_27, F@_28, F@_29, F@_30,
                               F@_31, F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                               F@_38, F@_39, F@_40, F@_41, F@_42, F@_43, F@_44,
                               F@_45, F@_46, F@_47, F@_48, F@_49, F@_50, F@_51,
                               F@_52, TrUserData) ->
    dg_read_field_def_BaseCommand(Other,
                                  Z1,
                                  Z2,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  F@_10,
                                  F@_11,
                                  F@_12,
                                  F@_13,
                                  F@_14,
                                  F@_15,
                                  F@_16,
                                  F@_17,
                                  F@_18,
                                  F@_19,
                                  F@_20,
                                  F@_21,
                                  F@_22,
                                  F@_23,
                                  F@_24,
                                  F@_25,
                                  F@_26,
                                  F@_27,
                                  F@_28,
                                  F@_29,
                                  F@_30,
                                  F@_31,
                                  F@_32,
                                  F@_33,
                                  F@_34,
                                  F@_35,
                                  F@_36,
                                  F@_37,
                                  F@_38,
                                  F@_39,
                                  F@_40,
                                  F@_41,
                                  F@_42,
                                  F@_43,
                                  F@_44,
                                  F@_45,
                                  F@_46,
                                  F@_47,
                                  F@_48,
                                  F@_49,
                                  F@_50,
                                  F@_51,
                                  F@_52,
                                  TrUserData).

dg_read_field_def_BaseCommand(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                              F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                              F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                              F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                              F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                              F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                              F@_50, F@_51, F@_52, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_BaseCommand(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  F@_10,
                                  F@_11,
                                  F@_12,
                                  F@_13,
                                  F@_14,
                                  F@_15,
                                  F@_16,
                                  F@_17,
                                  F@_18,
                                  F@_19,
                                  F@_20,
                                  F@_21,
                                  F@_22,
                                  F@_23,
                                  F@_24,
                                  F@_25,
                                  F@_26,
                                  F@_27,
                                  F@_28,
                                  F@_29,
                                  F@_30,
                                  F@_31,
                                  F@_32,
                                  F@_33,
                                  F@_34,
                                  F@_35,
                                  F@_36,
                                  F@_37,
                                  F@_38,
                                  F@_39,
                                  F@_40,
                                  F@_41,
                                  F@_42,
                                  F@_43,
                                  F@_44,
                                  F@_45,
                                  F@_46,
                                  F@_47,
                                  F@_48,
                                  F@_49,
                                  F@_50,
                                  F@_51,
                                  F@_52,
                                  TrUserData);
dg_read_field_def_BaseCommand(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                              F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                              F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                              F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                              F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                              F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                              F@_50, F@_51, F@_52, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 ->
            d_field_BaseCommand_type(Rest,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
        18 ->
            d_field_BaseCommand_connect(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        F@_29,
                                        F@_30,
                                        F@_31,
                                        F@_32,
                                        F@_33,
                                        F@_34,
                                        F@_35,
                                        F@_36,
                                        F@_37,
                                        F@_38,
                                        F@_39,
                                        F@_40,
                                        F@_41,
                                        F@_42,
                                        F@_43,
                                        F@_44,
                                        F@_45,
                                        F@_46,
                                        F@_47,
                                        F@_48,
                                        F@_49,
                                        F@_50,
                                        F@_51,
                                        F@_52,
                                        TrUserData);
        26 ->
            d_field_BaseCommand_connected(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
        34 ->
            d_field_BaseCommand_subscribe(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
        42 ->
            d_field_BaseCommand_producer(Rest,
                                         0,
                                         0,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         F@_29,
                                         F@_30,
                                         F@_31,
                                         F@_32,
                                         F@_33,
                                         F@_34,
                                         F@_35,
                                         F@_36,
                                         F@_37,
                                         F@_38,
                                         F@_39,
                                         F@_40,
                                         F@_41,
                                         F@_42,
                                         F@_43,
                                         F@_44,
                                         F@_45,
                                         F@_46,
                                         F@_47,
                                         F@_48,
                                         F@_49,
                                         F@_50,
                                         F@_51,
                                         F@_52,
                                         TrUserData);
        50 ->
            d_field_BaseCommand_send(Rest,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
        58 ->
            d_field_BaseCommand_send_receipt(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             F@_29,
                                             F@_30,
                                             F@_31,
                                             F@_32,
                                             F@_33,
                                             F@_34,
                                             F@_35,
                                             F@_36,
                                             F@_37,
                                             F@_38,
                                             F@_39,
                                             F@_40,
                                             F@_41,
                                             F@_42,
                                             F@_43,
                                             F@_44,
                                             F@_45,
                                             F@_46,
                                             F@_47,
                                             F@_48,
                                             F@_49,
                                             F@_50,
                                             F@_51,
                                             F@_52,
                                             TrUserData);
        66 ->
            d_field_BaseCommand_send_error(Rest,
                                           0,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           F@_18,
                                           F@_19,
                                           F@_20,
                                           F@_21,
                                           F@_22,
                                           F@_23,
                                           F@_24,
                                           F@_25,
                                           F@_26,
                                           F@_27,
                                           F@_28,
                                           F@_29,
                                           F@_30,
                                           F@_31,
                                           F@_32,
                                           F@_33,
                                           F@_34,
                                           F@_35,
                                           F@_36,
                                           F@_37,
                                           F@_38,
                                           F@_39,
                                           F@_40,
                                           F@_41,
                                           F@_42,
                                           F@_43,
                                           F@_44,
                                           F@_45,
                                           F@_46,
                                           F@_47,
                                           F@_48,
                                           F@_49,
                                           F@_50,
                                           F@_51,
                                           F@_52,
                                           TrUserData);
        74 ->
            d_field_BaseCommand_message(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        F@_29,
                                        F@_30,
                                        F@_31,
                                        F@_32,
                                        F@_33,
                                        F@_34,
                                        F@_35,
                                        F@_36,
                                        F@_37,
                                        F@_38,
                                        F@_39,
                                        F@_40,
                                        F@_41,
                                        F@_42,
                                        F@_43,
                                        F@_44,
                                        F@_45,
                                        F@_46,
                                        F@_47,
                                        F@_48,
                                        F@_49,
                                        F@_50,
                                        F@_51,
                                        F@_52,
                                        TrUserData);
        82 ->
            d_field_BaseCommand_ack(Rest,
                                    0,
                                    0,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    F@_18,
                                    F@_19,
                                    F@_20,
                                    F@_21,
                                    F@_22,
                                    F@_23,
                                    F@_24,
                                    F@_25,
                                    F@_26,
                                    F@_27,
                                    F@_28,
                                    F@_29,
                                    F@_30,
                                    F@_31,
                                    F@_32,
                                    F@_33,
                                    F@_34,
                                    F@_35,
                                    F@_36,
                                    F@_37,
                                    F@_38,
                                    F@_39,
                                    F@_40,
                                    F@_41,
                                    F@_42,
                                    F@_43,
                                    F@_44,
                                    F@_45,
                                    F@_46,
                                    F@_47,
                                    F@_48,
                                    F@_49,
                                    F@_50,
                                    F@_51,
                                    F@_52,
                                    TrUserData);
        90 ->
            d_field_BaseCommand_flow(Rest,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
        98 ->
            d_field_BaseCommand_unsubscribe(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            F@_29,
                                            F@_30,
                                            F@_31,
                                            F@_32,
                                            F@_33,
                                            F@_34,
                                            F@_35,
                                            F@_36,
                                            F@_37,
                                            F@_38,
                                            F@_39,
                                            F@_40,
                                            F@_41,
                                            F@_42,
                                            F@_43,
                                            F@_44,
                                            F@_45,
                                            F@_46,
                                            F@_47,
                                            F@_48,
                                            F@_49,
                                            F@_50,
                                            F@_51,
                                            F@_52,
                                            TrUserData);
        106 ->
            d_field_BaseCommand_success(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        F@_29,
                                        F@_30,
                                        F@_31,
                                        F@_32,
                                        F@_33,
                                        F@_34,
                                        F@_35,
                                        F@_36,
                                        F@_37,
                                        F@_38,
                                        F@_39,
                                        F@_40,
                                        F@_41,
                                        F@_42,
                                        F@_43,
                                        F@_44,
                                        F@_45,
                                        F@_46,
                                        F@_47,
                                        F@_48,
                                        F@_49,
                                        F@_50,
                                        F@_51,
                                        F@_52,
                                        TrUserData);
        114 ->
            d_field_BaseCommand_error(Rest,
                                      0,
                                      0,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      F@_18,
                                      F@_19,
                                      F@_20,
                                      F@_21,
                                      F@_22,
                                      F@_23,
                                      F@_24,
                                      F@_25,
                                      F@_26,
                                      F@_27,
                                      F@_28,
                                      F@_29,
                                      F@_30,
                                      F@_31,
                                      F@_32,
                                      F@_33,
                                      F@_34,
                                      F@_35,
                                      F@_36,
                                      F@_37,
                                      F@_38,
                                      F@_39,
                                      F@_40,
                                      F@_41,
                                      F@_42,
                                      F@_43,
                                      F@_44,
                                      F@_45,
                                      F@_46,
                                      F@_47,
                                      F@_48,
                                      F@_49,
                                      F@_50,
                                      F@_51,
                                      F@_52,
                                      TrUserData);
        122 ->
            d_field_BaseCommand_close_producer(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               F@_29,
                                               F@_30,
                                               F@_31,
                                               F@_32,
                                               F@_33,
                                               F@_34,
                                               F@_35,
                                               F@_36,
                                               F@_37,
                                               F@_38,
                                               F@_39,
                                               F@_40,
                                               F@_41,
                                               F@_42,
                                               F@_43,
                                               F@_44,
                                               F@_45,
                                               F@_46,
                                               F@_47,
                                               F@_48,
                                               F@_49,
                                               F@_50,
                                               F@_51,
                                               F@_52,
                                               TrUserData);
        130 ->
            d_field_BaseCommand_close_consumer(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               F@_29,
                                               F@_30,
                                               F@_31,
                                               F@_32,
                                               F@_33,
                                               F@_34,
                                               F@_35,
                                               F@_36,
                                               F@_37,
                                               F@_38,
                                               F@_39,
                                               F@_40,
                                               F@_41,
                                               F@_42,
                                               F@_43,
                                               F@_44,
                                               F@_45,
                                               F@_46,
                                               F@_47,
                                               F@_48,
                                               F@_49,
                                               F@_50,
                                               F@_51,
                                               F@_52,
                                               TrUserData);
        138 ->
            d_field_BaseCommand_producer_success(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 F@_29,
                                                 F@_30,
                                                 F@_31,
                                                 F@_32,
                                                 F@_33,
                                                 F@_34,
                                                 F@_35,
                                                 F@_36,
                                                 F@_37,
                                                 F@_38,
                                                 F@_39,
                                                 F@_40,
                                                 F@_41,
                                                 F@_42,
                                                 F@_43,
                                                 F@_44,
                                                 F@_45,
                                                 F@_46,
                                                 F@_47,
                                                 F@_48,
                                                 F@_49,
                                                 F@_50,
                                                 F@_51,
                                                 F@_52,
                                                 TrUserData);
        146 ->
            d_field_BaseCommand_ping(Rest,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
        154 ->
            d_field_BaseCommand_pong(Rest,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
        162 ->
            d_field_BaseCommand_redeliverUnacknowledgedMessages(Rest,
                                                                0,
                                                                0,
                                                                F@_1,
                                                                F@_2,
                                                                F@_3,
                                                                F@_4,
                                                                F@_5,
                                                                F@_6,
                                                                F@_7,
                                                                F@_8,
                                                                F@_9,
                                                                F@_10,
                                                                F@_11,
                                                                F@_12,
                                                                F@_13,
                                                                F@_14,
                                                                F@_15,
                                                                F@_16,
                                                                F@_17,
                                                                F@_18,
                                                                F@_19,
                                                                F@_20,
                                                                F@_21,
                                                                F@_22,
                                                                F@_23,
                                                                F@_24,
                                                                F@_25,
                                                                F@_26,
                                                                F@_27,
                                                                F@_28,
                                                                F@_29,
                                                                F@_30,
                                                                F@_31,
                                                                F@_32,
                                                                F@_33,
                                                                F@_34,
                                                                F@_35,
                                                                F@_36,
                                                                F@_37,
                                                                F@_38,
                                                                F@_39,
                                                                F@_40,
                                                                F@_41,
                                                                F@_42,
                                                                F@_43,
                                                                F@_44,
                                                                F@_45,
                                                                F@_46,
                                                                F@_47,
                                                                F@_48,
                                                                F@_49,
                                                                F@_50,
                                                                F@_51,
                                                                F@_52,
                                                                TrUserData);
        170 ->
            d_field_BaseCommand_partitionMetadata(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
        178 ->
            d_field_BaseCommand_partitionMetadataResponse(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          F@_18,
                                                          F@_19,
                                                          F@_20,
                                                          F@_21,
                                                          F@_22,
                                                          F@_23,
                                                          F@_24,
                                                          F@_25,
                                                          F@_26,
                                                          F@_27,
                                                          F@_28,
                                                          F@_29,
                                                          F@_30,
                                                          F@_31,
                                                          F@_32,
                                                          F@_33,
                                                          F@_34,
                                                          F@_35,
                                                          F@_36,
                                                          F@_37,
                                                          F@_38,
                                                          F@_39,
                                                          F@_40,
                                                          F@_41,
                                                          F@_42,
                                                          F@_43,
                                                          F@_44,
                                                          F@_45,
                                                          F@_46,
                                                          F@_47,
                                                          F@_48,
                                                          F@_49,
                                                          F@_50,
                                                          F@_51,
                                                          F@_52,
                                                          TrUserData);
        186 ->
            d_field_BaseCommand_lookupTopic(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            F@_29,
                                            F@_30,
                                            F@_31,
                                            F@_32,
                                            F@_33,
                                            F@_34,
                                            F@_35,
                                            F@_36,
                                            F@_37,
                                            F@_38,
                                            F@_39,
                                            F@_40,
                                            F@_41,
                                            F@_42,
                                            F@_43,
                                            F@_44,
                                            F@_45,
                                            F@_46,
                                            F@_47,
                                            F@_48,
                                            F@_49,
                                            F@_50,
                                            F@_51,
                                            F@_52,
                                            TrUserData);
        194 ->
            d_field_BaseCommand_lookupTopicResponse(Rest,
                                                    0,
                                                    0,
                                                    F@_1,
                                                    F@_2,
                                                    F@_3,
                                                    F@_4,
                                                    F@_5,
                                                    F@_6,
                                                    F@_7,
                                                    F@_8,
                                                    F@_9,
                                                    F@_10,
                                                    F@_11,
                                                    F@_12,
                                                    F@_13,
                                                    F@_14,
                                                    F@_15,
                                                    F@_16,
                                                    F@_17,
                                                    F@_18,
                                                    F@_19,
                                                    F@_20,
                                                    F@_21,
                                                    F@_22,
                                                    F@_23,
                                                    F@_24,
                                                    F@_25,
                                                    F@_26,
                                                    F@_27,
                                                    F@_28,
                                                    F@_29,
                                                    F@_30,
                                                    F@_31,
                                                    F@_32,
                                                    F@_33,
                                                    F@_34,
                                                    F@_35,
                                                    F@_36,
                                                    F@_37,
                                                    F@_38,
                                                    F@_39,
                                                    F@_40,
                                                    F@_41,
                                                    F@_42,
                                                    F@_43,
                                                    F@_44,
                                                    F@_45,
                                                    F@_46,
                                                    F@_47,
                                                    F@_48,
                                                    F@_49,
                                                    F@_50,
                                                    F@_51,
                                                    F@_52,
                                                    TrUserData);
        202 ->
            d_field_BaseCommand_consumerStats(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              F@_18,
                                              F@_19,
                                              F@_20,
                                              F@_21,
                                              F@_22,
                                              F@_23,
                                              F@_24,
                                              F@_25,
                                              F@_26,
                                              F@_27,
                                              F@_28,
                                              F@_29,
                                              F@_30,
                                              F@_31,
                                              F@_32,
                                              F@_33,
                                              F@_34,
                                              F@_35,
                                              F@_36,
                                              F@_37,
                                              F@_38,
                                              F@_39,
                                              F@_40,
                                              F@_41,
                                              F@_42,
                                              F@_43,
                                              F@_44,
                                              F@_45,
                                              F@_46,
                                              F@_47,
                                              F@_48,
                                              F@_49,
                                              F@_50,
                                              F@_51,
                                              F@_52,
                                              TrUserData);
        210 ->
            d_field_BaseCommand_consumerStatsResponse(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      F@_16,
                                                      F@_17,
                                                      F@_18,
                                                      F@_19,
                                                      F@_20,
                                                      F@_21,
                                                      F@_22,
                                                      F@_23,
                                                      F@_24,
                                                      F@_25,
                                                      F@_26,
                                                      F@_27,
                                                      F@_28,
                                                      F@_29,
                                                      F@_30,
                                                      F@_31,
                                                      F@_32,
                                                      F@_33,
                                                      F@_34,
                                                      F@_35,
                                                      F@_36,
                                                      F@_37,
                                                      F@_38,
                                                      F@_39,
                                                      F@_40,
                                                      F@_41,
                                                      F@_42,
                                                      F@_43,
                                                      F@_44,
                                                      F@_45,
                                                      F@_46,
                                                      F@_47,
                                                      F@_48,
                                                      F@_49,
                                                      F@_50,
                                                      F@_51,
                                                      F@_52,
                                                      TrUserData);
        218 ->
            d_field_BaseCommand_reachedEndOfTopic(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
        226 ->
            d_field_BaseCommand_seek(Rest,
                                     0,
                                     0,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
        234 ->
            d_field_BaseCommand_getLastMessageId(Rest,
                                                 0,
                                                 0,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 F@_29,
                                                 F@_30,
                                                 F@_31,
                                                 F@_32,
                                                 F@_33,
                                                 F@_34,
                                                 F@_35,
                                                 F@_36,
                                                 F@_37,
                                                 F@_38,
                                                 F@_39,
                                                 F@_40,
                                                 F@_41,
                                                 F@_42,
                                                 F@_43,
                                                 F@_44,
                                                 F@_45,
                                                 F@_46,
                                                 F@_47,
                                                 F@_48,
                                                 F@_49,
                                                 F@_50,
                                                 F@_51,
                                                 F@_52,
                                                 TrUserData);
        242 ->
            d_field_BaseCommand_getLastMessageIdResponse(Rest,
                                                         0,
                                                         0,
                                                         F@_1,
                                                         F@_2,
                                                         F@_3,
                                                         F@_4,
                                                         F@_5,
                                                         F@_6,
                                                         F@_7,
                                                         F@_8,
                                                         F@_9,
                                                         F@_10,
                                                         F@_11,
                                                         F@_12,
                                                         F@_13,
                                                         F@_14,
                                                         F@_15,
                                                         F@_16,
                                                         F@_17,
                                                         F@_18,
                                                         F@_19,
                                                         F@_20,
                                                         F@_21,
                                                         F@_22,
                                                         F@_23,
                                                         F@_24,
                                                         F@_25,
                                                         F@_26,
                                                         F@_27,
                                                         F@_28,
                                                         F@_29,
                                                         F@_30,
                                                         F@_31,
                                                         F@_32,
                                                         F@_33,
                                                         F@_34,
                                                         F@_35,
                                                         F@_36,
                                                         F@_37,
                                                         F@_38,
                                                         F@_39,
                                                         F@_40,
                                                         F@_41,
                                                         F@_42,
                                                         F@_43,
                                                         F@_44,
                                                         F@_45,
                                                         F@_46,
                                                         F@_47,
                                                         F@_48,
                                                         F@_49,
                                                         F@_50,
                                                         F@_51,
                                                         F@_52,
                                                         TrUserData);
        250 ->
            d_field_BaseCommand_active_consumer_change(Rest,
                                                       0,
                                                       0,
                                                       F@_1,
                                                       F@_2,
                                                       F@_3,
                                                       F@_4,
                                                       F@_5,
                                                       F@_6,
                                                       F@_7,
                                                       F@_8,
                                                       F@_9,
                                                       F@_10,
                                                       F@_11,
                                                       F@_12,
                                                       F@_13,
                                                       F@_14,
                                                       F@_15,
                                                       F@_16,
                                                       F@_17,
                                                       F@_18,
                                                       F@_19,
                                                       F@_20,
                                                       F@_21,
                                                       F@_22,
                                                       F@_23,
                                                       F@_24,
                                                       F@_25,
                                                       F@_26,
                                                       F@_27,
                                                       F@_28,
                                                       F@_29,
                                                       F@_30,
                                                       F@_31,
                                                       F@_32,
                                                       F@_33,
                                                       F@_34,
                                                       F@_35,
                                                       F@_36,
                                                       F@_37,
                                                       F@_38,
                                                       F@_39,
                                                       F@_40,
                                                       F@_41,
                                                       F@_42,
                                                       F@_43,
                                                       F@_44,
                                                       F@_45,
                                                       F@_46,
                                                       F@_47,
                                                       F@_48,
                                                       F@_49,
                                                       F@_50,
                                                       F@_51,
                                                       F@_52,
                                                       TrUserData);
        258 ->
            d_field_BaseCommand_getTopicsOfNamespace(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
        266 ->
            d_field_BaseCommand_getTopicsOfNamespaceResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             F@_7,
                                                             F@_8,
                                                             F@_9,
                                                             F@_10,
                                                             F@_11,
                                                             F@_12,
                                                             F@_13,
                                                             F@_14,
                                                             F@_15,
                                                             F@_16,
                                                             F@_17,
                                                             F@_18,
                                                             F@_19,
                                                             F@_20,
                                                             F@_21,
                                                             F@_22,
                                                             F@_23,
                                                             F@_24,
                                                             F@_25,
                                                             F@_26,
                                                             F@_27,
                                                             F@_28,
                                                             F@_29,
                                                             F@_30,
                                                             F@_31,
                                                             F@_32,
                                                             F@_33,
                                                             F@_34,
                                                             F@_35,
                                                             F@_36,
                                                             F@_37,
                                                             F@_38,
                                                             F@_39,
                                                             F@_40,
                                                             F@_41,
                                                             F@_42,
                                                             F@_43,
                                                             F@_44,
                                                             F@_45,
                                                             F@_46,
                                                             F@_47,
                                                             F@_48,
                                                             F@_49,
                                                             F@_50,
                                                             F@_51,
                                                             F@_52,
                                                             TrUserData);
        274 ->
            d_field_BaseCommand_getSchema(Rest,
                                          0,
                                          0,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
        282 ->
            d_field_BaseCommand_getSchemaResponse(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
        290 ->
            d_field_BaseCommand_authChallenge(Rest,
                                              0,
                                              0,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              F@_18,
                                              F@_19,
                                              F@_20,
                                              F@_21,
                                              F@_22,
                                              F@_23,
                                              F@_24,
                                              F@_25,
                                              F@_26,
                                              F@_27,
                                              F@_28,
                                              F@_29,
                                              F@_30,
                                              F@_31,
                                              F@_32,
                                              F@_33,
                                              F@_34,
                                              F@_35,
                                              F@_36,
                                              F@_37,
                                              F@_38,
                                              F@_39,
                                              F@_40,
                                              F@_41,
                                              F@_42,
                                              F@_43,
                                              F@_44,
                                              F@_45,
                                              F@_46,
                                              F@_47,
                                              F@_48,
                                              F@_49,
                                              F@_50,
                                              F@_51,
                                              F@_52,
                                              TrUserData);
        298 ->
            d_field_BaseCommand_authResponse(Rest,
                                             0,
                                             0,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             F@_29,
                                             F@_30,
                                             F@_31,
                                             F@_32,
                                             F@_33,
                                             F@_34,
                                             F@_35,
                                             F@_36,
                                             F@_37,
                                             F@_38,
                                             F@_39,
                                             F@_40,
                                             F@_41,
                                             F@_42,
                                             F@_43,
                                             F@_44,
                                             F@_45,
                                             F@_46,
                                             F@_47,
                                             F@_48,
                                             F@_49,
                                             F@_50,
                                             F@_51,
                                             F@_52,
                                             TrUserData);
        306 ->
            d_field_BaseCommand_ackResponse(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            F@_29,
                                            F@_30,
                                            F@_31,
                                            F@_32,
                                            F@_33,
                                            F@_34,
                                            F@_35,
                                            F@_36,
                                            F@_37,
                                            F@_38,
                                            F@_39,
                                            F@_40,
                                            F@_41,
                                            F@_42,
                                            F@_43,
                                            F@_44,
                                            F@_45,
                                            F@_46,
                                            F@_47,
                                            F@_48,
                                            F@_49,
                                            F@_50,
                                            F@_51,
                                            F@_52,
                                            TrUserData);
        314 ->
            d_field_BaseCommand_getOrCreateSchema(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
        322 ->
            d_field_BaseCommand_getOrCreateSchemaResponse(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          F@_18,
                                                          F@_19,
                                                          F@_20,
                                                          F@_21,
                                                          F@_22,
                                                          F@_23,
                                                          F@_24,
                                                          F@_25,
                                                          F@_26,
                                                          F@_27,
                                                          F@_28,
                                                          F@_29,
                                                          F@_30,
                                                          F@_31,
                                                          F@_32,
                                                          F@_33,
                                                          F@_34,
                                                          F@_35,
                                                          F@_36,
                                                          F@_37,
                                                          F@_38,
                                                          F@_39,
                                                          F@_40,
                                                          F@_41,
                                                          F@_42,
                                                          F@_43,
                                                          F@_44,
                                                          F@_45,
                                                          F@_46,
                                                          F@_47,
                                                          F@_48,
                                                          F@_49,
                                                          F@_50,
                                                          F@_51,
                                                          F@_52,
                                                          TrUserData);
        402 ->
            d_field_BaseCommand_newTxn(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
        410 ->
            d_field_BaseCommand_newTxnResponse(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               F@_29,
                                               F@_30,
                                               F@_31,
                                               F@_32,
                                               F@_33,
                                               F@_34,
                                               F@_35,
                                               F@_36,
                                               F@_37,
                                               F@_38,
                                               F@_39,
                                               F@_40,
                                               F@_41,
                                               F@_42,
                                               F@_43,
                                               F@_44,
                                               F@_45,
                                               F@_46,
                                               F@_47,
                                               F@_48,
                                               F@_49,
                                               F@_50,
                                               F@_51,
                                               F@_52,
                                               TrUserData);
        418 ->
            d_field_BaseCommand_addPartitionToTxn(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
        426 ->
            d_field_BaseCommand_addPartitionToTxnResponse(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          F@_18,
                                                          F@_19,
                                                          F@_20,
                                                          F@_21,
                                                          F@_22,
                                                          F@_23,
                                                          F@_24,
                                                          F@_25,
                                                          F@_26,
                                                          F@_27,
                                                          F@_28,
                                                          F@_29,
                                                          F@_30,
                                                          F@_31,
                                                          F@_32,
                                                          F@_33,
                                                          F@_34,
                                                          F@_35,
                                                          F@_36,
                                                          F@_37,
                                                          F@_38,
                                                          F@_39,
                                                          F@_40,
                                                          F@_41,
                                                          F@_42,
                                                          F@_43,
                                                          F@_44,
                                                          F@_45,
                                                          F@_46,
                                                          F@_47,
                                                          F@_48,
                                                          F@_49,
                                                          F@_50,
                                                          F@_51,
                                                          F@_52,
                                                          TrUserData);
        434 ->
            d_field_BaseCommand_addSubscriptionToTxn(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
        442 ->
            d_field_BaseCommand_addSubscriptionToTxnResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             F@_7,
                                                             F@_8,
                                                             F@_9,
                                                             F@_10,
                                                             F@_11,
                                                             F@_12,
                                                             F@_13,
                                                             F@_14,
                                                             F@_15,
                                                             F@_16,
                                                             F@_17,
                                                             F@_18,
                                                             F@_19,
                                                             F@_20,
                                                             F@_21,
                                                             F@_22,
                                                             F@_23,
                                                             F@_24,
                                                             F@_25,
                                                             F@_26,
                                                             F@_27,
                                                             F@_28,
                                                             F@_29,
                                                             F@_30,
                                                             F@_31,
                                                             F@_32,
                                                             F@_33,
                                                             F@_34,
                                                             F@_35,
                                                             F@_36,
                                                             F@_37,
                                                             F@_38,
                                                             F@_39,
                                                             F@_40,
                                                             F@_41,
                                                             F@_42,
                                                             F@_43,
                                                             F@_44,
                                                             F@_45,
                                                             F@_46,
                                                             F@_47,
                                                             F@_48,
                                                             F@_49,
                                                             F@_50,
                                                             F@_51,
                                                             F@_52,
                                                             TrUserData);
        450 ->
            d_field_BaseCommand_endTxn(Rest,
                                       0,
                                       0,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
        458 ->
            d_field_BaseCommand_endTxnResponse(Rest,
                                               0,
                                               0,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               F@_29,
                                               F@_30,
                                               F@_31,
                                               F@_32,
                                               F@_33,
                                               F@_34,
                                               F@_35,
                                               F@_36,
                                               F@_37,
                                               F@_38,
                                               F@_39,
                                               F@_40,
                                               F@_41,
                                               F@_42,
                                               F@_43,
                                               F@_44,
                                               F@_45,
                                               F@_46,
                                               F@_47,
                                               F@_48,
                                               F@_49,
                                               F@_50,
                                               F@_51,
                                               F@_52,
                                               TrUserData);
        466 ->
            d_field_BaseCommand_endTxnOnPartition(Rest,
                                                  0,
                                                  0,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
        474 ->
            d_field_BaseCommand_endTxnOnPartitionResponse(Rest,
                                                          0,
                                                          0,
                                                          F@_1,
                                                          F@_2,
                                                          F@_3,
                                                          F@_4,
                                                          F@_5,
                                                          F@_6,
                                                          F@_7,
                                                          F@_8,
                                                          F@_9,
                                                          F@_10,
                                                          F@_11,
                                                          F@_12,
                                                          F@_13,
                                                          F@_14,
                                                          F@_15,
                                                          F@_16,
                                                          F@_17,
                                                          F@_18,
                                                          F@_19,
                                                          F@_20,
                                                          F@_21,
                                                          F@_22,
                                                          F@_23,
                                                          F@_24,
                                                          F@_25,
                                                          F@_26,
                                                          F@_27,
                                                          F@_28,
                                                          F@_29,
                                                          F@_30,
                                                          F@_31,
                                                          F@_32,
                                                          F@_33,
                                                          F@_34,
                                                          F@_35,
                                                          F@_36,
                                                          F@_37,
                                                          F@_38,
                                                          F@_39,
                                                          F@_40,
                                                          F@_41,
                                                          F@_42,
                                                          F@_43,
                                                          F@_44,
                                                          F@_45,
                                                          F@_46,
                                                          F@_47,
                                                          F@_48,
                                                          F@_49,
                                                          F@_50,
                                                          F@_51,
                                                          F@_52,
                                                          TrUserData);
        482 ->
            d_field_BaseCommand_endTxnOnSubscription(Rest,
                                                     0,
                                                     0,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
        490 ->
            d_field_BaseCommand_endTxnOnSubscriptionResponse(Rest,
                                                             0,
                                                             0,
                                                             F@_1,
                                                             F@_2,
                                                             F@_3,
                                                             F@_4,
                                                             F@_5,
                                                             F@_6,
                                                             F@_7,
                                                             F@_8,
                                                             F@_9,
                                                             F@_10,
                                                             F@_11,
                                                             F@_12,
                                                             F@_13,
                                                             F@_14,
                                                             F@_15,
                                                             F@_16,
                                                             F@_17,
                                                             F@_18,
                                                             F@_19,
                                                             F@_20,
                                                             F@_21,
                                                             F@_22,
                                                             F@_23,
                                                             F@_24,
                                                             F@_25,
                                                             F@_26,
                                                             F@_27,
                                                             F@_28,
                                                             F@_29,
                                                             F@_30,
                                                             F@_31,
                                                             F@_32,
                                                             F@_33,
                                                             F@_34,
                                                             F@_35,
                                                             F@_36,
                                                             F@_37,
                                                             F@_38,
                                                             F@_39,
                                                             F@_40,
                                                             F@_41,
                                                             F@_42,
                                                             F@_43,
                                                             F@_44,
                                                             F@_45,
                                                             F@_46,
                                                             F@_47,
                                                             F@_48,
                                                             F@_49,
                                                             F@_50,
                                                             F@_51,
                                                             F@_52,
                                                             TrUserData);
        _ ->
            case Key band 7 of
                0 ->
                    skip_varint_BaseCommand(Rest,
                                            0,
                                            0,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            F@_29,
                                            F@_30,
                                            F@_31,
                                            F@_32,
                                            F@_33,
                                            F@_34,
                                            F@_35,
                                            F@_36,
                                            F@_37,
                                            F@_38,
                                            F@_39,
                                            F@_40,
                                            F@_41,
                                            F@_42,
                                            F@_43,
                                            F@_44,
                                            F@_45,
                                            F@_46,
                                            F@_47,
                                            F@_48,
                                            F@_49,
                                            F@_50,
                                            F@_51,
                                            F@_52,
                                            TrUserData);
                1 ->
                    skip_64_BaseCommand(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        F@_29,
                                        F@_30,
                                        F@_31,
                                        F@_32,
                                        F@_33,
                                        F@_34,
                                        F@_35,
                                        F@_36,
                                        F@_37,
                                        F@_38,
                                        F@_39,
                                        F@_40,
                                        F@_41,
                                        F@_42,
                                        F@_43,
                                        F@_44,
                                        F@_45,
                                        F@_46,
                                        F@_47,
                                        F@_48,
                                        F@_49,
                                        F@_50,
                                        F@_51,
                                        F@_52,
                                        TrUserData);
                2 ->
                    skip_length_delimited_BaseCommand(Rest,
                                                      0,
                                                      0,
                                                      F@_1,
                                                      F@_2,
                                                      F@_3,
                                                      F@_4,
                                                      F@_5,
                                                      F@_6,
                                                      F@_7,
                                                      F@_8,
                                                      F@_9,
                                                      F@_10,
                                                      F@_11,
                                                      F@_12,
                                                      F@_13,
                                                      F@_14,
                                                      F@_15,
                                                      F@_16,
                                                      F@_17,
                                                      F@_18,
                                                      F@_19,
                                                      F@_20,
                                                      F@_21,
                                                      F@_22,
                                                      F@_23,
                                                      F@_24,
                                                      F@_25,
                                                      F@_26,
                                                      F@_27,
                                                      F@_28,
                                                      F@_29,
                                                      F@_30,
                                                      F@_31,
                                                      F@_32,
                                                      F@_33,
                                                      F@_34,
                                                      F@_35,
                                                      F@_36,
                                                      F@_37,
                                                      F@_38,
                                                      F@_39,
                                                      F@_40,
                                                      F@_41,
                                                      F@_42,
                                                      F@_43,
                                                      F@_44,
                                                      F@_45,
                                                      F@_46,
                                                      F@_47,
                                                      F@_48,
                                                      F@_49,
                                                      F@_50,
                                                      F@_51,
                                                      F@_52,
                                                      TrUserData);
                3 ->
                    skip_group_BaseCommand(Rest,
                                           Key bsr 3,
                                           0,
                                           F@_1,
                                           F@_2,
                                           F@_3,
                                           F@_4,
                                           F@_5,
                                           F@_6,
                                           F@_7,
                                           F@_8,
                                           F@_9,
                                           F@_10,
                                           F@_11,
                                           F@_12,
                                           F@_13,
                                           F@_14,
                                           F@_15,
                                           F@_16,
                                           F@_17,
                                           F@_18,
                                           F@_19,
                                           F@_20,
                                           F@_21,
                                           F@_22,
                                           F@_23,
                                           F@_24,
                                           F@_25,
                                           F@_26,
                                           F@_27,
                                           F@_28,
                                           F@_29,
                                           F@_30,
                                           F@_31,
                                           F@_32,
                                           F@_33,
                                           F@_34,
                                           F@_35,
                                           F@_36,
                                           F@_37,
                                           F@_38,
                                           F@_39,
                                           F@_40,
                                           F@_41,
                                           F@_42,
                                           F@_43,
                                           F@_44,
                                           F@_45,
                                           F@_46,
                                           F@_47,
                                           F@_48,
                                           F@_49,
                                           F@_50,
                                           F@_51,
                                           F@_52,
                                           TrUserData);
                5 ->
                    skip_32_BaseCommand(Rest,
                                        0,
                                        0,
                                        F@_1,
                                        F@_2,
                                        F@_3,
                                        F@_4,
                                        F@_5,
                                        F@_6,
                                        F@_7,
                                        F@_8,
                                        F@_9,
                                        F@_10,
                                        F@_11,
                                        F@_12,
                                        F@_13,
                                        F@_14,
                                        F@_15,
                                        F@_16,
                                        F@_17,
                                        F@_18,
                                        F@_19,
                                        F@_20,
                                        F@_21,
                                        F@_22,
                                        F@_23,
                                        F@_24,
                                        F@_25,
                                        F@_26,
                                        F@_27,
                                        F@_28,
                                        F@_29,
                                        F@_30,
                                        F@_31,
                                        F@_32,
                                        F@_33,
                                        F@_34,
                                        F@_35,
                                        F@_36,
                                        F@_37,
                                        F@_38,
                                        F@_39,
                                        F@_40,
                                        F@_41,
                                        F@_42,
                                        F@_43,
                                        F@_44,
                                        F@_45,
                                        F@_46,
                                        F@_47,
                                        F@_48,
                                        F@_49,
                                        F@_50,
                                        F@_51,
                                        F@_52,
                                        TrUserData)
            end
    end;
dg_read_field_def_BaseCommand(<<>>, 0, 0, F@_1, F@_2,
                              F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                              F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                              F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                              F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                              F@_32, F@_33, F@_34, F@_35, F@_36, F@_37, F@_38,
                              F@_39, F@_40, F@_41, F@_42, F@_43, F@_44, F@_45,
                              F@_46, F@_47, F@_48, F@_49, F@_50, F@_51, F@_52,
                              _) ->
    S1 = #{type => F@_1},
    S2 = if F@_2 == '$undef' -> S1;
            true -> S1#{connect => F@_2}
         end,
    S3 = if F@_3 == '$undef' -> S2;
            true -> S2#{connected => F@_3}
         end,
    S4 = if F@_4 == '$undef' -> S3;
            true -> S3#{subscribe => F@_4}
         end,
    S5 = if F@_5 == '$undef' -> S4;
            true -> S4#{producer => F@_5}
         end,
    S6 = if F@_6 == '$undef' -> S5;
            true -> S5#{send => F@_6}
         end,
    S7 = if F@_7 == '$undef' -> S6;
            true -> S6#{send_receipt => F@_7}
         end,
    S8 = if F@_8 == '$undef' -> S7;
            true -> S7#{send_error => F@_8}
         end,
    S9 = if F@_9 == '$undef' -> S8;
            true -> S8#{message => F@_9}
         end,
    S10 = if F@_10 == '$undef' -> S9;
             true -> S9#{ack => F@_10}
          end,
    S11 = if F@_11 == '$undef' -> S10;
             true -> S10#{flow => F@_11}
          end,
    S12 = if F@_12 == '$undef' -> S11;
             true -> S11#{unsubscribe => F@_12}
          end,
    S13 = if F@_13 == '$undef' -> S12;
             true -> S12#{success => F@_13}
          end,
    S14 = if F@_14 == '$undef' -> S13;
             true -> S13#{error => F@_14}
          end,
    S15 = if F@_15 == '$undef' -> S14;
             true -> S14#{close_producer => F@_15}
          end,
    S16 = if F@_16 == '$undef' -> S15;
             true -> S15#{close_consumer => F@_16}
          end,
    S17 = if F@_17 == '$undef' -> S16;
             true -> S16#{producer_success => F@_17}
          end,
    S18 = if F@_18 == '$undef' -> S17;
             true -> S17#{ping => F@_18}
          end,
    S19 = if F@_19 == '$undef' -> S18;
             true -> S18#{pong => F@_19}
          end,
    S20 = if F@_20 == '$undef' -> S19;
             true -> S19#{redeliverUnacknowledgedMessages => F@_20}
          end,
    S21 = if F@_21 == '$undef' -> S20;
             true -> S20#{partitionMetadata => F@_21}
          end,
    S22 = if F@_22 == '$undef' -> S21;
             true -> S21#{partitionMetadataResponse => F@_22}
          end,
    S23 = if F@_23 == '$undef' -> S22;
             true -> S22#{lookupTopic => F@_23}
          end,
    S24 = if F@_24 == '$undef' -> S23;
             true -> S23#{lookupTopicResponse => F@_24}
          end,
    S25 = if F@_25 == '$undef' -> S24;
             true -> S24#{consumerStats => F@_25}
          end,
    S26 = if F@_26 == '$undef' -> S25;
             true -> S25#{consumerStatsResponse => F@_26}
          end,
    S27 = if F@_27 == '$undef' -> S26;
             true -> S26#{reachedEndOfTopic => F@_27}
          end,
    S28 = if F@_28 == '$undef' -> S27;
             true -> S27#{seek => F@_28}
          end,
    S29 = if F@_29 == '$undef' -> S28;
             true -> S28#{getLastMessageId => F@_29}
          end,
    S30 = if F@_30 == '$undef' -> S29;
             true -> S29#{getLastMessageIdResponse => F@_30}
          end,
    S31 = if F@_31 == '$undef' -> S30;
             true -> S30#{active_consumer_change => F@_31}
          end,
    S32 = if F@_32 == '$undef' -> S31;
             true -> S31#{getTopicsOfNamespace => F@_32}
          end,
    S33 = if F@_33 == '$undef' -> S32;
             true -> S32#{getTopicsOfNamespaceResponse => F@_33}
          end,
    S34 = if F@_34 == '$undef' -> S33;
             true -> S33#{getSchema => F@_34}
          end,
    S35 = if F@_35 == '$undef' -> S34;
             true -> S34#{getSchemaResponse => F@_35}
          end,
    S36 = if F@_36 == '$undef' -> S35;
             true -> S35#{authChallenge => F@_36}
          end,
    S37 = if F@_37 == '$undef' -> S36;
             true -> S36#{authResponse => F@_37}
          end,
    S38 = if F@_38 == '$undef' -> S37;
             true -> S37#{ackResponse => F@_38}
          end,
    S39 = if F@_39 == '$undef' -> S38;
             true -> S38#{getOrCreateSchema => F@_39}
          end,
    S40 = if F@_40 == '$undef' -> S39;
             true -> S39#{getOrCreateSchemaResponse => F@_40}
          end,
    S41 = if F@_41 == '$undef' -> S40;
             true -> S40#{newTxn => F@_41}
          end,
    S42 = if F@_42 == '$undef' -> S41;
             true -> S41#{newTxnResponse => F@_42}
          end,
    S43 = if F@_43 == '$undef' -> S42;
             true -> S42#{addPartitionToTxn => F@_43}
          end,
    S44 = if F@_44 == '$undef' -> S43;
             true -> S43#{addPartitionToTxnResponse => F@_44}
          end,
    S45 = if F@_45 == '$undef' -> S44;
             true -> S44#{addSubscriptionToTxn => F@_45}
          end,
    S46 = if F@_46 == '$undef' -> S45;
             true -> S45#{addSubscriptionToTxnResponse => F@_46}
          end,
    S47 = if F@_47 == '$undef' -> S46;
             true -> S46#{endTxn => F@_47}
          end,
    S48 = if F@_48 == '$undef' -> S47;
             true -> S47#{endTxnResponse => F@_48}
          end,
    S49 = if F@_49 == '$undef' -> S48;
             true -> S48#{endTxnOnPartition => F@_49}
          end,
    S50 = if F@_50 == '$undef' -> S49;
             true -> S49#{endTxnOnPartitionResponse => F@_50}
          end,
    S51 = if F@_51 == '$undef' -> S50;
             true -> S50#{endTxnOnSubscription => F@_51}
          end,
    if F@_52 == '$undef' -> S51;
       true -> S51#{endTxnOnSubscriptionResponse => F@_52}
    end.

d_field_BaseCommand_type(<<1:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_type(Rest,
                             N + 7,
                             X bsl N + Acc,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
d_field_BaseCommand_type(<<0:1, X:7, Rest/binary>>, N,
                         Acc, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9,
                         F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                         F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                         F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32, F@_33,
                         F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                         F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                         F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = {id('d_enum_BaseCommand.Type'(begin
                                                           <<Res:32/signed-native>> =
                                                               <<(X bsl N +
                                                                      Acc):32/unsigned-native>>,
                                                           id(Res, TrUserData)
                                                       end),
                             TrUserData),
                          Rest},
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   NewFValue,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_connect(<<1:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                            F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                            F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                            F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                            F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                            F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                            F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_connect(Rest,
                                N + 7,
                                X bsl N + Acc,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                F@_9,
                                F@_10,
                                F@_11,
                                F@_12,
                                F@_13,
                                F@_14,
                                F@_15,
                                F@_16,
                                F@_17,
                                F@_18,
                                F@_19,
                                F@_20,
                                F@_21,
                                F@_22,
                                F@_23,
                                F@_24,
                                F@_25,
                                F@_26,
                                F@_27,
                                F@_28,
                                F@_29,
                                F@_30,
                                F@_31,
                                F@_32,
                                F@_33,
                                F@_34,
                                F@_35,
                                F@_36,
                                F@_37,
                                F@_38,
                                F@_39,
                                F@_40,
                                F@_41,
                                F@_42,
                                F@_43,
                                F@_44,
                                F@_45,
                                F@_46,
                                F@_47,
                                F@_48,
                                F@_49,
                                F@_50,
                                F@_51,
                                F@_52,
                                TrUserData);
d_field_BaseCommand_connect(<<0:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, Prev, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                            F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                            F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                            F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                            F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                            F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                            F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandConnect(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandConnect(Prev,
                                                                   NewFValue,
                                                                   TrUserData)
                                   end,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_connected(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                              F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                              F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                              F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                              F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                              F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                              F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_connected(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  F@_10,
                                  F@_11,
                                  F@_12,
                                  F@_13,
                                  F@_14,
                                  F@_15,
                                  F@_16,
                                  F@_17,
                                  F@_18,
                                  F@_19,
                                  F@_20,
                                  F@_21,
                                  F@_22,
                                  F@_23,
                                  F@_24,
                                  F@_25,
                                  F@_26,
                                  F@_27,
                                  F@_28,
                                  F@_29,
                                  F@_30,
                                  F@_31,
                                  F@_32,
                                  F@_33,
                                  F@_34,
                                  F@_35,
                                  F@_36,
                                  F@_37,
                                  F@_38,
                                  F@_39,
                                  F@_40,
                                  F@_41,
                                  F@_42,
                                  F@_43,
                                  F@_44,
                                  F@_45,
                                  F@_46,
                                  F@_47,
                                  F@_48,
                                  F@_49,
                                  F@_50,
                                  F@_51,
                                  F@_52,
                                  TrUserData);
d_field_BaseCommand_connected(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, Prev, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                              F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                              F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                              F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                              F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                              F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                              F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandConnected(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandConnected(Prev,
                                                                     NewFValue,
                                                                     TrUserData)
                                   end,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_subscribe(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                              F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                              F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                              F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                              F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                              F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                              F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_subscribe(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  F@_10,
                                  F@_11,
                                  F@_12,
                                  F@_13,
                                  F@_14,
                                  F@_15,
                                  F@_16,
                                  F@_17,
                                  F@_18,
                                  F@_19,
                                  F@_20,
                                  F@_21,
                                  F@_22,
                                  F@_23,
                                  F@_24,
                                  F@_25,
                                  F@_26,
                                  F@_27,
                                  F@_28,
                                  F@_29,
                                  F@_30,
                                  F@_31,
                                  F@_32,
                                  F@_33,
                                  F@_34,
                                  F@_35,
                                  F@_36,
                                  F@_37,
                                  F@_38,
                                  F@_39,
                                  F@_40,
                                  F@_41,
                                  F@_42,
                                  F@_43,
                                  F@_44,
                                  F@_45,
                                  F@_46,
                                  F@_47,
                                  F@_48,
                                  F@_49,
                                  F@_50,
                                  F@_51,
                                  F@_52,
                                  TrUserData);
d_field_BaseCommand_subscribe(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, Prev, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                              F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                              F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                              F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                              F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                              F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                              F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandSubscribe(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandSubscribe(Prev,
                                                                     NewFValue,
                                                                     TrUserData)
                                   end,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_producer(<<1:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                             F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                             F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                             F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                             F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                             F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                             F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                             F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_producer(Rest,
                                 N + 7,
                                 X bsl N + Acc,
                                 F@_1,
                                 F@_2,
                                 F@_3,
                                 F@_4,
                                 F@_5,
                                 F@_6,
                                 F@_7,
                                 F@_8,
                                 F@_9,
                                 F@_10,
                                 F@_11,
                                 F@_12,
                                 F@_13,
                                 F@_14,
                                 F@_15,
                                 F@_16,
                                 F@_17,
                                 F@_18,
                                 F@_19,
                                 F@_20,
                                 F@_21,
                                 F@_22,
                                 F@_23,
                                 F@_24,
                                 F@_25,
                                 F@_26,
                                 F@_27,
                                 F@_28,
                                 F@_29,
                                 F@_30,
                                 F@_31,
                                 F@_32,
                                 F@_33,
                                 F@_34,
                                 F@_35,
                                 F@_36,
                                 F@_37,
                                 F@_38,
                                 F@_39,
                                 F@_40,
                                 F@_41,
                                 F@_42,
                                 F@_43,
                                 F@_44,
                                 F@_45,
                                 F@_46,
                                 F@_47,
                                 F@_48,
                                 F@_49,
                                 F@_50,
                                 F@_51,
                                 F@_52,
                                 TrUserData);
d_field_BaseCommand_producer(<<0:1, X:7, Rest/binary>>,
                             N, Acc, F@_1, F@_2, F@_3, F@_4, Prev, F@_6, F@_7,
                             F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                             F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                             F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                             F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                             F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                             F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                             F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandProducer(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandProducer(Prev,
                                                                    NewFValue,
                                                                    TrUserData)
                                   end,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_send(<<1:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_send(Rest,
                             N + 7,
                             X bsl N + Acc,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
d_field_BaseCommand_send(<<0:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, Prev, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandSend(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandSend(Prev,
                                                                NewFValue,
                                                                TrUserData)
                                   end,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_send_receipt(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                 F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                 F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                 F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                 F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                 F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                 F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_send_receipt(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
d_field_BaseCommand_send_receipt(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 Prev, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                 F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                 F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                 F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                 F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                 F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                 F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandSendReceipt(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandSendReceipt(Prev,
                                                                       NewFValue,
                                                                       TrUserData)
                                   end,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_send_error(<<1:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_send_error(Rest,
                                   N + 7,
                                   X bsl N + Acc,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData);
d_field_BaseCommand_send_error(<<0:1, X:7,
                                 Rest/binary>>,
                               N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                               Prev, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                               F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                               F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                               F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                               F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                               F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                               F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandSendError(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandSendError(Prev,
                                                                     NewFValue,
                                                                     TrUserData)
                                   end,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_message(<<1:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                            F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                            F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                            F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                            F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                            F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                            F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_message(Rest,
                                N + 7,
                                X bsl N + Acc,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                F@_9,
                                F@_10,
                                F@_11,
                                F@_12,
                                F@_13,
                                F@_14,
                                F@_15,
                                F@_16,
                                F@_17,
                                F@_18,
                                F@_19,
                                F@_20,
                                F@_21,
                                F@_22,
                                F@_23,
                                F@_24,
                                F@_25,
                                F@_26,
                                F@_27,
                                F@_28,
                                F@_29,
                                F@_30,
                                F@_31,
                                F@_32,
                                F@_33,
                                F@_34,
                                F@_35,
                                F@_36,
                                F@_37,
                                F@_38,
                                F@_39,
                                F@_40,
                                F@_41,
                                F@_42,
                                F@_43,
                                F@_44,
                                F@_45,
                                F@_46,
                                F@_47,
                                F@_48,
                                F@_49,
                                F@_50,
                                F@_51,
                                F@_52,
                                TrUserData);
d_field_BaseCommand_message(<<0:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, Prev, F@_10, F@_11, F@_12, F@_13, F@_14,
                            F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                            F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                            F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                            F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                            F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                            F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandMessage(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandMessage(Prev,
                                                                   NewFValue,
                                                                   TrUserData)
                                   end,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_ack(<<1:1, X:7, Rest/binary>>, N,
                        Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                        F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                        F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                        F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                        F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                        F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                        F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_ack(Rest,
                            N + 7,
                            X bsl N + Acc,
                            F@_1,
                            F@_2,
                            F@_3,
                            F@_4,
                            F@_5,
                            F@_6,
                            F@_7,
                            F@_8,
                            F@_9,
                            F@_10,
                            F@_11,
                            F@_12,
                            F@_13,
                            F@_14,
                            F@_15,
                            F@_16,
                            F@_17,
                            F@_18,
                            F@_19,
                            F@_20,
                            F@_21,
                            F@_22,
                            F@_23,
                            F@_24,
                            F@_25,
                            F@_26,
                            F@_27,
                            F@_28,
                            F@_29,
                            F@_30,
                            F@_31,
                            F@_32,
                            F@_33,
                            F@_34,
                            F@_35,
                            F@_36,
                            F@_37,
                            F@_38,
                            F@_39,
                            F@_40,
                            F@_41,
                            F@_42,
                            F@_43,
                            F@_44,
                            F@_45,
                            F@_46,
                            F@_47,
                            F@_48,
                            F@_49,
                            F@_50,
                            F@_51,
                            F@_52,
                            TrUserData);
d_field_BaseCommand_ack(<<0:1, X:7, Rest/binary>>, N,
                        Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                        F@_9, Prev, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                        F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                        F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                        F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                        F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                        F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandAck(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandAck(Prev,
                                                               NewFValue,
                                                               TrUserData)
                                   end,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_flow(<<1:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_flow(Rest,
                             N + 7,
                             X bsl N + Acc,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
d_field_BaseCommand_flow(<<0:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, Prev, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandFlow(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandFlow(Prev,
                                                                NewFValue,
                                                                TrUserData)
                                   end,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_unsubscribe(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, F@_20,
                                F@_21, F@_22, F@_23, F@_24, F@_25, F@_26, F@_27,
                                F@_28, F@_29, F@_30, F@_31, F@_32, F@_33, F@_34,
                                F@_35, F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_unsubscribe(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    F@_18,
                                    F@_19,
                                    F@_20,
                                    F@_21,
                                    F@_22,
                                    F@_23,
                                    F@_24,
                                    F@_25,
                                    F@_26,
                                    F@_27,
                                    F@_28,
                                    F@_29,
                                    F@_30,
                                    F@_31,
                                    F@_32,
                                    F@_33,
                                    F@_34,
                                    F@_35,
                                    F@_36,
                                    F@_37,
                                    F@_38,
                                    F@_39,
                                    F@_40,
                                    F@_41,
                                    F@_42,
                                    F@_43,
                                    F@_44,
                                    F@_45,
                                    F@_46,
                                    F@_47,
                                    F@_48,
                                    F@_49,
                                    F@_50,
                                    F@_51,
                                    F@_52,
                                    TrUserData);
d_field_BaseCommand_unsubscribe(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, F@_8, F@_9, F@_10, F@_11, Prev, F@_13,
                                F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, F@_20,
                                F@_21, F@_22, F@_23, F@_24, F@_25, F@_26, F@_27,
                                F@_28, F@_29, F@_30, F@_31, F@_32, F@_33, F@_34,
                                F@_35, F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandUnsubscribe(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandUnsubscribe(Prev,
                                                                       NewFValue,
                                                                       TrUserData)
                                   end,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_success(<<1:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                            F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                            F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                            F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                            F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                            F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                            F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_success(Rest,
                                N + 7,
                                X bsl N + Acc,
                                F@_1,
                                F@_2,
                                F@_3,
                                F@_4,
                                F@_5,
                                F@_6,
                                F@_7,
                                F@_8,
                                F@_9,
                                F@_10,
                                F@_11,
                                F@_12,
                                F@_13,
                                F@_14,
                                F@_15,
                                F@_16,
                                F@_17,
                                F@_18,
                                F@_19,
                                F@_20,
                                F@_21,
                                F@_22,
                                F@_23,
                                F@_24,
                                F@_25,
                                F@_26,
                                F@_27,
                                F@_28,
                                F@_29,
                                F@_30,
                                F@_31,
                                F@_32,
                                F@_33,
                                F@_34,
                                F@_35,
                                F@_36,
                                F@_37,
                                F@_38,
                                F@_39,
                                F@_40,
                                F@_41,
                                F@_42,
                                F@_43,
                                F@_44,
                                F@_45,
                                F@_46,
                                F@_47,
                                F@_48,
                                F@_49,
                                F@_50,
                                F@_51,
                                F@_52,
                                TrUserData);
d_field_BaseCommand_success(<<0:1, X:7, Rest/binary>>,
                            N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                            F@_8, F@_9, F@_10, F@_11, F@_12, Prev, F@_14, F@_15,
                            F@_16, F@_17, F@_18, F@_19, F@_20, F@_21, F@_22,
                            F@_23, F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                            F@_30, F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                            F@_37, F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                            F@_44, F@_45, F@_46, F@_47, F@_48, F@_49, F@_50,
                            F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandSuccess(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandSuccess(Prev,
                                                                   NewFValue,
                                                                   TrUserData)
                                   end,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_error(<<1:1, X:7, Rest/binary>>, N,
                          Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                          F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                          F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                          F@_24, F@_25, F@_26, F@_27, F@_28, F@_29, F@_30,
                          F@_31, F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                          F@_38, F@_39, F@_40, F@_41, F@_42, F@_43, F@_44,
                          F@_45, F@_46, F@_47, F@_48, F@_49, F@_50, F@_51,
                          F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_error(Rest,
                              N + 7,
                              X bsl N + Acc,
                              F@_1,
                              F@_2,
                              F@_3,
                              F@_4,
                              F@_5,
                              F@_6,
                              F@_7,
                              F@_8,
                              F@_9,
                              F@_10,
                              F@_11,
                              F@_12,
                              F@_13,
                              F@_14,
                              F@_15,
                              F@_16,
                              F@_17,
                              F@_18,
                              F@_19,
                              F@_20,
                              F@_21,
                              F@_22,
                              F@_23,
                              F@_24,
                              F@_25,
                              F@_26,
                              F@_27,
                              F@_28,
                              F@_29,
                              F@_30,
                              F@_31,
                              F@_32,
                              F@_33,
                              F@_34,
                              F@_35,
                              F@_36,
                              F@_37,
                              F@_38,
                              F@_39,
                              F@_40,
                              F@_41,
                              F@_42,
                              F@_43,
                              F@_44,
                              F@_45,
                              F@_46,
                              F@_47,
                              F@_48,
                              F@_49,
                              F@_50,
                              F@_51,
                              F@_52,
                              TrUserData);
d_field_BaseCommand_error(<<0:1, X:7, Rest/binary>>, N,
                          Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                          F@_9, F@_10, F@_11, F@_12, F@_13, Prev, F@_15, F@_16,
                          F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                          F@_24, F@_25, F@_26, F@_27, F@_28, F@_29, F@_30,
                          F@_31, F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                          F@_38, F@_39, F@_40, F@_41, F@_42, F@_43, F@_44,
                          F@_45, F@_46, F@_47, F@_48, F@_49, F@_50, F@_51,
                          F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandError(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandError(Prev,
                                                                 NewFValue,
                                                                 TrUserData)
                                   end,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_close_producer(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                   F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                   F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                   F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                   F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_close_producer(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
d_field_BaseCommand_close_producer(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, Prev, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                   F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                   F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                   F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                   F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandCloseProducer(Bs,
                                                                 TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandCloseProducer(Prev,
                                                                         NewFValue,
                                                                         TrUserData)
                                   end,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_close_consumer(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                   F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                   F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                   F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                   F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_close_consumer(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
d_field_BaseCommand_close_consumer(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, Prev, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                   F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                   F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                   F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                   F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandCloseConsumer(Bs,
                                                                 TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandCloseConsumer(Prev,
                                                                         NewFValue,
                                                                         TrUserData)
                                   end,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_producer_success(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, F@_29, F@_30,
                                     F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                                     F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                                     F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                     F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_producer_success(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         F@_29,
                                         F@_30,
                                         F@_31,
                                         F@_32,
                                         F@_33,
                                         F@_34,
                                         F@_35,
                                         F@_36,
                                         F@_37,
                                         F@_38,
                                         F@_39,
                                         F@_40,
                                         F@_41,
                                         F@_42,
                                         F@_43,
                                         F@_44,
                                         F@_45,
                                         F@_46,
                                         F@_47,
                                         F@_48,
                                         F@_49,
                                         F@_50,
                                         F@_51,
                                         F@_52,
                                         TrUserData);
d_field_BaseCommand_producer_success(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, Prev, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, F@_29, F@_30,
                                     F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                                     F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                                     F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                     F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandProducerSuccess(Bs,
                                                                   TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandProducerSuccess(Prev,
                                                                           NewFValue,
                                                                           TrUserData)
                                   end,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_ping(<<1:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_ping(Rest,
                             N + 7,
                             X bsl N + Acc,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
d_field_BaseCommand_ping(<<0:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, Prev, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandPing(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandPing(Prev,
                                                                NewFValue,
                                                                TrUserData)
                                   end,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_pong(<<1:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_pong(Rest,
                             N + 7,
                             X bsl N + Acc,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
d_field_BaseCommand_pong(<<0:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, Prev, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandPong(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandPong(Prev,
                                                                NewFValue,
                                                                TrUserData)
                                   end,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_redeliverUnacknowledgedMessages(<<1:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, F@_10, F@_11,
                                                    F@_12, F@_13, F@_14, F@_15,
                                                    F@_16, F@_17, F@_18, F@_19,
                                                    F@_20, F@_21, F@_22, F@_23,
                                                    F@_24, F@_25, F@_26, F@_27,
                                                    F@_28, F@_29, F@_30, F@_31,
                                                    F@_32, F@_33, F@_34, F@_35,
                                                    F@_36, F@_37, F@_38, F@_39,
                                                    F@_40, F@_41, F@_42, F@_43,
                                                    F@_44, F@_45, F@_46, F@_47,
                                                    F@_48, F@_49, F@_50, F@_51,
                                                    F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_redeliverUnacknowledgedMessages(Rest,
                                                        N + 7,
                                                        X bsl N + Acc,
                                                        F@_1,
                                                        F@_2,
                                                        F@_3,
                                                        F@_4,
                                                        F@_5,
                                                        F@_6,
                                                        F@_7,
                                                        F@_8,
                                                        F@_9,
                                                        F@_10,
                                                        F@_11,
                                                        F@_12,
                                                        F@_13,
                                                        F@_14,
                                                        F@_15,
                                                        F@_16,
                                                        F@_17,
                                                        F@_18,
                                                        F@_19,
                                                        F@_20,
                                                        F@_21,
                                                        F@_22,
                                                        F@_23,
                                                        F@_24,
                                                        F@_25,
                                                        F@_26,
                                                        F@_27,
                                                        F@_28,
                                                        F@_29,
                                                        F@_30,
                                                        F@_31,
                                                        F@_32,
                                                        F@_33,
                                                        F@_34,
                                                        F@_35,
                                                        F@_36,
                                                        F@_37,
                                                        F@_38,
                                                        F@_39,
                                                        F@_40,
                                                        F@_41,
                                                        F@_42,
                                                        F@_43,
                                                        F@_44,
                                                        F@_45,
                                                        F@_46,
                                                        F@_47,
                                                        F@_48,
                                                        F@_49,
                                                        F@_50,
                                                        F@_51,
                                                        F@_52,
                                                        TrUserData);
d_field_BaseCommand_redeliverUnacknowledgedMessages(<<0:1,
                                                      X:7, Rest/binary>>,
                                                    N, Acc, F@_1, F@_2, F@_3,
                                                    F@_4, F@_5, F@_6, F@_7,
                                                    F@_8, F@_9, F@_10, F@_11,
                                                    F@_12, F@_13, F@_14, F@_15,
                                                    F@_16, F@_17, F@_18, F@_19,
                                                    Prev, F@_21, F@_22, F@_23,
                                                    F@_24, F@_25, F@_26, F@_27,
                                                    F@_28, F@_29, F@_30, F@_31,
                                                    F@_32, F@_33, F@_34, F@_35,
                                                    F@_36, F@_37, F@_38, F@_39,
                                                    F@_40, F@_41, F@_42, F@_43,
                                                    F@_44, F@_45, F@_46, F@_47,
                                                    F@_48, F@_49, F@_50, F@_51,
                                                    F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandRedeliverUnacknowledgedMessages(Bs,
                                                                                   TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandRedeliverUnacknowledgedMessages(Prev,
                                                                                           NewFValue,
                                                                                           TrUserData)
                                   end,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_partitionMetadata(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData)
    when N < 57 ->
    d_field_BaseCommand_partitionMetadata(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
d_field_BaseCommand_partitionMetadata(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, Prev, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandPartitionedTopicMetadata(Bs,
                                                                            TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandPartitionedTopicMetadata(Prev,
                                                                                    NewFValue,
                                                                                    TrUserData)
                                   end,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_partitionMetadataResponse(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, F@_22, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28, F@_29,
                                              F@_30, F@_31, F@_32, F@_33, F@_34,
                                              F@_35, F@_36, F@_37, F@_38, F@_39,
                                              F@_40, F@_41, F@_42, F@_43, F@_44,
                                              F@_45, F@_46, F@_47, F@_48, F@_49,
                                              F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_partitionMetadataResponse(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
d_field_BaseCommand_partitionMetadataResponse(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, Prev, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28, F@_29,
                                              F@_30, F@_31, F@_32, F@_33, F@_34,
                                              F@_35, F@_36, F@_37, F@_38, F@_39,
                                              F@_40, F@_41, F@_42, F@_43, F@_44,
                                              F@_45, F@_46, F@_47, F@_48, F@_49,
                                              F@_50, F@_51, F@_52,
                                              TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandPartitionedTopicMetadataResponse(Bs,
                                                                                    TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandPartitionedTopicMetadataResponse(Prev,
                                                                                            NewFValue,
                                                                                            TrUserData)
                                   end,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_lookupTopic(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, F@_20,
                                F@_21, F@_22, F@_23, F@_24, F@_25, F@_26, F@_27,
                                F@_28, F@_29, F@_30, F@_31, F@_32, F@_33, F@_34,
                                F@_35, F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_lookupTopic(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    F@_18,
                                    F@_19,
                                    F@_20,
                                    F@_21,
                                    F@_22,
                                    F@_23,
                                    F@_24,
                                    F@_25,
                                    F@_26,
                                    F@_27,
                                    F@_28,
                                    F@_29,
                                    F@_30,
                                    F@_31,
                                    F@_32,
                                    F@_33,
                                    F@_34,
                                    F@_35,
                                    F@_36,
                                    F@_37,
                                    F@_38,
                                    F@_39,
                                    F@_40,
                                    F@_41,
                                    F@_42,
                                    F@_43,
                                    F@_44,
                                    F@_45,
                                    F@_46,
                                    F@_47,
                                    F@_48,
                                    F@_49,
                                    F@_50,
                                    F@_51,
                                    F@_52,
                                    TrUserData);
d_field_BaseCommand_lookupTopic(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, F@_20,
                                F@_21, F@_22, Prev, F@_24, F@_25, F@_26, F@_27,
                                F@_28, F@_29, F@_30, F@_31, F@_32, F@_33, F@_34,
                                F@_35, F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandLookupTopic(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandLookupTopic(Prev,
                                                                       NewFValue,
                                                                       TrUserData)
                                   end,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_lookupTopicResponse(<<1:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, F@_18, F@_19, F@_20, F@_21,
                                        F@_22, F@_23, F@_24, F@_25, F@_26,
                                        F@_27, F@_28, F@_29, F@_30, F@_31,
                                        F@_32, F@_33, F@_34, F@_35, F@_36,
                                        F@_37, F@_38, F@_39, F@_40, F@_41,
                                        F@_42, F@_43, F@_44, F@_45, F@_46,
                                        F@_47, F@_48, F@_49, F@_50, F@_51,
                                        F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_lookupTopicResponse(Rest,
                                            N + 7,
                                            X bsl N + Acc,
                                            F@_1,
                                            F@_2,
                                            F@_3,
                                            F@_4,
                                            F@_5,
                                            F@_6,
                                            F@_7,
                                            F@_8,
                                            F@_9,
                                            F@_10,
                                            F@_11,
                                            F@_12,
                                            F@_13,
                                            F@_14,
                                            F@_15,
                                            F@_16,
                                            F@_17,
                                            F@_18,
                                            F@_19,
                                            F@_20,
                                            F@_21,
                                            F@_22,
                                            F@_23,
                                            F@_24,
                                            F@_25,
                                            F@_26,
                                            F@_27,
                                            F@_28,
                                            F@_29,
                                            F@_30,
                                            F@_31,
                                            F@_32,
                                            F@_33,
                                            F@_34,
                                            F@_35,
                                            F@_36,
                                            F@_37,
                                            F@_38,
                                            F@_39,
                                            F@_40,
                                            F@_41,
                                            F@_42,
                                            F@_43,
                                            F@_44,
                                            F@_45,
                                            F@_46,
                                            F@_47,
                                            F@_48,
                                            F@_49,
                                            F@_50,
                                            F@_51,
                                            F@_52,
                                            TrUserData);
d_field_BaseCommand_lookupTopicResponse(<<0:1, X:7,
                                          Rest/binary>>,
                                        N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                        F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                        F@_12, F@_13, F@_14, F@_15, F@_16,
                                        F@_17, F@_18, F@_19, F@_20, F@_21,
                                        F@_22, F@_23, Prev, F@_25, F@_26, F@_27,
                                        F@_28, F@_29, F@_30, F@_31, F@_32,
                                        F@_33, F@_34, F@_35, F@_36, F@_37,
                                        F@_38, F@_39, F@_40, F@_41, F@_42,
                                        F@_43, F@_44, F@_45, F@_46, F@_47,
                                        F@_48, F@_49, F@_50, F@_51, F@_52,
                                        TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandLookupTopicResponse(Bs,
                                                                       TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandLookupTopicResponse(Prev,
                                                                               NewFValue,
                                                                               TrUserData)
                                   end,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_consumerStats(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                  F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                  F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                  F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                  F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                  F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                  F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_consumerStats(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      F@_18,
                                      F@_19,
                                      F@_20,
                                      F@_21,
                                      F@_22,
                                      F@_23,
                                      F@_24,
                                      F@_25,
                                      F@_26,
                                      F@_27,
                                      F@_28,
                                      F@_29,
                                      F@_30,
                                      F@_31,
                                      F@_32,
                                      F@_33,
                                      F@_34,
                                      F@_35,
                                      F@_36,
                                      F@_37,
                                      F@_38,
                                      F@_39,
                                      F@_40,
                                      F@_41,
                                      F@_42,
                                      F@_43,
                                      F@_44,
                                      F@_45,
                                      F@_46,
                                      F@_47,
                                      F@_48,
                                      F@_49,
                                      F@_50,
                                      F@_51,
                                      F@_52,
                                      TrUserData);
d_field_BaseCommand_consumerStats(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                  F@_20, F@_21, F@_22, F@_23, F@_24, Prev,
                                  F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                  F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                  F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                  F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                  F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandConsumerStats(Bs,
                                                                 TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandConsumerStats(Prev,
                                                                         NewFValue,
                                                                         TrUserData)
                                   end,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_consumerStatsResponse(<<1:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                          F@_12, F@_13, F@_14, F@_15, F@_16,
                                          F@_17, F@_18, F@_19, F@_20, F@_21,
                                          F@_22, F@_23, F@_24, F@_25, F@_26,
                                          F@_27, F@_28, F@_29, F@_30, F@_31,
                                          F@_32, F@_33, F@_34, F@_35, F@_36,
                                          F@_37, F@_38, F@_39, F@_40, F@_41,
                                          F@_42, F@_43, F@_44, F@_45, F@_46,
                                          F@_47, F@_48, F@_49, F@_50, F@_51,
                                          F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_consumerStatsResponse(Rest,
                                              N + 7,
                                              X bsl N + Acc,
                                              F@_1,
                                              F@_2,
                                              F@_3,
                                              F@_4,
                                              F@_5,
                                              F@_6,
                                              F@_7,
                                              F@_8,
                                              F@_9,
                                              F@_10,
                                              F@_11,
                                              F@_12,
                                              F@_13,
                                              F@_14,
                                              F@_15,
                                              F@_16,
                                              F@_17,
                                              F@_18,
                                              F@_19,
                                              F@_20,
                                              F@_21,
                                              F@_22,
                                              F@_23,
                                              F@_24,
                                              F@_25,
                                              F@_26,
                                              F@_27,
                                              F@_28,
                                              F@_29,
                                              F@_30,
                                              F@_31,
                                              F@_32,
                                              F@_33,
                                              F@_34,
                                              F@_35,
                                              F@_36,
                                              F@_37,
                                              F@_38,
                                              F@_39,
                                              F@_40,
                                              F@_41,
                                              F@_42,
                                              F@_43,
                                              F@_44,
                                              F@_45,
                                              F@_46,
                                              F@_47,
                                              F@_48,
                                              F@_49,
                                              F@_50,
                                              F@_51,
                                              F@_52,
                                              TrUserData);
d_field_BaseCommand_consumerStatsResponse(<<0:1, X:7,
                                            Rest/binary>>,
                                          N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                          F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                          F@_12, F@_13, F@_14, F@_15, F@_16,
                                          F@_17, F@_18, F@_19, F@_20, F@_21,
                                          F@_22, F@_23, F@_24, F@_25, Prev,
                                          F@_27, F@_28, F@_29, F@_30, F@_31,
                                          F@_32, F@_33, F@_34, F@_35, F@_36,
                                          F@_37, F@_38, F@_39, F@_40, F@_41,
                                          F@_42, F@_43, F@_44, F@_45, F@_46,
                                          F@_47, F@_48, F@_49, F@_50, F@_51,
                                          F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandConsumerStatsResponse(Bs,
                                                                         TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandConsumerStatsResponse(Prev,
                                                                                 NewFValue,
                                                                                 TrUserData)
                                   end,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_reachedEndOfTopic(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData)
    when N < 57 ->
    d_field_BaseCommand_reachedEndOfTopic(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
d_field_BaseCommand_reachedEndOfTopic(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, Prev, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandReachedEndOfTopic(Bs,
                                                                     TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandReachedEndOfTopic(Prev,
                                                                             NewFValue,
                                                                             TrUserData)
                                   end,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_seek(<<1:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_seek(Rest,
                             N + 7,
                             X bsl N + Acc,
                             F@_1,
                             F@_2,
                             F@_3,
                             F@_4,
                             F@_5,
                             F@_6,
                             F@_7,
                             F@_8,
                             F@_9,
                             F@_10,
                             F@_11,
                             F@_12,
                             F@_13,
                             F@_14,
                             F@_15,
                             F@_16,
                             F@_17,
                             F@_18,
                             F@_19,
                             F@_20,
                             F@_21,
                             F@_22,
                             F@_23,
                             F@_24,
                             F@_25,
                             F@_26,
                             F@_27,
                             F@_28,
                             F@_29,
                             F@_30,
                             F@_31,
                             F@_32,
                             F@_33,
                             F@_34,
                             F@_35,
                             F@_36,
                             F@_37,
                             F@_38,
                             F@_39,
                             F@_40,
                             F@_41,
                             F@_42,
                             F@_43,
                             F@_44,
                             F@_45,
                             F@_46,
                             F@_47,
                             F@_48,
                             F@_49,
                             F@_50,
                             F@_51,
                             F@_52,
                             TrUserData);
d_field_BaseCommand_seek(<<0:1, X:7, Rest/binary>>, N,
                         Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                         F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                         F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                         F@_25, F@_26, F@_27, Prev, F@_29, F@_30, F@_31, F@_32,
                         F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                         F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                         F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandSeek(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandSeek(Prev,
                                                                NewFValue,
                                                                TrUserData)
                                   end,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_getLastMessageId(<<1:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, F@_29, F@_30,
                                     F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                                     F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                                     F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                     F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_getLastMessageId(Rest,
                                         N + 7,
                                         X bsl N + Acc,
                                         F@_1,
                                         F@_2,
                                         F@_3,
                                         F@_4,
                                         F@_5,
                                         F@_6,
                                         F@_7,
                                         F@_8,
                                         F@_9,
                                         F@_10,
                                         F@_11,
                                         F@_12,
                                         F@_13,
                                         F@_14,
                                         F@_15,
                                         F@_16,
                                         F@_17,
                                         F@_18,
                                         F@_19,
                                         F@_20,
                                         F@_21,
                                         F@_22,
                                         F@_23,
                                         F@_24,
                                         F@_25,
                                         F@_26,
                                         F@_27,
                                         F@_28,
                                         F@_29,
                                         F@_30,
                                         F@_31,
                                         F@_32,
                                         F@_33,
                                         F@_34,
                                         F@_35,
                                         F@_36,
                                         F@_37,
                                         F@_38,
                                         F@_39,
                                         F@_40,
                                         F@_41,
                                         F@_42,
                                         F@_43,
                                         F@_44,
                                         F@_45,
                                         F@_46,
                                         F@_47,
                                         F@_48,
                                         F@_49,
                                         F@_50,
                                         F@_51,
                                         F@_52,
                                         TrUserData);
d_field_BaseCommand_getLastMessageId(<<0:1, X:7,
                                       Rest/binary>>,
                                     N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                     F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                                     F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                     F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                                     F@_25, F@_26, F@_27, F@_28, Prev, F@_30,
                                     F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                                     F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                                     F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                     F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandGetLastMessageId(Bs,
                                                                    TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandGetLastMessageId(Prev,
                                                                            NewFValue,
                                                                            TrUserData)
                                   end,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_getLastMessageIdResponse(<<1:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, F@_6, F@_7, F@_8, F@_9,
                                             F@_10, F@_11, F@_12, F@_13, F@_14,
                                             F@_15, F@_16, F@_17, F@_18, F@_19,
                                             F@_20, F@_21, F@_22, F@_23, F@_24,
                                             F@_25, F@_26, F@_27, F@_28, F@_29,
                                             F@_30, F@_31, F@_32, F@_33, F@_34,
                                             F@_35, F@_36, F@_37, F@_38, F@_39,
                                             F@_40, F@_41, F@_42, F@_43, F@_44,
                                             F@_45, F@_46, F@_47, F@_48, F@_49,
                                             F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_getLastMessageIdResponse(Rest,
                                                 N + 7,
                                                 X bsl N + Acc,
                                                 F@_1,
                                                 F@_2,
                                                 F@_3,
                                                 F@_4,
                                                 F@_5,
                                                 F@_6,
                                                 F@_7,
                                                 F@_8,
                                                 F@_9,
                                                 F@_10,
                                                 F@_11,
                                                 F@_12,
                                                 F@_13,
                                                 F@_14,
                                                 F@_15,
                                                 F@_16,
                                                 F@_17,
                                                 F@_18,
                                                 F@_19,
                                                 F@_20,
                                                 F@_21,
                                                 F@_22,
                                                 F@_23,
                                                 F@_24,
                                                 F@_25,
                                                 F@_26,
                                                 F@_27,
                                                 F@_28,
                                                 F@_29,
                                                 F@_30,
                                                 F@_31,
                                                 F@_32,
                                                 F@_33,
                                                 F@_34,
                                                 F@_35,
                                                 F@_36,
                                                 F@_37,
                                                 F@_38,
                                                 F@_39,
                                                 F@_40,
                                                 F@_41,
                                                 F@_42,
                                                 F@_43,
                                                 F@_44,
                                                 F@_45,
                                                 F@_46,
                                                 F@_47,
                                                 F@_48,
                                                 F@_49,
                                                 F@_50,
                                                 F@_51,
                                                 F@_52,
                                                 TrUserData);
d_field_BaseCommand_getLastMessageIdResponse(<<0:1, X:7,
                                               Rest/binary>>,
                                             N, Acc, F@_1, F@_2, F@_3, F@_4,
                                             F@_5, F@_6, F@_7, F@_8, F@_9,
                                             F@_10, F@_11, F@_12, F@_13, F@_14,
                                             F@_15, F@_16, F@_17, F@_18, F@_19,
                                             F@_20, F@_21, F@_22, F@_23, F@_24,
                                             F@_25, F@_26, F@_27, F@_28, F@_29,
                                             Prev, F@_31, F@_32, F@_33, F@_34,
                                             F@_35, F@_36, F@_37, F@_38, F@_39,
                                             F@_40, F@_41, F@_42, F@_43, F@_44,
                                             F@_45, F@_46, F@_47, F@_48, F@_49,
                                             F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandGetLastMessageIdResponse(Bs,
                                                                            TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandGetLastMessageIdResponse(Prev,
                                                                                    NewFValue,
                                                                                    TrUserData)
                                   end,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_active_consumer_change(<<1:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                           F@_12, F@_13, F@_14, F@_15, F@_16,
                                           F@_17, F@_18, F@_19, F@_20, F@_21,
                                           F@_22, F@_23, F@_24, F@_25, F@_26,
                                           F@_27, F@_28, F@_29, F@_30, F@_31,
                                           F@_32, F@_33, F@_34, F@_35, F@_36,
                                           F@_37, F@_38, F@_39, F@_40, F@_41,
                                           F@_42, F@_43, F@_44, F@_45, F@_46,
                                           F@_47, F@_48, F@_49, F@_50, F@_51,
                                           F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_active_consumer_change(Rest,
                                               N + 7,
                                               X bsl N + Acc,
                                               F@_1,
                                               F@_2,
                                               F@_3,
                                               F@_4,
                                               F@_5,
                                               F@_6,
                                               F@_7,
                                               F@_8,
                                               F@_9,
                                               F@_10,
                                               F@_11,
                                               F@_12,
                                               F@_13,
                                               F@_14,
                                               F@_15,
                                               F@_16,
                                               F@_17,
                                               F@_18,
                                               F@_19,
                                               F@_20,
                                               F@_21,
                                               F@_22,
                                               F@_23,
                                               F@_24,
                                               F@_25,
                                               F@_26,
                                               F@_27,
                                               F@_28,
                                               F@_29,
                                               F@_30,
                                               F@_31,
                                               F@_32,
                                               F@_33,
                                               F@_34,
                                               F@_35,
                                               F@_36,
                                               F@_37,
                                               F@_38,
                                               F@_39,
                                               F@_40,
                                               F@_41,
                                               F@_42,
                                               F@_43,
                                               F@_44,
                                               F@_45,
                                               F@_46,
                                               F@_47,
                                               F@_48,
                                               F@_49,
                                               F@_50,
                                               F@_51,
                                               F@_52,
                                               TrUserData);
d_field_BaseCommand_active_consumer_change(<<0:1, X:7,
                                             Rest/binary>>,
                                           N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                           F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                           F@_12, F@_13, F@_14, F@_15, F@_16,
                                           F@_17, F@_18, F@_19, F@_20, F@_21,
                                           F@_22, F@_23, F@_24, F@_25, F@_26,
                                           F@_27, F@_28, F@_29, F@_30, Prev,
                                           F@_32, F@_33, F@_34, F@_35, F@_36,
                                           F@_37, F@_38, F@_39, F@_40, F@_41,
                                           F@_42, F@_43, F@_44, F@_45, F@_46,
                                           F@_47, F@_48, F@_49, F@_50, F@_51,
                                           F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandActiveConsumerChange(Bs,
                                                                        TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandActiveConsumerChange(Prev,
                                                                                NewFValue,
                                                                                TrUserData)
                                   end,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_getTopicsOfNamespace(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, F@_20, F@_21,
                                         F@_22, F@_23, F@_24, F@_25, F@_26,
                                         F@_27, F@_28, F@_29, F@_30, F@_31,
                                         F@_32, F@_33, F@_34, F@_35, F@_36,
                                         F@_37, F@_38, F@_39, F@_40, F@_41,
                                         F@_42, F@_43, F@_44, F@_45, F@_46,
                                         F@_47, F@_48, F@_49, F@_50, F@_51,
                                         F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_getTopicsOfNamespace(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             F@_29,
                                             F@_30,
                                             F@_31,
                                             F@_32,
                                             F@_33,
                                             F@_34,
                                             F@_35,
                                             F@_36,
                                             F@_37,
                                             F@_38,
                                             F@_39,
                                             F@_40,
                                             F@_41,
                                             F@_42,
                                             F@_43,
                                             F@_44,
                                             F@_45,
                                             F@_46,
                                             F@_47,
                                             F@_48,
                                             F@_49,
                                             F@_50,
                                             F@_51,
                                             F@_52,
                                             TrUserData);
d_field_BaseCommand_getTopicsOfNamespace(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, F@_20, F@_21,
                                         F@_22, F@_23, F@_24, F@_25, F@_26,
                                         F@_27, F@_28, F@_29, F@_30, F@_31,
                                         Prev, F@_33, F@_34, F@_35, F@_36,
                                         F@_37, F@_38, F@_39, F@_40, F@_41,
                                         F@_42, F@_43, F@_44, F@_45, F@_46,
                                         F@_47, F@_48, F@_49, F@_50, F@_51,
                                         F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandGetTopicsOfNamespace(Bs,
                                                                        TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandGetTopicsOfNamespace(Prev,
                                                                                NewFValue,
                                                                                TrUserData)
                                   end,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_getTopicsOfNamespaceResponse(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8, F@_9,
                                                 F@_10, F@_11, F@_12, F@_13,
                                                 F@_14, F@_15, F@_16, F@_17,
                                                 F@_18, F@_19, F@_20, F@_21,
                                                 F@_22, F@_23, F@_24, F@_25,
                                                 F@_26, F@_27, F@_28, F@_29,
                                                 F@_30, F@_31, F@_32, F@_33,
                                                 F@_34, F@_35, F@_36, F@_37,
                                                 F@_38, F@_39, F@_40, F@_41,
                                                 F@_42, F@_43, F@_44, F@_45,
                                                 F@_46, F@_47, F@_48, F@_49,
                                                 F@_50, F@_51, F@_52,
                                                 TrUserData)
    when N < 57 ->
    d_field_BaseCommand_getTopicsOfNamespaceResponse(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
d_field_BaseCommand_getTopicsOfNamespaceResponse(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8, F@_9,
                                                 F@_10, F@_11, F@_12, F@_13,
                                                 F@_14, F@_15, F@_16, F@_17,
                                                 F@_18, F@_19, F@_20, F@_21,
                                                 F@_22, F@_23, F@_24, F@_25,
                                                 F@_26, F@_27, F@_28, F@_29,
                                                 F@_30, F@_31, F@_32, Prev,
                                                 F@_34, F@_35, F@_36, F@_37,
                                                 F@_38, F@_39, F@_40, F@_41,
                                                 F@_42, F@_43, F@_44, F@_45,
                                                 F@_46, F@_47, F@_48, F@_49,
                                                 F@_50, F@_51, F@_52,
                                                 TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandGetTopicsOfNamespaceResponse(Bs,
                                                                                TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandGetTopicsOfNamespaceResponse(Prev,
                                                                                        NewFValue,
                                                                                        TrUserData)
                                   end,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_getSchema(<<1:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                              F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                              F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                              F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                              F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                              F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                              F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_getSchema(Rest,
                                  N + 7,
                                  X bsl N + Acc,
                                  F@_1,
                                  F@_2,
                                  F@_3,
                                  F@_4,
                                  F@_5,
                                  F@_6,
                                  F@_7,
                                  F@_8,
                                  F@_9,
                                  F@_10,
                                  F@_11,
                                  F@_12,
                                  F@_13,
                                  F@_14,
                                  F@_15,
                                  F@_16,
                                  F@_17,
                                  F@_18,
                                  F@_19,
                                  F@_20,
                                  F@_21,
                                  F@_22,
                                  F@_23,
                                  F@_24,
                                  F@_25,
                                  F@_26,
                                  F@_27,
                                  F@_28,
                                  F@_29,
                                  F@_30,
                                  F@_31,
                                  F@_32,
                                  F@_33,
                                  F@_34,
                                  F@_35,
                                  F@_36,
                                  F@_37,
                                  F@_38,
                                  F@_39,
                                  F@_40,
                                  F@_41,
                                  F@_42,
                                  F@_43,
                                  F@_44,
                                  F@_45,
                                  F@_46,
                                  F@_47,
                                  F@_48,
                                  F@_49,
                                  F@_50,
                                  F@_51,
                                  F@_52,
                                  TrUserData);
d_field_BaseCommand_getSchema(<<0:1, X:7, Rest/binary>>,
                              N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7,
                              F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14,
                              F@_15, F@_16, F@_17, F@_18, F@_19, F@_20, F@_21,
                              F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                              F@_29, F@_30, F@_31, F@_32, F@_33, Prev, F@_35,
                              F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                              F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                              F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandGetSchema(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandGetSchema(Prev,
                                                                     NewFValue,
                                                                     TrUserData)
                                   end,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_getSchemaResponse(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData)
    when N < 57 ->
    d_field_BaseCommand_getSchemaResponse(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
d_field_BaseCommand_getSchemaResponse(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, Prev,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandGetSchemaResponse(Bs,
                                                                     TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandGetSchemaResponse(Prev,
                                                                             NewFValue,
                                                                             TrUserData)
                                   end,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_authChallenge(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                  F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                  F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                  F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                  F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                  F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                  F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_authChallenge(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      F@_18,
                                      F@_19,
                                      F@_20,
                                      F@_21,
                                      F@_22,
                                      F@_23,
                                      F@_24,
                                      F@_25,
                                      F@_26,
                                      F@_27,
                                      F@_28,
                                      F@_29,
                                      F@_30,
                                      F@_31,
                                      F@_32,
                                      F@_33,
                                      F@_34,
                                      F@_35,
                                      F@_36,
                                      F@_37,
                                      F@_38,
                                      F@_39,
                                      F@_40,
                                      F@_41,
                                      F@_42,
                                      F@_43,
                                      F@_44,
                                      F@_45,
                                      F@_46,
                                      F@_47,
                                      F@_48,
                                      F@_49,
                                      F@_50,
                                      F@_51,
                                      F@_52,
                                      TrUserData);
d_field_BaseCommand_authChallenge(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                  F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                  F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                  F@_32, F@_33, F@_34, F@_35, Prev, F@_37,
                                  F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                  F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                  F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandAuthChallenge(Bs,
                                                                 TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandAuthChallenge(Prev,
                                                                         NewFValue,
                                                                         TrUserData)
                                   end,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_authResponse(<<1:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                 F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                 F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                 F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                 F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                 F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                 F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_authResponse(Rest,
                                     N + 7,
                                     X bsl N + Acc,
                                     F@_1,
                                     F@_2,
                                     F@_3,
                                     F@_4,
                                     F@_5,
                                     F@_6,
                                     F@_7,
                                     F@_8,
                                     F@_9,
                                     F@_10,
                                     F@_11,
                                     F@_12,
                                     F@_13,
                                     F@_14,
                                     F@_15,
                                     F@_16,
                                     F@_17,
                                     F@_18,
                                     F@_19,
                                     F@_20,
                                     F@_21,
                                     F@_22,
                                     F@_23,
                                     F@_24,
                                     F@_25,
                                     F@_26,
                                     F@_27,
                                     F@_28,
                                     F@_29,
                                     F@_30,
                                     F@_31,
                                     F@_32,
                                     F@_33,
                                     F@_34,
                                     F@_35,
                                     F@_36,
                                     F@_37,
                                     F@_38,
                                     F@_39,
                                     F@_40,
                                     F@_41,
                                     F@_42,
                                     F@_43,
                                     F@_44,
                                     F@_45,
                                     F@_46,
                                     F@_47,
                                     F@_48,
                                     F@_49,
                                     F@_50,
                                     F@_51,
                                     F@_52,
                                     TrUserData);
d_field_BaseCommand_authResponse(<<0:1, X:7,
                                   Rest/binary>>,
                                 N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                 F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                 F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                 F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                 F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                 F@_32, F@_33, F@_34, F@_35, F@_36, Prev, F@_38,
                                 F@_39, F@_40, F@_41, F@_42, F@_43, F@_44,
                                 F@_45, F@_46, F@_47, F@_48, F@_49, F@_50,
                                 F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandAuthResponse(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandAuthResponse(Prev,
                                                                        NewFValue,
                                                                        TrUserData)
                                   end,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_ackResponse(<<1:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, F@_20,
                                F@_21, F@_22, F@_23, F@_24, F@_25, F@_26, F@_27,
                                F@_28, F@_29, F@_30, F@_31, F@_32, F@_33, F@_34,
                                F@_35, F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                F@_49, F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_ackResponse(Rest,
                                    N + 7,
                                    X bsl N + Acc,
                                    F@_1,
                                    F@_2,
                                    F@_3,
                                    F@_4,
                                    F@_5,
                                    F@_6,
                                    F@_7,
                                    F@_8,
                                    F@_9,
                                    F@_10,
                                    F@_11,
                                    F@_12,
                                    F@_13,
                                    F@_14,
                                    F@_15,
                                    F@_16,
                                    F@_17,
                                    F@_18,
                                    F@_19,
                                    F@_20,
                                    F@_21,
                                    F@_22,
                                    F@_23,
                                    F@_24,
                                    F@_25,
                                    F@_26,
                                    F@_27,
                                    F@_28,
                                    F@_29,
                                    F@_30,
                                    F@_31,
                                    F@_32,
                                    F@_33,
                                    F@_34,
                                    F@_35,
                                    F@_36,
                                    F@_37,
                                    F@_38,
                                    F@_39,
                                    F@_40,
                                    F@_41,
                                    F@_42,
                                    F@_43,
                                    F@_44,
                                    F@_45,
                                    F@_46,
                                    F@_47,
                                    F@_48,
                                    F@_49,
                                    F@_50,
                                    F@_51,
                                    F@_52,
                                    TrUserData);
d_field_BaseCommand_ackResponse(<<0:1, X:7,
                                  Rest/binary>>,
                                N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, F@_20,
                                F@_21, F@_22, F@_23, F@_24, F@_25, F@_26, F@_27,
                                F@_28, F@_29, F@_30, F@_31, F@_32, F@_33, F@_34,
                                F@_35, F@_36, F@_37, Prev, F@_39, F@_40, F@_41,
                                F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                                F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandAckResponse(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandAckResponse(Prev,
                                                                       NewFValue,
                                                                       TrUserData)
                                   end,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_getOrCreateSchema(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData)
    when N < 57 ->
    d_field_BaseCommand_getOrCreateSchema(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
d_field_BaseCommand_getOrCreateSchema(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, Prev, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandGetOrCreateSchema(Bs,
                                                                     TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandGetOrCreateSchema(Prev,
                                                                             NewFValue,
                                                                             TrUserData)
                                   end,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_getOrCreateSchemaResponse(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, F@_22, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28, F@_29,
                                              F@_30, F@_31, F@_32, F@_33, F@_34,
                                              F@_35, F@_36, F@_37, F@_38, F@_39,
                                              F@_40, F@_41, F@_42, F@_43, F@_44,
                                              F@_45, F@_46, F@_47, F@_48, F@_49,
                                              F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_getOrCreateSchemaResponse(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
d_field_BaseCommand_getOrCreateSchemaResponse(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, F@_22, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28, F@_29,
                                              F@_30, F@_31, F@_32, F@_33, F@_34,
                                              F@_35, F@_36, F@_37, F@_38, F@_39,
                                              Prev, F@_41, F@_42, F@_43, F@_44,
                                              F@_45, F@_46, F@_47, F@_48, F@_49,
                                              F@_50, F@_51, F@_52,
                                              TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandGetOrCreateSchemaResponse(Bs,
                                                                             TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandGetOrCreateSchemaResponse(Prev,
                                                                                     NewFValue,
                                                                                     TrUserData)
                                   end,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_newTxn(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                           F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15,
                           F@_16, F@_17, F@_18, F@_19, F@_20, F@_21, F@_22,
                           F@_23, F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                           F@_30, F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                           F@_37, F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                           F@_44, F@_45, F@_46, F@_47, F@_48, F@_49, F@_50,
                           F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_newTxn(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               F@_3,
                               F@_4,
                               F@_5,
                               F@_6,
                               F@_7,
                               F@_8,
                               F@_9,
                               F@_10,
                               F@_11,
                               F@_12,
                               F@_13,
                               F@_14,
                               F@_15,
                               F@_16,
                               F@_17,
                               F@_18,
                               F@_19,
                               F@_20,
                               F@_21,
                               F@_22,
                               F@_23,
                               F@_24,
                               F@_25,
                               F@_26,
                               F@_27,
                               F@_28,
                               F@_29,
                               F@_30,
                               F@_31,
                               F@_32,
                               F@_33,
                               F@_34,
                               F@_35,
                               F@_36,
                               F@_37,
                               F@_38,
                               F@_39,
                               F@_40,
                               F@_41,
                               F@_42,
                               F@_43,
                               F@_44,
                               F@_45,
                               F@_46,
                               F@_47,
                               F@_48,
                               F@_49,
                               F@_50,
                               F@_51,
                               F@_52,
                               TrUserData);
d_field_BaseCommand_newTxn(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                           F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15,
                           F@_16, F@_17, F@_18, F@_19, F@_20, F@_21, F@_22,
                           F@_23, F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                           F@_30, F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                           F@_37, F@_38, F@_39, F@_40, Prev, F@_42, F@_43,
                           F@_44, F@_45, F@_46, F@_47, F@_48, F@_49, F@_50,
                           F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandNewTxn(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandNewTxn(Prev,
                                                                  NewFValue,
                                                                  TrUserData)
                                   end,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_newTxnResponse(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                   F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                   F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                   F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                   F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_newTxnResponse(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
d_field_BaseCommand_newTxnResponse(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                   F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                   F@_38, F@_39, F@_40, F@_41, Prev, F@_43,
                                   F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                   F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandNewTxnResponse(Bs,
                                                                  TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandNewTxnResponse(Prev,
                                                                          NewFValue,
                                                                          TrUserData)
                                   end,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_addPartitionToTxn(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData)
    when N < 57 ->
    d_field_BaseCommand_addPartitionToTxn(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
d_field_BaseCommand_addPartitionToTxn(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, Prev, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandAddPartitionToTxn(Bs,
                                                                     TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandAddPartitionToTxn(Prev,
                                                                             NewFValue,
                                                                             TrUserData)
                                   end,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_addPartitionToTxnResponse(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, F@_22, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28, F@_29,
                                              F@_30, F@_31, F@_32, F@_33, F@_34,
                                              F@_35, F@_36, F@_37, F@_38, F@_39,
                                              F@_40, F@_41, F@_42, F@_43, F@_44,
                                              F@_45, F@_46, F@_47, F@_48, F@_49,
                                              F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_addPartitionToTxnResponse(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
d_field_BaseCommand_addPartitionToTxnResponse(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, F@_22, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28, F@_29,
                                              F@_30, F@_31, F@_32, F@_33, F@_34,
                                              F@_35, F@_36, F@_37, F@_38, F@_39,
                                              F@_40, F@_41, F@_42, F@_43, Prev,
                                              F@_45, F@_46, F@_47, F@_48, F@_49,
                                              F@_50, F@_51, F@_52,
                                              TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandAddPartitionToTxnResponse(Bs,
                                                                             TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandAddPartitionToTxnResponse(Prev,
                                                                                     NewFValue,
                                                                                     TrUserData)
                                   end,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_addSubscriptionToTxn(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, F@_20, F@_21,
                                         F@_22, F@_23, F@_24, F@_25, F@_26,
                                         F@_27, F@_28, F@_29, F@_30, F@_31,
                                         F@_32, F@_33, F@_34, F@_35, F@_36,
                                         F@_37, F@_38, F@_39, F@_40, F@_41,
                                         F@_42, F@_43, F@_44, F@_45, F@_46,
                                         F@_47, F@_48, F@_49, F@_50, F@_51,
                                         F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_addSubscriptionToTxn(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             F@_29,
                                             F@_30,
                                             F@_31,
                                             F@_32,
                                             F@_33,
                                             F@_34,
                                             F@_35,
                                             F@_36,
                                             F@_37,
                                             F@_38,
                                             F@_39,
                                             F@_40,
                                             F@_41,
                                             F@_42,
                                             F@_43,
                                             F@_44,
                                             F@_45,
                                             F@_46,
                                             F@_47,
                                             F@_48,
                                             F@_49,
                                             F@_50,
                                             F@_51,
                                             F@_52,
                                             TrUserData);
d_field_BaseCommand_addSubscriptionToTxn(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, F@_20, F@_21,
                                         F@_22, F@_23, F@_24, F@_25, F@_26,
                                         F@_27, F@_28, F@_29, F@_30, F@_31,
                                         F@_32, F@_33, F@_34, F@_35, F@_36,
                                         F@_37, F@_38, F@_39, F@_40, F@_41,
                                         F@_42, F@_43, F@_44, Prev, F@_46,
                                         F@_47, F@_48, F@_49, F@_50, F@_51,
                                         F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandAddSubscriptionToTxn(Bs,
                                                                        TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandAddSubscriptionToTxn(Prev,
                                                                                NewFValue,
                                                                                TrUserData)
                                   end,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_addSubscriptionToTxnResponse(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8, F@_9,
                                                 F@_10, F@_11, F@_12, F@_13,
                                                 F@_14, F@_15, F@_16, F@_17,
                                                 F@_18, F@_19, F@_20, F@_21,
                                                 F@_22, F@_23, F@_24, F@_25,
                                                 F@_26, F@_27, F@_28, F@_29,
                                                 F@_30, F@_31, F@_32, F@_33,
                                                 F@_34, F@_35, F@_36, F@_37,
                                                 F@_38, F@_39, F@_40, F@_41,
                                                 F@_42, F@_43, F@_44, F@_45,
                                                 F@_46, F@_47, F@_48, F@_49,
                                                 F@_50, F@_51, F@_52,
                                                 TrUserData)
    when N < 57 ->
    d_field_BaseCommand_addSubscriptionToTxnResponse(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
d_field_BaseCommand_addSubscriptionToTxnResponse(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8, F@_9,
                                                 F@_10, F@_11, F@_12, F@_13,
                                                 F@_14, F@_15, F@_16, F@_17,
                                                 F@_18, F@_19, F@_20, F@_21,
                                                 F@_22, F@_23, F@_24, F@_25,
                                                 F@_26, F@_27, F@_28, F@_29,
                                                 F@_30, F@_31, F@_32, F@_33,
                                                 F@_34, F@_35, F@_36, F@_37,
                                                 F@_38, F@_39, F@_40, F@_41,
                                                 F@_42, F@_43, F@_44, F@_45,
                                                 Prev, F@_47, F@_48, F@_49,
                                                 F@_50, F@_51, F@_52,
                                                 TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandAddSubscriptionToTxnResponse(Bs,
                                                                                TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandAddSubscriptionToTxnResponse(Prev,
                                                                                        NewFValue,
                                                                                        TrUserData)
                                   end,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_endTxn(<<1:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                           F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15,
                           F@_16, F@_17, F@_18, F@_19, F@_20, F@_21, F@_22,
                           F@_23, F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                           F@_30, F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                           F@_37, F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                           F@_44, F@_45, F@_46, F@_47, F@_48, F@_49, F@_50,
                           F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_endTxn(Rest,
                               N + 7,
                               X bsl N + Acc,
                               F@_1,
                               F@_2,
                               F@_3,
                               F@_4,
                               F@_5,
                               F@_6,
                               F@_7,
                               F@_8,
                               F@_9,
                               F@_10,
                               F@_11,
                               F@_12,
                               F@_13,
                               F@_14,
                               F@_15,
                               F@_16,
                               F@_17,
                               F@_18,
                               F@_19,
                               F@_20,
                               F@_21,
                               F@_22,
                               F@_23,
                               F@_24,
                               F@_25,
                               F@_26,
                               F@_27,
                               F@_28,
                               F@_29,
                               F@_30,
                               F@_31,
                               F@_32,
                               F@_33,
                               F@_34,
                               F@_35,
                               F@_36,
                               F@_37,
                               F@_38,
                               F@_39,
                               F@_40,
                               F@_41,
                               F@_42,
                               F@_43,
                               F@_44,
                               F@_45,
                               F@_46,
                               F@_47,
                               F@_48,
                               F@_49,
                               F@_50,
                               F@_51,
                               F@_52,
                               TrUserData);
d_field_BaseCommand_endTxn(<<0:1, X:7, Rest/binary>>, N,
                           Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                           F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15,
                           F@_16, F@_17, F@_18, F@_19, F@_20, F@_21, F@_22,
                           F@_23, F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                           F@_30, F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                           F@_37, F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                           F@_44, F@_45, F@_46, Prev, F@_48, F@_49, F@_50,
                           F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandEndTxn(Bs, TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandEndTxn(Prev,
                                                                  NewFValue,
                                                                  TrUserData)
                                   end,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_endTxnResponse(<<1:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                   F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                   F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                   F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                   F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_endTxnResponse(Rest,
                                       N + 7,
                                       X bsl N + Acc,
                                       F@_1,
                                       F@_2,
                                       F@_3,
                                       F@_4,
                                       F@_5,
                                       F@_6,
                                       F@_7,
                                       F@_8,
                                       F@_9,
                                       F@_10,
                                       F@_11,
                                       F@_12,
                                       F@_13,
                                       F@_14,
                                       F@_15,
                                       F@_16,
                                       F@_17,
                                       F@_18,
                                       F@_19,
                                       F@_20,
                                       F@_21,
                                       F@_22,
                                       F@_23,
                                       F@_24,
                                       F@_25,
                                       F@_26,
                                       F@_27,
                                       F@_28,
                                       F@_29,
                                       F@_30,
                                       F@_31,
                                       F@_32,
                                       F@_33,
                                       F@_34,
                                       F@_35,
                                       F@_36,
                                       F@_37,
                                       F@_38,
                                       F@_39,
                                       F@_40,
                                       F@_41,
                                       F@_42,
                                       F@_43,
                                       F@_44,
                                       F@_45,
                                       F@_46,
                                       F@_47,
                                       F@_48,
                                       F@_49,
                                       F@_50,
                                       F@_51,
                                       F@_52,
                                       TrUserData);
d_field_BaseCommand_endTxnResponse(<<0:1, X:7,
                                     Rest/binary>>,
                                   N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                   F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                   F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                   F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                   F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                   F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                   F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                   F@_44, F@_45, F@_46, F@_47, Prev, F@_49,
                                   F@_50, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandEndTxnResponse(Bs,
                                                                  TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandEndTxnResponse(Prev,
                                                                          NewFValue,
                                                                          TrUserData)
                                   end,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_endTxnOnPartition(<<1:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, F@_49, F@_50, F@_51, F@_52,
                                      TrUserData)
    when N < 57 ->
    d_field_BaseCommand_endTxnOnPartition(Rest,
                                          N + 7,
                                          X bsl N + Acc,
                                          F@_1,
                                          F@_2,
                                          F@_3,
                                          F@_4,
                                          F@_5,
                                          F@_6,
                                          F@_7,
                                          F@_8,
                                          F@_9,
                                          F@_10,
                                          F@_11,
                                          F@_12,
                                          F@_13,
                                          F@_14,
                                          F@_15,
                                          F@_16,
                                          F@_17,
                                          F@_18,
                                          F@_19,
                                          F@_20,
                                          F@_21,
                                          F@_22,
                                          F@_23,
                                          F@_24,
                                          F@_25,
                                          F@_26,
                                          F@_27,
                                          F@_28,
                                          F@_29,
                                          F@_30,
                                          F@_31,
                                          F@_32,
                                          F@_33,
                                          F@_34,
                                          F@_35,
                                          F@_36,
                                          F@_37,
                                          F@_38,
                                          F@_39,
                                          F@_40,
                                          F@_41,
                                          F@_42,
                                          F@_43,
                                          F@_44,
                                          F@_45,
                                          F@_46,
                                          F@_47,
                                          F@_48,
                                          F@_49,
                                          F@_50,
                                          F@_51,
                                          F@_52,
                                          TrUserData);
d_field_BaseCommand_endTxnOnPartition(<<0:1, X:7,
                                        Rest/binary>>,
                                      N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                      F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                      F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                      F@_18, F@_19, F@_20, F@_21, F@_22, F@_23,
                                      F@_24, F@_25, F@_26, F@_27, F@_28, F@_29,
                                      F@_30, F@_31, F@_32, F@_33, F@_34, F@_35,
                                      F@_36, F@_37, F@_38, F@_39, F@_40, F@_41,
                                      F@_42, F@_43, F@_44, F@_45, F@_46, F@_47,
                                      F@_48, Prev, F@_50, F@_51, F@_52,
                                      TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandEndTxnOnPartition(Bs,
                                                                     TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandEndTxnOnPartition(Prev,
                                                                             NewFValue,
                                                                             TrUserData)
                                   end,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_endTxnOnPartitionResponse(<<1:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, F@_22, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28, F@_29,
                                              F@_30, F@_31, F@_32, F@_33, F@_34,
                                              F@_35, F@_36, F@_37, F@_38, F@_39,
                                              F@_40, F@_41, F@_42, F@_43, F@_44,
                                              F@_45, F@_46, F@_47, F@_48, F@_49,
                                              F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_endTxnOnPartitionResponse(Rest,
                                                  N + 7,
                                                  X bsl N + Acc,
                                                  F@_1,
                                                  F@_2,
                                                  F@_3,
                                                  F@_4,
                                                  F@_5,
                                                  F@_6,
                                                  F@_7,
                                                  F@_8,
                                                  F@_9,
                                                  F@_10,
                                                  F@_11,
                                                  F@_12,
                                                  F@_13,
                                                  F@_14,
                                                  F@_15,
                                                  F@_16,
                                                  F@_17,
                                                  F@_18,
                                                  F@_19,
                                                  F@_20,
                                                  F@_21,
                                                  F@_22,
                                                  F@_23,
                                                  F@_24,
                                                  F@_25,
                                                  F@_26,
                                                  F@_27,
                                                  F@_28,
                                                  F@_29,
                                                  F@_30,
                                                  F@_31,
                                                  F@_32,
                                                  F@_33,
                                                  F@_34,
                                                  F@_35,
                                                  F@_36,
                                                  F@_37,
                                                  F@_38,
                                                  F@_39,
                                                  F@_40,
                                                  F@_41,
                                                  F@_42,
                                                  F@_43,
                                                  F@_44,
                                                  F@_45,
                                                  F@_46,
                                                  F@_47,
                                                  F@_48,
                                                  F@_49,
                                                  F@_50,
                                                  F@_51,
                                                  F@_52,
                                                  TrUserData);
d_field_BaseCommand_endTxnOnPartitionResponse(<<0:1,
                                                X:7, Rest/binary>>,
                                              N, Acc, F@_1, F@_2, F@_3, F@_4,
                                              F@_5, F@_6, F@_7, F@_8, F@_9,
                                              F@_10, F@_11, F@_12, F@_13, F@_14,
                                              F@_15, F@_16, F@_17, F@_18, F@_19,
                                              F@_20, F@_21, F@_22, F@_23, F@_24,
                                              F@_25, F@_26, F@_27, F@_28, F@_29,
                                              F@_30, F@_31, F@_32, F@_33, F@_34,
                                              F@_35, F@_36, F@_37, F@_38, F@_39,
                                              F@_40, F@_41, F@_42, F@_43, F@_44,
                                              F@_45, F@_46, F@_47, F@_48, F@_49,
                                              Prev, F@_51, F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandEndTxnOnPartitionResponse(Bs,
                                                                             TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandEndTxnOnPartitionResponse(Prev,
                                                                                     NewFValue,
                                                                                     TrUserData)
                                   end,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_endTxnOnSubscription(<<1:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, F@_20, F@_21,
                                         F@_22, F@_23, F@_24, F@_25, F@_26,
                                         F@_27, F@_28, F@_29, F@_30, F@_31,
                                         F@_32, F@_33, F@_34, F@_35, F@_36,
                                         F@_37, F@_38, F@_39, F@_40, F@_41,
                                         F@_42, F@_43, F@_44, F@_45, F@_46,
                                         F@_47, F@_48, F@_49, F@_50, F@_51,
                                         F@_52, TrUserData)
    when N < 57 ->
    d_field_BaseCommand_endTxnOnSubscription(Rest,
                                             N + 7,
                                             X bsl N + Acc,
                                             F@_1,
                                             F@_2,
                                             F@_3,
                                             F@_4,
                                             F@_5,
                                             F@_6,
                                             F@_7,
                                             F@_8,
                                             F@_9,
                                             F@_10,
                                             F@_11,
                                             F@_12,
                                             F@_13,
                                             F@_14,
                                             F@_15,
                                             F@_16,
                                             F@_17,
                                             F@_18,
                                             F@_19,
                                             F@_20,
                                             F@_21,
                                             F@_22,
                                             F@_23,
                                             F@_24,
                                             F@_25,
                                             F@_26,
                                             F@_27,
                                             F@_28,
                                             F@_29,
                                             F@_30,
                                             F@_31,
                                             F@_32,
                                             F@_33,
                                             F@_34,
                                             F@_35,
                                             F@_36,
                                             F@_37,
                                             F@_38,
                                             F@_39,
                                             F@_40,
                                             F@_41,
                                             F@_42,
                                             F@_43,
                                             F@_44,
                                             F@_45,
                                             F@_46,
                                             F@_47,
                                             F@_48,
                                             F@_49,
                                             F@_50,
                                             F@_51,
                                             F@_52,
                                             TrUserData);
d_field_BaseCommand_endTxnOnSubscription(<<0:1, X:7,
                                           Rest/binary>>,
                                         N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5,
                                         F@_6, F@_7, F@_8, F@_9, F@_10, F@_11,
                                         F@_12, F@_13, F@_14, F@_15, F@_16,
                                         F@_17, F@_18, F@_19, F@_20, F@_21,
                                         F@_22, F@_23, F@_24, F@_25, F@_26,
                                         F@_27, F@_28, F@_29, F@_30, F@_31,
                                         F@_32, F@_33, F@_34, F@_35, F@_36,
                                         F@_37, F@_38, F@_39, F@_40, F@_41,
                                         F@_42, F@_43, F@_44, F@_45, F@_46,
                                         F@_47, F@_48, F@_49, F@_50, Prev,
                                         F@_52, TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandEndTxnOnSubscription(Bs,
                                                                        TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandEndTxnOnSubscription(Prev,
                                                                                NewFValue,
                                                                                TrUserData)
                                   end,
                                   F@_52,
                                   TrUserData).

d_field_BaseCommand_endTxnOnSubscriptionResponse(<<1:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8, F@_9,
                                                 F@_10, F@_11, F@_12, F@_13,
                                                 F@_14, F@_15, F@_16, F@_17,
                                                 F@_18, F@_19, F@_20, F@_21,
                                                 F@_22, F@_23, F@_24, F@_25,
                                                 F@_26, F@_27, F@_28, F@_29,
                                                 F@_30, F@_31, F@_32, F@_33,
                                                 F@_34, F@_35, F@_36, F@_37,
                                                 F@_38, F@_39, F@_40, F@_41,
                                                 F@_42, F@_43, F@_44, F@_45,
                                                 F@_46, F@_47, F@_48, F@_49,
                                                 F@_50, F@_51, F@_52,
                                                 TrUserData)
    when N < 57 ->
    d_field_BaseCommand_endTxnOnSubscriptionResponse(Rest,
                                                     N + 7,
                                                     X bsl N + Acc,
                                                     F@_1,
                                                     F@_2,
                                                     F@_3,
                                                     F@_4,
                                                     F@_5,
                                                     F@_6,
                                                     F@_7,
                                                     F@_8,
                                                     F@_9,
                                                     F@_10,
                                                     F@_11,
                                                     F@_12,
                                                     F@_13,
                                                     F@_14,
                                                     F@_15,
                                                     F@_16,
                                                     F@_17,
                                                     F@_18,
                                                     F@_19,
                                                     F@_20,
                                                     F@_21,
                                                     F@_22,
                                                     F@_23,
                                                     F@_24,
                                                     F@_25,
                                                     F@_26,
                                                     F@_27,
                                                     F@_28,
                                                     F@_29,
                                                     F@_30,
                                                     F@_31,
                                                     F@_32,
                                                     F@_33,
                                                     F@_34,
                                                     F@_35,
                                                     F@_36,
                                                     F@_37,
                                                     F@_38,
                                                     F@_39,
                                                     F@_40,
                                                     F@_41,
                                                     F@_42,
                                                     F@_43,
                                                     F@_44,
                                                     F@_45,
                                                     F@_46,
                                                     F@_47,
                                                     F@_48,
                                                     F@_49,
                                                     F@_50,
                                                     F@_51,
                                                     F@_52,
                                                     TrUserData);
d_field_BaseCommand_endTxnOnSubscriptionResponse(<<0:1,
                                                   X:7, Rest/binary>>,
                                                 N, Acc, F@_1, F@_2, F@_3, F@_4,
                                                 F@_5, F@_6, F@_7, F@_8, F@_9,
                                                 F@_10, F@_11, F@_12, F@_13,
                                                 F@_14, F@_15, F@_16, F@_17,
                                                 F@_18, F@_19, F@_20, F@_21,
                                                 F@_22, F@_23, F@_24, F@_25,
                                                 F@_26, F@_27, F@_28, F@_29,
                                                 F@_30, F@_31, F@_32, F@_33,
                                                 F@_34, F@_35, F@_36, F@_37,
                                                 F@_38, F@_39, F@_40, F@_41,
                                                 F@_42, F@_43, F@_44, F@_45,
                                                 F@_46, F@_47, F@_48, F@_49,
                                                 F@_50, F@_51, Prev,
                                                 TrUserData) ->
    {NewFValue, RestF} = begin
                             Len = X bsl N + Acc,
                             <<Bs:Len/binary, Rest2/binary>> = Rest,
                             {id(decode_msg_CommandEndTxnOnSubscriptionResponse(Bs,
                                                                                TrUserData),
                                 TrUserData),
                              Rest2}
                         end,
    dfp_read_field_def_BaseCommand(RestF,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   if Prev == '$undef' -> NewFValue;
                                      true ->
                                          merge_msg_CommandEndTxnOnSubscriptionResponse(Prev,
                                                                                        NewFValue,
                                                                                        TrUserData)
                                   end,
                                   TrUserData).

skip_varint_BaseCommand(<<1:1, _:7, Rest/binary>>, Z1,
                        Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                        F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                        F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                        F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                        F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                        F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                        F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    skip_varint_BaseCommand(Rest,
                            Z1,
                            Z2,
                            F@_1,
                            F@_2,
                            F@_3,
                            F@_4,
                            F@_5,
                            F@_6,
                            F@_7,
                            F@_8,
                            F@_9,
                            F@_10,
                            F@_11,
                            F@_12,
                            F@_13,
                            F@_14,
                            F@_15,
                            F@_16,
                            F@_17,
                            F@_18,
                            F@_19,
                            F@_20,
                            F@_21,
                            F@_22,
                            F@_23,
                            F@_24,
                            F@_25,
                            F@_26,
                            F@_27,
                            F@_28,
                            F@_29,
                            F@_30,
                            F@_31,
                            F@_32,
                            F@_33,
                            F@_34,
                            F@_35,
                            F@_36,
                            F@_37,
                            F@_38,
                            F@_39,
                            F@_40,
                            F@_41,
                            F@_42,
                            F@_43,
                            F@_44,
                            F@_45,
                            F@_46,
                            F@_47,
                            F@_48,
                            F@_49,
                            F@_50,
                            F@_51,
                            F@_52,
                            TrUserData);
skip_varint_BaseCommand(<<0:1, _:7, Rest/binary>>, Z1,
                        Z2, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8,
                        F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16,
                        F@_17, F@_18, F@_19, F@_20, F@_21, F@_22, F@_23, F@_24,
                        F@_25, F@_26, F@_27, F@_28, F@_29, F@_30, F@_31, F@_32,
                        F@_33, F@_34, F@_35, F@_36, F@_37, F@_38, F@_39, F@_40,
                        F@_41, F@_42, F@_43, F@_44, F@_45, F@_46, F@_47, F@_48,
                        F@_49, F@_50, F@_51, F@_52, TrUserData) ->
    dfp_read_field_def_BaseCommand(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

skip_length_delimited_BaseCommand(<<1:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                  F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                  F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                  F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                  F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                  F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                  F@_50, F@_51, F@_52, TrUserData)
    when N < 57 ->
    skip_length_delimited_BaseCommand(Rest,
                                      N + 7,
                                      X bsl N + Acc,
                                      F@_1,
                                      F@_2,
                                      F@_3,
                                      F@_4,
                                      F@_5,
                                      F@_6,
                                      F@_7,
                                      F@_8,
                                      F@_9,
                                      F@_10,
                                      F@_11,
                                      F@_12,
                                      F@_13,
                                      F@_14,
                                      F@_15,
                                      F@_16,
                                      F@_17,
                                      F@_18,
                                      F@_19,
                                      F@_20,
                                      F@_21,
                                      F@_22,
                                      F@_23,
                                      F@_24,
                                      F@_25,
                                      F@_26,
                                      F@_27,
                                      F@_28,
                                      F@_29,
                                      F@_30,
                                      F@_31,
                                      F@_32,
                                      F@_33,
                                      F@_34,
                                      F@_35,
                                      F@_36,
                                      F@_37,
                                      F@_38,
                                      F@_39,
                                      F@_40,
                                      F@_41,
                                      F@_42,
                                      F@_43,
                                      F@_44,
                                      F@_45,
                                      F@_46,
                                      F@_47,
                                      F@_48,
                                      F@_49,
                                      F@_50,
                                      F@_51,
                                      F@_52,
                                      TrUserData);
skip_length_delimited_BaseCommand(<<0:1, X:7,
                                    Rest/binary>>,
                                  N, Acc, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6,
                                  F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13,
                                  F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                  F@_20, F@_21, F@_22, F@_23, F@_24, F@_25,
                                  F@_26, F@_27, F@_28, F@_29, F@_30, F@_31,
                                  F@_32, F@_33, F@_34, F@_35, F@_36, F@_37,
                                  F@_38, F@_39, F@_40, F@_41, F@_42, F@_43,
                                  F@_44, F@_45, F@_46, F@_47, F@_48, F@_49,
                                  F@_50, F@_51, F@_52, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_BaseCommand(Rest2,
                                   0,
                                   0,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

skip_group_BaseCommand(Bin, FNum, Z2, F@_1, F@_2, F@_3,
                       F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12,
                       F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, F@_20,
                       F@_21, F@_22, F@_23, F@_24, F@_25, F@_26, F@_27, F@_28,
                       F@_29, F@_30, F@_31, F@_32, F@_33, F@_34, F@_35, F@_36,
                       F@_37, F@_38, F@_39, F@_40, F@_41, F@_42, F@_43, F@_44,
                       F@_45, F@_46, F@_47, F@_48, F@_49, F@_50, F@_51, F@_52,
                       TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    dfp_read_field_def_BaseCommand(Rest,
                                   0,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

skip_32_BaseCommand(<<_:32, Rest/binary>>, Z1, Z2, F@_1,
                    F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                    F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                    F@_19, F@_20, F@_21, F@_22, F@_23, F@_24, F@_25, F@_26,
                    F@_27, F@_28, F@_29, F@_30, F@_31, F@_32, F@_33, F@_34,
                    F@_35, F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                    F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49, F@_50,
                    F@_51, F@_52, TrUserData) ->
    dfp_read_field_def_BaseCommand(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

skip_64_BaseCommand(<<_:64, Rest/binary>>, Z1, Z2, F@_1,
                    F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10,
                    F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                    F@_19, F@_20, F@_21, F@_22, F@_23, F@_24, F@_25, F@_26,
                    F@_27, F@_28, F@_29, F@_30, F@_31, F@_32, F@_33, F@_34,
                    F@_35, F@_36, F@_37, F@_38, F@_39, F@_40, F@_41, F@_42,
                    F@_43, F@_44, F@_45, F@_46, F@_47, F@_48, F@_49, F@_50,
                    F@_51, F@_52, TrUserData) ->
    dfp_read_field_def_BaseCommand(Rest,
                                   Z1,
                                   Z2,
                                   F@_1,
                                   F@_2,
                                   F@_3,
                                   F@_4,
                                   F@_5,
                                   F@_6,
                                   F@_7,
                                   F@_8,
                                   F@_9,
                                   F@_10,
                                   F@_11,
                                   F@_12,
                                   F@_13,
                                   F@_14,
                                   F@_15,
                                   F@_16,
                                   F@_17,
                                   F@_18,
                                   F@_19,
                                   F@_20,
                                   F@_21,
                                   F@_22,
                                   F@_23,
                                   F@_24,
                                   F@_25,
                                   F@_26,
                                   F@_27,
                                   F@_28,
                                   F@_29,
                                   F@_30,
                                   F@_31,
                                   F@_32,
                                   F@_33,
                                   F@_34,
                                   F@_35,
                                   F@_36,
                                   F@_37,
                                   F@_38,
                                   F@_39,
                                   F@_40,
                                   F@_41,
                                   F@_42,
                                   F@_43,
                                   F@_44,
                                   F@_45,
                                   F@_46,
                                   F@_47,
                                   F@_48,
                                   F@_49,
                                   F@_50,
                                   F@_51,
                                   F@_52,
                                   TrUserData).

'd_enum_Schema.Type'(0) -> 'None';
'd_enum_Schema.Type'(1) -> 'String';
'd_enum_Schema.Type'(2) -> 'Json';
'd_enum_Schema.Type'(3) -> 'Protobuf';
'd_enum_Schema.Type'(4) -> 'Avro';
'd_enum_Schema.Type'(5) -> 'Bool';
'd_enum_Schema.Type'(6) -> 'Int8';
'd_enum_Schema.Type'(7) -> 'Int16';
'd_enum_Schema.Type'(8) -> 'Int32';
'd_enum_Schema.Type'(9) -> 'Int64';
'd_enum_Schema.Type'(10) -> 'Float';
'd_enum_Schema.Type'(11) -> 'Double';
'd_enum_Schema.Type'(12) -> 'Date';
'd_enum_Schema.Type'(13) -> 'Time';
'd_enum_Schema.Type'(14) -> 'Timestamp';
'd_enum_Schema.Type'(15) -> 'KeyValue';
'd_enum_Schema.Type'(16) -> 'Instant';
'd_enum_Schema.Type'(17) -> 'LocalDate';
'd_enum_Schema.Type'(18) -> 'LocalTime';
'd_enum_Schema.Type'(19) -> 'LocalDateTime';
'd_enum_Schema.Type'(20) -> 'ProtobufNative';
'd_enum_Schema.Type'(V) -> V.

d_enum_CompressionType(0) -> 'NONE';
d_enum_CompressionType(1) -> 'LZ4';
d_enum_CompressionType(2) -> 'ZLIB';
d_enum_CompressionType(3) -> 'ZSTD';
d_enum_CompressionType(4) -> 'SNAPPY';
d_enum_CompressionType(V) -> V.

d_enum_ServerError(0) -> 'UnknownError';
d_enum_ServerError(1) -> 'MetadataError';
d_enum_ServerError(2) -> 'PersistenceError';
d_enum_ServerError(3) -> 'AuthenticationError';
d_enum_ServerError(4) -> 'AuthorizationError';
d_enum_ServerError(5) -> 'ConsumerBusy';
d_enum_ServerError(6) -> 'ServiceNotReady';
d_enum_ServerError(7) ->
    'ProducerBlockedQuotaExceededError';
d_enum_ServerError(8) ->
    'ProducerBlockedQuotaExceededException';
d_enum_ServerError(9) -> 'ChecksumError';
d_enum_ServerError(10) -> 'UnsupportedVersionError';
d_enum_ServerError(11) -> 'TopicNotFound';
d_enum_ServerError(12) -> 'SubscriptionNotFound';
d_enum_ServerError(13) -> 'ConsumerNotFound';
d_enum_ServerError(14) -> 'TooManyRequests';
d_enum_ServerError(15) -> 'TopicTerminatedError';
d_enum_ServerError(16) -> 'ProducerBusy';
d_enum_ServerError(17) -> 'InvalidTopicName';
d_enum_ServerError(18) -> 'IncompatibleSchema';
d_enum_ServerError(19) -> 'ConsumerAssignError';
d_enum_ServerError(20) ->
    'TransactionCoordinatorNotFound';
d_enum_ServerError(21) -> 'InvalidTxnStatus';
d_enum_ServerError(22) -> 'NotAllowedError';
d_enum_ServerError(23) -> 'TransactionConflict';
d_enum_ServerError(24) -> 'TransactionNotFound';
d_enum_ServerError(V) -> V.

d_enum_AuthMethod(0) -> 'AuthMethodNone';
d_enum_AuthMethod(1) -> 'AuthMethodYcaV1';
d_enum_AuthMethod(2) -> 'AuthMethodAthens';
d_enum_AuthMethod(V) -> V.

d_enum_KeySharedMode(0) -> 'AUTO_SPLIT';
d_enum_KeySharedMode(1) -> 'STICKY';
d_enum_KeySharedMode(V) -> V.

'd_enum_CommandSubscribe.SubType'(0) -> 'Exclusive';
'd_enum_CommandSubscribe.SubType'(1) -> 'Shared';
'd_enum_CommandSubscribe.SubType'(2) -> 'Failover';
'd_enum_CommandSubscribe.SubType'(3) -> 'Key_Shared';
'd_enum_CommandSubscribe.SubType'(V) -> V.

'd_enum_CommandSubscribe.InitialPosition'(0) ->
    'Latest';
'd_enum_CommandSubscribe.InitialPosition'(1) ->
    'Earliest';
'd_enum_CommandSubscribe.InitialPosition'(V) -> V.

'd_enum_CommandPartitionedTopicMetadataResponse.LookupType'(0) ->
    'Success';
'd_enum_CommandPartitionedTopicMetadataResponse.LookupType'(1) ->
    'Failed';
'd_enum_CommandPartitionedTopicMetadataResponse.LookupType'(V) ->
    V.

'd_enum_CommandLookupTopicResponse.LookupType'(0) ->
    'Redirect';
'd_enum_CommandLookupTopicResponse.LookupType'(1) ->
    'Connect';
'd_enum_CommandLookupTopicResponse.LookupType'(2) ->
    'Failed';
'd_enum_CommandLookupTopicResponse.LookupType'(V) -> V.

'd_enum_CommandAck.AckType'(0) -> 'Individual';
'd_enum_CommandAck.AckType'(1) -> 'Cumulative';
'd_enum_CommandAck.AckType'(V) -> V.

'd_enum_CommandAck.ValidationError'(0) ->
    'UncompressedSizeCorruption';
'd_enum_CommandAck.ValidationError'(1) ->
    'DecompressionError';
'd_enum_CommandAck.ValidationError'(2) ->
    'ChecksumMismatch';
'd_enum_CommandAck.ValidationError'(3) ->
    'BatchDeSerializeError';
'd_enum_CommandAck.ValidationError'(4) ->
    'DecryptionError';
'd_enum_CommandAck.ValidationError'(V) -> V.

'd_enum_CommandGetTopicsOfNamespace.Mode'(0) ->
    'PERSISTENT';
'd_enum_CommandGetTopicsOfNamespace.Mode'(1) ->
    'NON_PERSISTENT';
'd_enum_CommandGetTopicsOfNamespace.Mode'(2) -> 'ALL';
'd_enum_CommandGetTopicsOfNamespace.Mode'(V) -> V.

d_enum_TxnAction(0) -> 'COMMIT';
d_enum_TxnAction(1) -> 'ABORT';
d_enum_TxnAction(V) -> V.

'd_enum_BaseCommand.Type'(2) -> 'CONNECT';
'd_enum_BaseCommand.Type'(3) -> 'CONNECTED';
'd_enum_BaseCommand.Type'(4) -> 'SUBSCRIBE';
'd_enum_BaseCommand.Type'(5) -> 'PRODUCER';
'd_enum_BaseCommand.Type'(6) -> 'SEND';
'd_enum_BaseCommand.Type'(7) -> 'SEND_RECEIPT';
'd_enum_BaseCommand.Type'(8) -> 'SEND_ERROR';
'd_enum_BaseCommand.Type'(9) -> 'MESSAGE';
'd_enum_BaseCommand.Type'(10) -> 'ACK';
'd_enum_BaseCommand.Type'(11) -> 'FLOW';
'd_enum_BaseCommand.Type'(12) -> 'UNSUBSCRIBE';
'd_enum_BaseCommand.Type'(13) -> 'SUCCESS';
'd_enum_BaseCommand.Type'(14) -> 'ERROR';
'd_enum_BaseCommand.Type'(15) -> 'CLOSE_PRODUCER';
'd_enum_BaseCommand.Type'(16) -> 'CLOSE_CONSUMER';
'd_enum_BaseCommand.Type'(17) -> 'PRODUCER_SUCCESS';
'd_enum_BaseCommand.Type'(18) -> 'PING';
'd_enum_BaseCommand.Type'(19) -> 'PONG';
'd_enum_BaseCommand.Type'(20) ->
    'REDELIVER_UNACKNOWLEDGED_MESSAGES';
'd_enum_BaseCommand.Type'(21) -> 'PARTITIONED_METADATA';
'd_enum_BaseCommand.Type'(22) ->
    'PARTITIONED_METADATA_RESPONSE';
'd_enum_BaseCommand.Type'(23) -> 'LOOKUP';
'd_enum_BaseCommand.Type'(24) -> 'LOOKUP_RESPONSE';
'd_enum_BaseCommand.Type'(25) -> 'CONSUMER_STATS';
'd_enum_BaseCommand.Type'(26) ->
    'CONSUMER_STATS_RESPONSE';
'd_enum_BaseCommand.Type'(27) -> 'REACHED_END_OF_TOPIC';
'd_enum_BaseCommand.Type'(28) -> 'SEEK';
'd_enum_BaseCommand.Type'(29) -> 'GET_LAST_MESSAGE_ID';
'd_enum_BaseCommand.Type'(30) ->
    'GET_LAST_MESSAGE_ID_RESPONSE';
'd_enum_BaseCommand.Type'(31) ->
    'ACTIVE_CONSUMER_CHANGE';
'd_enum_BaseCommand.Type'(32) ->
    'GET_TOPICS_OF_NAMESPACE';
'd_enum_BaseCommand.Type'(33) ->
    'GET_TOPICS_OF_NAMESPACE_RESPONSE';
'd_enum_BaseCommand.Type'(34) -> 'GET_SCHEMA';
'd_enum_BaseCommand.Type'(35) -> 'GET_SCHEMA_RESPONSE';
'd_enum_BaseCommand.Type'(36) -> 'AUTH_CHALLENGE';
'd_enum_BaseCommand.Type'(37) -> 'AUTH_RESPONSE';
'd_enum_BaseCommand.Type'(38) -> 'ACK_RESPONSE';
'd_enum_BaseCommand.Type'(39) -> 'GET_OR_CREATE_SCHEMA';
'd_enum_BaseCommand.Type'(40) ->
    'GET_OR_CREATE_SCHEMA_RESPONSE';
'd_enum_BaseCommand.Type'(50) -> 'NEW_TXN';
'd_enum_BaseCommand.Type'(51) -> 'NEW_TXN_RESPONSE';
'd_enum_BaseCommand.Type'(52) -> 'ADD_PARTITION_TO_TXN';
'd_enum_BaseCommand.Type'(53) ->
    'ADD_PARTITION_TO_TXN_RESPONSE';
'd_enum_BaseCommand.Type'(54) ->
    'ADD_SUBSCRIPTION_TO_TXN';
'd_enum_BaseCommand.Type'(55) ->
    'ADD_SUBSCRIPTION_TO_TXN_RESPONSE';
'd_enum_BaseCommand.Type'(56) -> 'END_TXN';
'd_enum_BaseCommand.Type'(57) -> 'END_TXN_RESPONSE';
'd_enum_BaseCommand.Type'(58) -> 'END_TXN_ON_PARTITION';
'd_enum_BaseCommand.Type'(59) ->
    'END_TXN_ON_PARTITION_RESPONSE';
'd_enum_BaseCommand.Type'(60) ->
    'END_TXN_ON_SUBSCRIPTION';
'd_enum_BaseCommand.Type'(61) ->
    'END_TXN_ON_SUBSCRIPTION_RESPONSE';
'd_enum_BaseCommand.Type'(V) -> V.

read_group(Bin, FieldNum) ->
    {NumBytes, EndTagLen} = read_gr_b(Bin, 0, 0, 0, 0, FieldNum),
    <<Group:NumBytes/binary, _:EndTagLen/binary, Rest/binary>> = Bin,
    {Group, Rest}.

%% Like skipping over fields, but record the total length,
%% Each field is <(FieldNum bsl 3) bor FieldType> ++ <FieldValue>
%% Record the length because varints may be non-optimally encoded.
%%
%% Groups can be nested, but assume the same FieldNum cannot be nested
%% because group field numbers are shared with the rest of the fields
%% numbers. Thus we can search just for an group-end with the same
%% field number.
%%
%% (The only time the same group field number could occur would
%% be in a nested sub message, but then it would be inside a
%% length-delimited entry, which we skip-read by length.)
read_gr_b(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen, FieldNum)
  when N < (32-7) ->
    read_gr_b(Tl, N+7, X bsl N + Acc, NumBytes, TagLen+1, FieldNum);
read_gr_b(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen,
          FieldNum) ->
    Key = X bsl N + Acc,
    TagLen1 = TagLen + 1,
    case {Key bsr 3, Key band 7} of
        {FieldNum, 4} -> % 4 = group_end
            {NumBytes, TagLen1};
        {_, 0} -> % 0 = varint
            read_gr_vi(Tl, 0, NumBytes + TagLen1, FieldNum);
        {_, 1} -> % 1 = bits64
            <<_:64, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 8, 0, FieldNum);
        {_, 2} -> % 2 = length_delimited
            read_gr_ld(Tl, 0, 0, NumBytes + TagLen1, FieldNum);
        {_, 3} -> % 3 = group_start
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 4} -> % 4 = group_end
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 5} -> % 5 = bits32
            <<_:32, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 4, 0, FieldNum)
    end.

read_gr_vi(<<1:1, _:7, Tl/binary>>, N, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_vi(Tl, N+7, NumBytes+1, FieldNum);
read_gr_vi(<<0:1, _:7, Tl/binary>>, _, NumBytes, FieldNum) ->
    read_gr_b(Tl, 0, 0, NumBytes+1, 0, FieldNum).

read_gr_ld(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_ld(Tl, N+7, X bsl N + Acc, NumBytes+1, FieldNum);
read_gr_ld(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum) ->
    Len = X bsl N + Acc,
    NumBytes1 = NumBytes + 1,
    <<_:Len/binary, Tl2/binary>> = Tl,
    read_gr_b(Tl2, 0, 0, NumBytes1 + Len, 0, FieldNum).

merge_msgs(Prev, New, MsgName) when is_atom(MsgName) ->
    merge_msgs(Prev, New, MsgName, []).

merge_msgs(Prev, New, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'Schema' -> merge_msg_Schema(Prev, New, TrUserData);
        'MessageIdData' ->
            merge_msg_MessageIdData(Prev, New, TrUserData);
        'KeyValue' -> merge_msg_KeyValue(Prev, New, TrUserData);
        'KeyLongValue' ->
            merge_msg_KeyLongValue(Prev, New, TrUserData);
        'IntRange' -> merge_msg_IntRange(Prev, New, TrUserData);
        'EncryptionKeys' ->
            merge_msg_EncryptionKeys(Prev, New, TrUserData);
        'MessageMetadata' ->
            merge_msg_MessageMetadata(Prev, New, TrUserData);
        'SingleMessageMetadata' ->
            merge_msg_SingleMessageMetadata(Prev, New, TrUserData);
        'CommandConnect' ->
            merge_msg_CommandConnect(Prev, New, TrUserData);
        'FeatureFlags' ->
            merge_msg_FeatureFlags(Prev, New, TrUserData);
        'CommandConnected' ->
            merge_msg_CommandConnected(Prev, New, TrUserData);
        'CommandAuthResponse' ->
            merge_msg_CommandAuthResponse(Prev, New, TrUserData);
        'CommandAuthChallenge' ->
            merge_msg_CommandAuthChallenge(Prev, New, TrUserData);
        'AuthData' -> merge_msg_AuthData(Prev, New, TrUserData);
        'KeySharedMeta' ->
            merge_msg_KeySharedMeta(Prev, New, TrUserData);
        'CommandSubscribe' ->
            merge_msg_CommandSubscribe(Prev, New, TrUserData);
        'CommandPartitionedTopicMetadata' ->
            merge_msg_CommandPartitionedTopicMetadata(Prev,
                                                      New,
                                                      TrUserData);
        'CommandPartitionedTopicMetadataResponse' ->
            merge_msg_CommandPartitionedTopicMetadataResponse(Prev,
                                                              New,
                                                              TrUserData);
        'CommandLookupTopic' ->
            merge_msg_CommandLookupTopic(Prev, New, TrUserData);
        'CommandLookupTopicResponse' ->
            merge_msg_CommandLookupTopicResponse(Prev,
                                                 New,
                                                 TrUserData);
        'CommandProducer' ->
            merge_msg_CommandProducer(Prev, New, TrUserData);
        'CommandSend' ->
            merge_msg_CommandSend(Prev, New, TrUserData);
        'CommandSendReceipt' ->
            merge_msg_CommandSendReceipt(Prev, New, TrUserData);
        'CommandSendError' ->
            merge_msg_CommandSendError(Prev, New, TrUserData);
        'CommandMessage' ->
            merge_msg_CommandMessage(Prev, New, TrUserData);
        'CommandAck' ->
            merge_msg_CommandAck(Prev, New, TrUserData);
        'CommandAckResponse' ->
            merge_msg_CommandAckResponse(Prev, New, TrUserData);
        'CommandActiveConsumerChange' ->
            merge_msg_CommandActiveConsumerChange(Prev,
                                                  New,
                                                  TrUserData);
        'CommandFlow' ->
            merge_msg_CommandFlow(Prev, New, TrUserData);
        'CommandUnsubscribe' ->
            merge_msg_CommandUnsubscribe(Prev, New, TrUserData);
        'CommandSeek' ->
            merge_msg_CommandSeek(Prev, New, TrUserData);
        'CommandReachedEndOfTopic' ->
            merge_msg_CommandReachedEndOfTopic(Prev,
                                               New,
                                               TrUserData);
        'CommandCloseProducer' ->
            merge_msg_CommandCloseProducer(Prev, New, TrUserData);
        'CommandCloseConsumer' ->
            merge_msg_CommandCloseConsumer(Prev, New, TrUserData);
        'CommandRedeliverUnacknowledgedMessages' ->
            merge_msg_CommandRedeliverUnacknowledgedMessages(Prev,
                                                             New,
                                                             TrUserData);
        'CommandSuccess' ->
            merge_msg_CommandSuccess(Prev, New, TrUserData);
        'CommandProducerSuccess' ->
            merge_msg_CommandProducerSuccess(Prev, New, TrUserData);
        'CommandError' ->
            merge_msg_CommandError(Prev, New, TrUserData);
        'CommandPing' ->
            merge_msg_CommandPing(Prev, New, TrUserData);
        'CommandPong' ->
            merge_msg_CommandPong(Prev, New, TrUserData);
        'CommandConsumerStats' ->
            merge_msg_CommandConsumerStats(Prev, New, TrUserData);
        'CommandConsumerStatsResponse' ->
            merge_msg_CommandConsumerStatsResponse(Prev,
                                                   New,
                                                   TrUserData);
        'CommandGetLastMessageId' ->
            merge_msg_CommandGetLastMessageId(Prev,
                                              New,
                                              TrUserData);
        'CommandGetLastMessageIdResponse' ->
            merge_msg_CommandGetLastMessageIdResponse(Prev,
                                                      New,
                                                      TrUserData);
        'CommandGetTopicsOfNamespace' ->
            merge_msg_CommandGetTopicsOfNamespace(Prev,
                                                  New,
                                                  TrUserData);
        'CommandGetTopicsOfNamespaceResponse' ->
            merge_msg_CommandGetTopicsOfNamespaceResponse(Prev,
                                                          New,
                                                          TrUserData);
        'CommandGetSchema' ->
            merge_msg_CommandGetSchema(Prev, New, TrUserData);
        'CommandGetSchemaResponse' ->
            merge_msg_CommandGetSchemaResponse(Prev,
                                               New,
                                               TrUserData);
        'CommandGetOrCreateSchema' ->
            merge_msg_CommandGetOrCreateSchema(Prev,
                                               New,
                                               TrUserData);
        'CommandGetOrCreateSchemaResponse' ->
            merge_msg_CommandGetOrCreateSchemaResponse(Prev,
                                                       New,
                                                       TrUserData);
        'CommandNewTxn' ->
            merge_msg_CommandNewTxn(Prev, New, TrUserData);
        'CommandNewTxnResponse' ->
            merge_msg_CommandNewTxnResponse(Prev, New, TrUserData);
        'CommandAddPartitionToTxn' ->
            merge_msg_CommandAddPartitionToTxn(Prev,
                                               New,
                                               TrUserData);
        'CommandAddPartitionToTxnResponse' ->
            merge_msg_CommandAddPartitionToTxnResponse(Prev,
                                                       New,
                                                       TrUserData);
        'Subscription' ->
            merge_msg_Subscription(Prev, New, TrUserData);
        'CommandAddSubscriptionToTxn' ->
            merge_msg_CommandAddSubscriptionToTxn(Prev,
                                                  New,
                                                  TrUserData);
        'CommandAddSubscriptionToTxnResponse' ->
            merge_msg_CommandAddSubscriptionToTxnResponse(Prev,
                                                          New,
                                                          TrUserData);
        'CommandEndTxn' ->
            merge_msg_CommandEndTxn(Prev, New, TrUserData);
        'CommandEndTxnResponse' ->
            merge_msg_CommandEndTxnResponse(Prev, New, TrUserData);
        'CommandEndTxnOnPartition' ->
            merge_msg_CommandEndTxnOnPartition(Prev,
                                               New,
                                               TrUserData);
        'CommandEndTxnOnPartitionResponse' ->
            merge_msg_CommandEndTxnOnPartitionResponse(Prev,
                                                       New,
                                                       TrUserData);
        'CommandEndTxnOnSubscription' ->
            merge_msg_CommandEndTxnOnSubscription(Prev,
                                                  New,
                                                  TrUserData);
        'CommandEndTxnOnSubscriptionResponse' ->
            merge_msg_CommandEndTxnOnSubscriptionResponse(Prev,
                                                          New,
                                                          TrUserData);
        'BaseCommand' ->
            merge_msg_BaseCommand(Prev, New, TrUserData)
    end.

-compile({nowarn_unused_function,merge_msg_Schema/3}).
merge_msg_Schema(#{} = PMsg,
                 #{name := NFname, schema_data := NFschema_data,
                   type := NFtype} =
                     NMsg,
                 TrUserData) ->
    S1 = #{name => NFname, schema_data => NFschema_data,
           type => NFtype},
    case {PMsg, NMsg} of
        {#{properties := PFproperties},
         #{properties := NFproperties}} ->
            S1#{properties =>
                    'erlang_++'(PFproperties, NFproperties, TrUserData)};
        {_, #{properties := NFproperties}} ->
            S1#{properties => NFproperties};
        {#{properties := PFproperties}, _} ->
            S1#{properties => PFproperties};
        {_, _} -> S1
    end.

-compile({nowarn_unused_function,merge_msg_MessageIdData/3}).
merge_msg_MessageIdData(#{} = PMsg,
                        #{ledgerId := NFledgerId, entryId := NFentryId} = NMsg,
                        TrUserData) ->
    S1 = #{ledgerId => NFledgerId, entryId => NFentryId},
    S2 = case {PMsg, NMsg} of
             {_, #{partition := NFpartition}} ->
                 S1#{partition => NFpartition};
             {#{partition := PFpartition}, _} ->
                 S1#{partition => PFpartition};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{batch_index := NFbatch_index}} ->
                 S2#{batch_index => NFbatch_index};
             {#{batch_index := PFbatch_index}, _} ->
                 S2#{batch_index => PFbatch_index};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {#{ack_set := PFack_set}, #{ack_set := NFack_set}} ->
                 S3#{ack_set =>
                         'erlang_++'(PFack_set, NFack_set, TrUserData)};
             {_, #{ack_set := NFack_set}} ->
                 S3#{ack_set => NFack_set};
             {#{ack_set := PFack_set}, _} ->
                 S3#{ack_set => PFack_set};
             {_, _} -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{batch_size := NFbatch_size}} ->
            S4#{batch_size => NFbatch_size};
        {#{batch_size := PFbatch_size}, _} ->
            S4#{batch_size => PFbatch_size};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_KeyValue/3}).
merge_msg_KeyValue(#{},
                   #{key := NFkey, value := NFvalue}, _) ->
    #{key => NFkey, value => NFvalue}.

-compile({nowarn_unused_function,merge_msg_KeyLongValue/3}).
merge_msg_KeyLongValue(#{},
                       #{key := NFkey, value := NFvalue}, _) ->
    #{key => NFkey, value => NFvalue}.

-compile({nowarn_unused_function,merge_msg_IntRange/3}).
merge_msg_IntRange(#{},
                   #{start := NFstart, 'end' := NFend}, _) ->
    #{start => NFstart, 'end' => NFend}.

-compile({nowarn_unused_function,merge_msg_EncryptionKeys/3}).
merge_msg_EncryptionKeys(#{} = PMsg,
                         #{key := NFkey, value := NFvalue} = NMsg,
                         TrUserData) ->
    S1 = #{key => NFkey, value => NFvalue},
    case {PMsg, NMsg} of
        {#{metadata := PFmetadata},
         #{metadata := NFmetadata}} ->
            S1#{metadata =>
                    'erlang_++'(PFmetadata, NFmetadata, TrUserData)};
        {_, #{metadata := NFmetadata}} ->
            S1#{metadata => NFmetadata};
        {#{metadata := PFmetadata}, _} ->
            S1#{metadata => PFmetadata};
        {_, _} -> S1
    end.

-compile({nowarn_unused_function,merge_msg_MessageMetadata/3}).
merge_msg_MessageMetadata(#{} = PMsg,
                          #{producer_name := NFproducer_name,
                            sequence_id := NFsequence_id,
                            publish_time := NFpublish_time} =
                              NMsg,
                          TrUserData) ->
    S1 = #{producer_name => NFproducer_name,
           sequence_id => NFsequence_id,
           publish_time => NFpublish_time},
    S2 = case {PMsg, NMsg} of
             {#{properties := PFproperties},
              #{properties := NFproperties}} ->
                 S1#{properties =>
                         'erlang_++'(PFproperties, NFproperties, TrUserData)};
             {_, #{properties := NFproperties}} ->
                 S1#{properties => NFproperties};
             {#{properties := PFproperties}, _} ->
                 S1#{properties => PFproperties};
             {_, _} -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{replicated_from := NFreplicated_from}} ->
                 S2#{replicated_from => NFreplicated_from};
             {#{replicated_from := PFreplicated_from}, _} ->
                 S2#{replicated_from => PFreplicated_from};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{partition_key := NFpartition_key}} ->
                 S3#{partition_key => NFpartition_key};
             {#{partition_key := PFpartition_key}, _} ->
                 S3#{partition_key => PFpartition_key};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {#{replicate_to := PFreplicate_to},
              #{replicate_to := NFreplicate_to}} ->
                 S4#{replicate_to =>
                         'erlang_++'(PFreplicate_to,
                                     NFreplicate_to,
                                     TrUserData)};
             {_, #{replicate_to := NFreplicate_to}} ->
                 S4#{replicate_to => NFreplicate_to};
             {#{replicate_to := PFreplicate_to}, _} ->
                 S4#{replicate_to => PFreplicate_to};
             {_, _} -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {_, #{compression := NFcompression}} ->
                 S5#{compression => NFcompression};
             {#{compression := PFcompression}, _} ->
                 S5#{compression => PFcompression};
             _ -> S5
         end,
    S7 = case {PMsg, NMsg} of
             {_, #{uncompressed_size := NFuncompressed_size}} ->
                 S6#{uncompressed_size => NFuncompressed_size};
             {#{uncompressed_size := PFuncompressed_size}, _} ->
                 S6#{uncompressed_size => PFuncompressed_size};
             _ -> S6
         end,
    S8 = case {PMsg, NMsg} of
             {_,
              #{num_messages_in_batch := NFnum_messages_in_batch}} ->
                 S7#{num_messages_in_batch => NFnum_messages_in_batch};
             {#{num_messages_in_batch := PFnum_messages_in_batch},
              _} ->
                 S7#{num_messages_in_batch => PFnum_messages_in_batch};
             _ -> S7
         end,
    S9 = case {PMsg, NMsg} of
             {_, #{event_time := NFevent_time}} ->
                 S8#{event_time => NFevent_time};
             {#{event_time := PFevent_time}, _} ->
                 S8#{event_time => PFevent_time};
             _ -> S8
         end,
    S10 = case {PMsg, NMsg} of
              {#{encryption_keys := PFencryption_keys},
               #{encryption_keys := NFencryption_keys}} ->
                  S9#{encryption_keys =>
                          'erlang_++'(PFencryption_keys,
                                      NFencryption_keys,
                                      TrUserData)};
              {_, #{encryption_keys := NFencryption_keys}} ->
                  S9#{encryption_keys => NFencryption_keys};
              {#{encryption_keys := PFencryption_keys}, _} ->
                  S9#{encryption_keys => PFencryption_keys};
              {_, _} -> S9
          end,
    S11 = case {PMsg, NMsg} of
              {_, #{encryption_algo := NFencryption_algo}} ->
                  S10#{encryption_algo => NFencryption_algo};
              {#{encryption_algo := PFencryption_algo}, _} ->
                  S10#{encryption_algo => PFencryption_algo};
              _ -> S10
          end,
    S12 = case {PMsg, NMsg} of
              {_, #{encryption_param := NFencryption_param}} ->
                  S11#{encryption_param => NFencryption_param};
              {#{encryption_param := PFencryption_param}, _} ->
                  S11#{encryption_param => PFencryption_param};
              _ -> S11
          end,
    S13 = case {PMsg, NMsg} of
              {_, #{schema_version := NFschema_version}} ->
                  S12#{schema_version => NFschema_version};
              {#{schema_version := PFschema_version}, _} ->
                  S12#{schema_version => PFschema_version};
              _ -> S12
          end,
    S14 = case {PMsg, NMsg} of
              {_,
               #{partition_key_b64_encoded :=
                     NFpartition_key_b64_encoded}} ->
                  S13#{partition_key_b64_encoded =>
                           NFpartition_key_b64_encoded};
              {#{partition_key_b64_encoded :=
                     PFpartition_key_b64_encoded},
               _} ->
                  S13#{partition_key_b64_encoded =>
                           PFpartition_key_b64_encoded};
              _ -> S13
          end,
    S15 = case {PMsg, NMsg} of
              {_, #{ordering_key := NFordering_key}} ->
                  S14#{ordering_key => NFordering_key};
              {#{ordering_key := PFordering_key}, _} ->
                  S14#{ordering_key => PFordering_key};
              _ -> S14
          end,
    S16 = case {PMsg, NMsg} of
              {_, #{deliver_at_time := NFdeliver_at_time}} ->
                  S15#{deliver_at_time => NFdeliver_at_time};
              {#{deliver_at_time := PFdeliver_at_time}, _} ->
                  S15#{deliver_at_time => PFdeliver_at_time};
              _ -> S15
          end,
    S17 = case {PMsg, NMsg} of
              {_, #{marker_type := NFmarker_type}} ->
                  S16#{marker_type => NFmarker_type};
              {#{marker_type := PFmarker_type}, _} ->
                  S16#{marker_type => PFmarker_type};
              _ -> S16
          end,
    S18 = case {PMsg, NMsg} of
              {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                  S17#{txnid_least_bits => NFtxnid_least_bits};
              {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                  S17#{txnid_least_bits => PFtxnid_least_bits};
              _ -> S17
          end,
    S19 = case {PMsg, NMsg} of
              {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                  S18#{txnid_most_bits => NFtxnid_most_bits};
              {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                  S18#{txnid_most_bits => PFtxnid_most_bits};
              _ -> S18
          end,
    S20 = case {PMsg, NMsg} of
              {_, #{highest_sequence_id := NFhighest_sequence_id}} ->
                  S19#{highest_sequence_id => NFhighest_sequence_id};
              {#{highest_sequence_id := PFhighest_sequence_id}, _} ->
                  S19#{highest_sequence_id => PFhighest_sequence_id};
              _ -> S19
          end,
    S21 = case {PMsg, NMsg} of
              {_, #{null_value := NFnull_value}} ->
                  S20#{null_value => NFnull_value};
              {#{null_value := PFnull_value}, _} ->
                  S20#{null_value => PFnull_value};
              _ -> S20
          end,
    S22 = case {PMsg, NMsg} of
              {_, #{uuid := NFuuid}} -> S21#{uuid => NFuuid};
              {#{uuid := PFuuid}, _} -> S21#{uuid => PFuuid};
              _ -> S21
          end,
    S23 = case {PMsg, NMsg} of
              {_, #{num_chunks_from_msg := NFnum_chunks_from_msg}} ->
                  S22#{num_chunks_from_msg => NFnum_chunks_from_msg};
              {#{num_chunks_from_msg := PFnum_chunks_from_msg}, _} ->
                  S22#{num_chunks_from_msg => PFnum_chunks_from_msg};
              _ -> S22
          end,
    S24 = case {PMsg, NMsg} of
              {_,
               #{total_chunk_msg_size := NFtotal_chunk_msg_size}} ->
                  S23#{total_chunk_msg_size => NFtotal_chunk_msg_size};
              {#{total_chunk_msg_size := PFtotal_chunk_msg_size},
               _} ->
                  S23#{total_chunk_msg_size => PFtotal_chunk_msg_size};
              _ -> S23
          end,
    S25 = case {PMsg, NMsg} of
              {_, #{chunk_id := NFchunk_id}} ->
                  S24#{chunk_id => NFchunk_id};
              {#{chunk_id := PFchunk_id}, _} ->
                  S24#{chunk_id => PFchunk_id};
              _ -> S24
          end,
    case {PMsg, NMsg} of
        {_, #{null_partition_key := NFnull_partition_key}} ->
            S25#{null_partition_key => NFnull_partition_key};
        {#{null_partition_key := PFnull_partition_key}, _} ->
            S25#{null_partition_key => PFnull_partition_key};
        _ -> S25
    end.

-compile({nowarn_unused_function,merge_msg_SingleMessageMetadata/3}).
merge_msg_SingleMessageMetadata(#{} = PMsg,
                                #{payload_size := NFpayload_size} = NMsg,
                                TrUserData) ->
    S1 = #{payload_size => NFpayload_size},
    S2 = case {PMsg, NMsg} of
             {#{properties := PFproperties},
              #{properties := NFproperties}} ->
                 S1#{properties =>
                         'erlang_++'(PFproperties, NFproperties, TrUserData)};
             {_, #{properties := NFproperties}} ->
                 S1#{properties => NFproperties};
             {#{properties := PFproperties}, _} ->
                 S1#{properties => PFproperties};
             {_, _} -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{partition_key := NFpartition_key}} ->
                 S2#{partition_key => NFpartition_key};
             {#{partition_key := PFpartition_key}, _} ->
                 S2#{partition_key => PFpartition_key};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{compacted_out := NFcompacted_out}} ->
                 S3#{compacted_out => NFcompacted_out};
             {#{compacted_out := PFcompacted_out}, _} ->
                 S3#{compacted_out => PFcompacted_out};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_, #{event_time := NFevent_time}} ->
                 S4#{event_time => NFevent_time};
             {#{event_time := PFevent_time}, _} ->
                 S4#{event_time => PFevent_time};
             _ -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {_,
              #{partition_key_b64_encoded :=
                    NFpartition_key_b64_encoded}} ->
                 S5#{partition_key_b64_encoded =>
                         NFpartition_key_b64_encoded};
             {#{partition_key_b64_encoded :=
                    PFpartition_key_b64_encoded},
              _} ->
                 S5#{partition_key_b64_encoded =>
                         PFpartition_key_b64_encoded};
             _ -> S5
         end,
    S7 = case {PMsg, NMsg} of
             {_, #{ordering_key := NFordering_key}} ->
                 S6#{ordering_key => NFordering_key};
             {#{ordering_key := PFordering_key}, _} ->
                 S6#{ordering_key => PFordering_key};
             _ -> S6
         end,
    S8 = case {PMsg, NMsg} of
             {_, #{sequence_id := NFsequence_id}} ->
                 S7#{sequence_id => NFsequence_id};
             {#{sequence_id := PFsequence_id}, _} ->
                 S7#{sequence_id => PFsequence_id};
             _ -> S7
         end,
    S9 = case {PMsg, NMsg} of
             {_, #{null_value := NFnull_value}} ->
                 S8#{null_value => NFnull_value};
             {#{null_value := PFnull_value}, _} ->
                 S8#{null_value => PFnull_value};
             _ -> S8
         end,
    case {PMsg, NMsg} of
        {_, #{null_partition_key := NFnull_partition_key}} ->
            S9#{null_partition_key => NFnull_partition_key};
        {#{null_partition_key := PFnull_partition_key}, _} ->
            S9#{null_partition_key => PFnull_partition_key};
        _ -> S9
    end.

-compile({nowarn_unused_function,merge_msg_CommandConnect/3}).
merge_msg_CommandConnect(#{} = PMsg,
                         #{client_version := NFclient_version} = NMsg,
                         TrUserData) ->
    S1 = #{client_version => NFclient_version},
    S2 = case {PMsg, NMsg} of
             {_, #{auth_method := NFauth_method}} ->
                 S1#{auth_method => NFauth_method};
             {#{auth_method := PFauth_method}, _} ->
                 S1#{auth_method => PFauth_method};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{auth_method_name := NFauth_method_name}} ->
                 S2#{auth_method_name => NFauth_method_name};
             {#{auth_method_name := PFauth_method_name}, _} ->
                 S2#{auth_method_name => PFauth_method_name};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{auth_data := NFauth_data}} ->
                 S3#{auth_data => NFauth_data};
             {#{auth_data := PFauth_data}, _} ->
                 S3#{auth_data => PFauth_data};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_, #{protocol_version := NFprotocol_version}} ->
                 S4#{protocol_version => NFprotocol_version};
             {#{protocol_version := PFprotocol_version}, _} ->
                 S4#{protocol_version => PFprotocol_version};
             _ -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {_, #{proxy_to_broker_url := NFproxy_to_broker_url}} ->
                 S5#{proxy_to_broker_url => NFproxy_to_broker_url};
             {#{proxy_to_broker_url := PFproxy_to_broker_url}, _} ->
                 S5#{proxy_to_broker_url => PFproxy_to_broker_url};
             _ -> S5
         end,
    S7 = case {PMsg, NMsg} of
             {_, #{original_principal := NForiginal_principal}} ->
                 S6#{original_principal => NForiginal_principal};
             {#{original_principal := PForiginal_principal}, _} ->
                 S6#{original_principal => PForiginal_principal};
             _ -> S6
         end,
    S8 = case {PMsg, NMsg} of
             {_, #{original_auth_data := NForiginal_auth_data}} ->
                 S7#{original_auth_data => NForiginal_auth_data};
             {#{original_auth_data := PForiginal_auth_data}, _} ->
                 S7#{original_auth_data => PForiginal_auth_data};
             _ -> S7
         end,
    S9 = case {PMsg, NMsg} of
             {_,
              #{original_auth_method := NForiginal_auth_method}} ->
                 S8#{original_auth_method => NForiginal_auth_method};
             {#{original_auth_method := PForiginal_auth_method},
              _} ->
                 S8#{original_auth_method => PForiginal_auth_method};
             _ -> S8
         end,
    case {PMsg, NMsg} of
        {#{feature_flags := PFfeature_flags},
         #{feature_flags := NFfeature_flags}} ->
            S9#{feature_flags =>
                    merge_msg_FeatureFlags(PFfeature_flags,
                                           NFfeature_flags,
                                           TrUserData)};
        {_, #{feature_flags := NFfeature_flags}} ->
            S9#{feature_flags => NFfeature_flags};
        {#{feature_flags := PFfeature_flags}, _} ->
            S9#{feature_flags => PFfeature_flags};
        {_, _} -> S9
    end.

-compile({nowarn_unused_function,merge_msg_FeatureFlags/3}).
merge_msg_FeatureFlags(PMsg, NMsg, _) ->
    S1 = #{},
    case {PMsg, NMsg} of
        {_,
         #{supports_auth_refresh := NFsupports_auth_refresh}} ->
            S1#{supports_auth_refresh => NFsupports_auth_refresh};
        {#{supports_auth_refresh := PFsupports_auth_refresh},
         _} ->
            S1#{supports_auth_refresh => PFsupports_auth_refresh};
        _ -> S1
    end.

-compile({nowarn_unused_function,merge_msg_CommandConnected/3}).
merge_msg_CommandConnected(#{} = PMsg,
                           #{server_version := NFserver_version} = NMsg, _) ->
    S1 = #{server_version => NFserver_version},
    S2 = case {PMsg, NMsg} of
             {_, #{protocol_version := NFprotocol_version}} ->
                 S1#{protocol_version => NFprotocol_version};
             {#{protocol_version := PFprotocol_version}, _} ->
                 S1#{protocol_version => PFprotocol_version};
             _ -> S1
         end,
    case {PMsg, NMsg} of
        {_, #{max_message_size := NFmax_message_size}} ->
            S2#{max_message_size => NFmax_message_size};
        {#{max_message_size := PFmax_message_size}, _} ->
            S2#{max_message_size => PFmax_message_size};
        _ -> S2
    end.

-compile({nowarn_unused_function,merge_msg_CommandAuthResponse/3}).
merge_msg_CommandAuthResponse(PMsg, NMsg, TrUserData) ->
    S1 = #{},
    S2 = case {PMsg, NMsg} of
             {_, #{client_version := NFclient_version}} ->
                 S1#{client_version => NFclient_version};
             {#{client_version := PFclient_version}, _} ->
                 S1#{client_version => PFclient_version};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {#{response := PFresponse},
              #{response := NFresponse}} ->
                 S2#{response =>
                         merge_msg_AuthData(PFresponse,
                                            NFresponse,
                                            TrUserData)};
             {_, #{response := NFresponse}} ->
                 S2#{response => NFresponse};
             {#{response := PFresponse}, _} ->
                 S2#{response => PFresponse};
             {_, _} -> S2
         end,
    case {PMsg, NMsg} of
        {_, #{protocol_version := NFprotocol_version}} ->
            S3#{protocol_version => NFprotocol_version};
        {#{protocol_version := PFprotocol_version}, _} ->
            S3#{protocol_version => PFprotocol_version};
        _ -> S3
    end.

-compile({nowarn_unused_function,merge_msg_CommandAuthChallenge/3}).
merge_msg_CommandAuthChallenge(PMsg, NMsg,
                               TrUserData) ->
    S1 = #{},
    S2 = case {PMsg, NMsg} of
             {_, #{server_version := NFserver_version}} ->
                 S1#{server_version => NFserver_version};
             {#{server_version := PFserver_version}, _} ->
                 S1#{server_version => PFserver_version};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {#{challenge := PFchallenge},
              #{challenge := NFchallenge}} ->
                 S2#{challenge =>
                         merge_msg_AuthData(PFchallenge,
                                            NFchallenge,
                                            TrUserData)};
             {_, #{challenge := NFchallenge}} ->
                 S2#{challenge => NFchallenge};
             {#{challenge := PFchallenge}, _} ->
                 S2#{challenge => PFchallenge};
             {_, _} -> S2
         end,
    case {PMsg, NMsg} of
        {_, #{protocol_version := NFprotocol_version}} ->
            S3#{protocol_version => NFprotocol_version};
        {#{protocol_version := PFprotocol_version}, _} ->
            S3#{protocol_version => PFprotocol_version};
        _ -> S3
    end.

-compile({nowarn_unused_function,merge_msg_AuthData/3}).
merge_msg_AuthData(PMsg, NMsg, _) ->
    S1 = #{},
    S2 = case {PMsg, NMsg} of
             {_, #{auth_method_name := NFauth_method_name}} ->
                 S1#{auth_method_name => NFauth_method_name};
             {#{auth_method_name := PFauth_method_name}, _} ->
                 S1#{auth_method_name => PFauth_method_name};
             _ -> S1
         end,
    case {PMsg, NMsg} of
        {_, #{auth_data := NFauth_data}} ->
            S2#{auth_data => NFauth_data};
        {#{auth_data := PFauth_data}, _} ->
            S2#{auth_data => PFauth_data};
        _ -> S2
    end.

-compile({nowarn_unused_function,merge_msg_KeySharedMeta/3}).
merge_msg_KeySharedMeta(#{} = PMsg,
                        #{keySharedMode := NFkeySharedMode} = NMsg,
                        TrUserData) ->
    S1 = #{keySharedMode => NFkeySharedMode},
    S2 = case {PMsg, NMsg} of
             {#{hashRanges := PFhashRanges},
              #{hashRanges := NFhashRanges}} ->
                 S1#{hashRanges =>
                         'erlang_++'(PFhashRanges, NFhashRanges, TrUserData)};
             {_, #{hashRanges := NFhashRanges}} ->
                 S1#{hashRanges => NFhashRanges};
             {#{hashRanges := PFhashRanges}, _} ->
                 S1#{hashRanges => PFhashRanges};
             {_, _} -> S1
         end,
    case {PMsg, NMsg} of
        {_,
         #{allowOutOfOrderDelivery :=
               NFallowOutOfOrderDelivery}} ->
            S2#{allowOutOfOrderDelivery =>
                    NFallowOutOfOrderDelivery};
        {#{allowOutOfOrderDelivery :=
               PFallowOutOfOrderDelivery},
         _} ->
            S2#{allowOutOfOrderDelivery =>
                    PFallowOutOfOrderDelivery};
        _ -> S2
    end.

-compile({nowarn_unused_function,merge_msg_CommandSubscribe/3}).
merge_msg_CommandSubscribe(#{} = PMsg,
                           #{topic := NFtopic, subscription := NFsubscription,
                             subType := NFsubType, consumer_id := NFconsumer_id,
                             request_id := NFrequest_id} =
                               NMsg,
                           TrUserData) ->
    S1 = #{topic => NFtopic, subscription => NFsubscription,
           subType => NFsubType, consumer_id => NFconsumer_id,
           request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{consumer_name := NFconsumer_name}} ->
                 S1#{consumer_name => NFconsumer_name};
             {#{consumer_name := PFconsumer_name}, _} ->
                 S1#{consumer_name => PFconsumer_name};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{priority_level := NFpriority_level}} ->
                 S2#{priority_level => NFpriority_level};
             {#{priority_level := PFpriority_level}, _} ->
                 S2#{priority_level => PFpriority_level};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{durable := NFdurable}} ->
                 S3#{durable => NFdurable};
             {#{durable := PFdurable}, _} ->
                 S3#{durable => PFdurable};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {#{start_message_id := PFstart_message_id},
              #{start_message_id := NFstart_message_id}} ->
                 S4#{start_message_id =>
                         merge_msg_MessageIdData(PFstart_message_id,
                                                 NFstart_message_id,
                                                 TrUserData)};
             {_, #{start_message_id := NFstart_message_id}} ->
                 S4#{start_message_id => NFstart_message_id};
             {#{start_message_id := PFstart_message_id}, _} ->
                 S4#{start_message_id => PFstart_message_id};
             {_, _} -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {#{metadata := PFmetadata},
              #{metadata := NFmetadata}} ->
                 S5#{metadata =>
                         'erlang_++'(PFmetadata, NFmetadata, TrUserData)};
             {_, #{metadata := NFmetadata}} ->
                 S5#{metadata => NFmetadata};
             {#{metadata := PFmetadata}, _} ->
                 S5#{metadata => PFmetadata};
             {_, _} -> S5
         end,
    S7 = case {PMsg, NMsg} of
             {_, #{read_compacted := NFread_compacted}} ->
                 S6#{read_compacted => NFread_compacted};
             {#{read_compacted := PFread_compacted}, _} ->
                 S6#{read_compacted => PFread_compacted};
             _ -> S6
         end,
    S8 = case {PMsg, NMsg} of
             {#{schema := PFschema}, #{schema := NFschema}} ->
                 S7#{schema =>
                         merge_msg_Schema(PFschema, NFschema, TrUserData)};
             {_, #{schema := NFschema}} -> S7#{schema => NFschema};
             {#{schema := PFschema}, _} -> S7#{schema => PFschema};
             {_, _} -> S7
         end,
    S9 = case {PMsg, NMsg} of
             {_, #{initialPosition := NFinitialPosition}} ->
                 S8#{initialPosition => NFinitialPosition};
             {#{initialPosition := PFinitialPosition}, _} ->
                 S8#{initialPosition => PFinitialPosition};
             _ -> S8
         end,
    S10 = case {PMsg, NMsg} of
              {_,
               #{replicate_subscription_state :=
                     NFreplicate_subscription_state}} ->
                  S9#{replicate_subscription_state =>
                          NFreplicate_subscription_state};
              {#{replicate_subscription_state :=
                     PFreplicate_subscription_state},
               _} ->
                  S9#{replicate_subscription_state =>
                          PFreplicate_subscription_state};
              _ -> S9
          end,
    S11 = case {PMsg, NMsg} of
              {_,
               #{force_topic_creation := NFforce_topic_creation}} ->
                  S10#{force_topic_creation => NFforce_topic_creation};
              {#{force_topic_creation := PFforce_topic_creation},
               _} ->
                  S10#{force_topic_creation => PFforce_topic_creation};
              _ -> S10
          end,
    S12 = case {PMsg, NMsg} of
              {_,
               #{start_message_rollback_duration_sec :=
                     NFstart_message_rollback_duration_sec}} ->
                  S11#{start_message_rollback_duration_sec =>
                           NFstart_message_rollback_duration_sec};
              {#{start_message_rollback_duration_sec :=
                     PFstart_message_rollback_duration_sec},
               _} ->
                  S11#{start_message_rollback_duration_sec =>
                           PFstart_message_rollback_duration_sec};
              _ -> S11
          end,
    case {PMsg, NMsg} of
        {#{keySharedMeta := PFkeySharedMeta},
         #{keySharedMeta := NFkeySharedMeta}} ->
            S12#{keySharedMeta =>
                     merge_msg_KeySharedMeta(PFkeySharedMeta,
                                             NFkeySharedMeta,
                                             TrUserData)};
        {_, #{keySharedMeta := NFkeySharedMeta}} ->
            S12#{keySharedMeta => NFkeySharedMeta};
        {#{keySharedMeta := PFkeySharedMeta}, _} ->
            S12#{keySharedMeta => PFkeySharedMeta};
        {_, _} -> S12
    end.

-compile({nowarn_unused_function,merge_msg_CommandPartitionedTopicMetadata/3}).
merge_msg_CommandPartitionedTopicMetadata(#{} = PMsg,
                                          #{topic := NFtopic,
                                            request_id := NFrequest_id} =
                                              NMsg,
                                          _) ->
    S1 = #{topic => NFtopic, request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{original_principal := NForiginal_principal}} ->
                 S1#{original_principal => NForiginal_principal};
             {#{original_principal := PForiginal_principal}, _} ->
                 S1#{original_principal => PForiginal_principal};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{original_auth_data := NForiginal_auth_data}} ->
                 S2#{original_auth_data => NForiginal_auth_data};
             {#{original_auth_data := PForiginal_auth_data}, _} ->
                 S2#{original_auth_data => PForiginal_auth_data};
             _ -> S2
         end,
    case {PMsg, NMsg} of
        {_,
         #{original_auth_method := NForiginal_auth_method}} ->
            S3#{original_auth_method => NForiginal_auth_method};
        {#{original_auth_method := PForiginal_auth_method},
         _} ->
            S3#{original_auth_method => PForiginal_auth_method};
        _ -> S3
    end.

-compile({nowarn_unused_function,merge_msg_CommandPartitionedTopicMetadataResponse/3}).
merge_msg_CommandPartitionedTopicMetadataResponse(#{} =
                                                      PMsg,
                                                  #{request_id :=
                                                        NFrequest_id} =
                                                      NMsg,
                                                  _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{partitions := NFpartitions}} ->
                 S1#{partitions => NFpartitions};
             {#{partitions := PFpartitions}, _} ->
                 S1#{partitions => PFpartitions};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{response := NFresponse}} ->
                 S2#{response => NFresponse};
             {#{response := PFresponse}, _} ->
                 S2#{response => PFresponse};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S3#{error => NFerror};
             {#{error := PFerror}, _} -> S3#{error => PFerror};
             _ -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{message := NFmessage}} ->
            S4#{message => NFmessage};
        {#{message := PFmessage}, _} ->
            S4#{message => PFmessage};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_CommandLookupTopic/3}).
merge_msg_CommandLookupTopic(#{} = PMsg,
                             #{topic := NFtopic, request_id := NFrequest_id} =
                                 NMsg,
                             _) ->
    S1 = #{topic => NFtopic, request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{authoritative := NFauthoritative}} ->
                 S1#{authoritative => NFauthoritative};
             {#{authoritative := PFauthoritative}, _} ->
                 S1#{authoritative => PFauthoritative};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{original_principal := NForiginal_principal}} ->
                 S2#{original_principal => NForiginal_principal};
             {#{original_principal := PForiginal_principal}, _} ->
                 S2#{original_principal => PForiginal_principal};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{original_auth_data := NForiginal_auth_data}} ->
                 S3#{original_auth_data => NForiginal_auth_data};
             {#{original_auth_data := PForiginal_auth_data}, _} ->
                 S3#{original_auth_data => PForiginal_auth_data};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_,
              #{original_auth_method := NForiginal_auth_method}} ->
                 S4#{original_auth_method => NForiginal_auth_method};
             {#{original_auth_method := PForiginal_auth_method},
              _} ->
                 S4#{original_auth_method => PForiginal_auth_method};
             _ -> S4
         end,
    case {PMsg, NMsg} of
        {_,
         #{advertised_listener_name :=
               NFadvertised_listener_name}} ->
            S5#{advertised_listener_name =>
                    NFadvertised_listener_name};
        {#{advertised_listener_name :=
               PFadvertised_listener_name},
         _} ->
            S5#{advertised_listener_name =>
                    PFadvertised_listener_name};
        _ -> S5
    end.

-compile({nowarn_unused_function,merge_msg_CommandLookupTopicResponse/3}).
merge_msg_CommandLookupTopicResponse(#{} = PMsg,
                                     #{request_id := NFrequest_id} = NMsg, _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{brokerServiceUrl := NFbrokerServiceUrl}} ->
                 S1#{brokerServiceUrl => NFbrokerServiceUrl};
             {#{brokerServiceUrl := PFbrokerServiceUrl}, _} ->
                 S1#{brokerServiceUrl => PFbrokerServiceUrl};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{brokerServiceUrlTls := NFbrokerServiceUrlTls}} ->
                 S2#{brokerServiceUrlTls => NFbrokerServiceUrlTls};
             {#{brokerServiceUrlTls := PFbrokerServiceUrlTls}, _} ->
                 S2#{brokerServiceUrlTls => PFbrokerServiceUrlTls};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{response := NFresponse}} ->
                 S3#{response => NFresponse};
             {#{response := PFresponse}, _} ->
                 S3#{response => PFresponse};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_, #{authoritative := NFauthoritative}} ->
                 S4#{authoritative => NFauthoritative};
             {#{authoritative := PFauthoritative}, _} ->
                 S4#{authoritative => PFauthoritative};
             _ -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S5#{error => NFerror};
             {#{error := PFerror}, _} -> S5#{error => PFerror};
             _ -> S5
         end,
    S7 = case {PMsg, NMsg} of
             {_, #{message := NFmessage}} ->
                 S6#{message => NFmessage};
             {#{message := PFmessage}, _} ->
                 S6#{message => PFmessage};
             _ -> S6
         end,
    case {PMsg, NMsg} of
        {_,
         #{proxy_through_service_url :=
               NFproxy_through_service_url}} ->
            S7#{proxy_through_service_url =>
                    NFproxy_through_service_url};
        {#{proxy_through_service_url :=
               PFproxy_through_service_url},
         _} ->
            S7#{proxy_through_service_url =>
                    PFproxy_through_service_url};
        _ -> S7
    end.

-compile({nowarn_unused_function,merge_msg_CommandProducer/3}).
merge_msg_CommandProducer(#{} = PMsg,
                          #{topic := NFtopic, producer_id := NFproducer_id,
                            request_id := NFrequest_id} =
                              NMsg,
                          TrUserData) ->
    S1 = #{topic => NFtopic, producer_id => NFproducer_id,
           request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{producer_name := NFproducer_name}} ->
                 S1#{producer_name => NFproducer_name};
             {#{producer_name := PFproducer_name}, _} ->
                 S1#{producer_name => PFproducer_name};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{encrypted := NFencrypted}} ->
                 S2#{encrypted => NFencrypted};
             {#{encrypted := PFencrypted}, _} ->
                 S2#{encrypted => PFencrypted};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {#{metadata := PFmetadata},
              #{metadata := NFmetadata}} ->
                 S3#{metadata =>
                         'erlang_++'(PFmetadata, NFmetadata, TrUserData)};
             {_, #{metadata := NFmetadata}} ->
                 S3#{metadata => NFmetadata};
             {#{metadata := PFmetadata}, _} ->
                 S3#{metadata => PFmetadata};
             {_, _} -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {#{schema := PFschema}, #{schema := NFschema}} ->
                 S4#{schema =>
                         merge_msg_Schema(PFschema, NFschema, TrUserData)};
             {_, #{schema := NFschema}} -> S4#{schema => NFschema};
             {#{schema := PFschema}, _} -> S4#{schema => PFschema};
             {_, _} -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {_, #{epoch := NFepoch}} -> S5#{epoch => NFepoch};
             {#{epoch := PFepoch}, _} -> S5#{epoch => PFepoch};
             _ -> S5
         end,
    case {PMsg, NMsg} of
        {_,
         #{user_provided_producer_name :=
               NFuser_provided_producer_name}} ->
            S6#{user_provided_producer_name =>
                    NFuser_provided_producer_name};
        {#{user_provided_producer_name :=
               PFuser_provided_producer_name},
         _} ->
            S6#{user_provided_producer_name =>
                    PFuser_provided_producer_name};
        _ -> S6
    end.

-compile({nowarn_unused_function,merge_msg_CommandSend/3}).
merge_msg_CommandSend(#{} = PMsg,
                      #{producer_id := NFproducer_id,
                        sequence_id := NFsequence_id} =
                          NMsg,
                      _) ->
    S1 = #{producer_id => NFproducer_id,
           sequence_id => NFsequence_id},
    S2 = case {PMsg, NMsg} of
             {_, #{num_messages := NFnum_messages}} ->
                 S1#{num_messages => NFnum_messages};
             {#{num_messages := PFnum_messages}, _} ->
                 S1#{num_messages => PFnum_messages};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S2#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S2#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S3#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S3#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_, #{highest_sequence_id := NFhighest_sequence_id}} ->
                 S4#{highest_sequence_id => NFhighest_sequence_id};
             {#{highest_sequence_id := PFhighest_sequence_id}, _} ->
                 S4#{highest_sequence_id => PFhighest_sequence_id};
             _ -> S4
         end,
    case {PMsg, NMsg} of
        {_, #{is_chunk := NFis_chunk}} ->
            S5#{is_chunk => NFis_chunk};
        {#{is_chunk := PFis_chunk}, _} ->
            S5#{is_chunk => PFis_chunk};
        _ -> S5
    end.

-compile({nowarn_unused_function,merge_msg_CommandSendReceipt/3}).
merge_msg_CommandSendReceipt(#{} = PMsg,
                             #{producer_id := NFproducer_id,
                               sequence_id := NFsequence_id} =
                                 NMsg,
                             TrUserData) ->
    S1 = #{producer_id => NFproducer_id,
           sequence_id => NFsequence_id},
    S2 = case {PMsg, NMsg} of
             {#{message_id := PFmessage_id},
              #{message_id := NFmessage_id}} ->
                 S1#{message_id =>
                         merge_msg_MessageIdData(PFmessage_id,
                                                 NFmessage_id,
                                                 TrUserData)};
             {_, #{message_id := NFmessage_id}} ->
                 S1#{message_id => NFmessage_id};
             {#{message_id := PFmessage_id}, _} ->
                 S1#{message_id => PFmessage_id};
             {_, _} -> S1
         end,
    case {PMsg, NMsg} of
        {_, #{highest_sequence_id := NFhighest_sequence_id}} ->
            S2#{highest_sequence_id => NFhighest_sequence_id};
        {#{highest_sequence_id := PFhighest_sequence_id}, _} ->
            S2#{highest_sequence_id => PFhighest_sequence_id};
        _ -> S2
    end.

-compile({nowarn_unused_function,merge_msg_CommandSendError/3}).
merge_msg_CommandSendError(#{},
                           #{producer_id := NFproducer_id,
                             sequence_id := NFsequence_id, error := NFerror,
                             message := NFmessage},
                           _) ->
    #{producer_id => NFproducer_id,
      sequence_id => NFsequence_id, error => NFerror,
      message => NFmessage}.

-compile({nowarn_unused_function,merge_msg_CommandMessage/3}).
merge_msg_CommandMessage(#{message_id := PFmessage_id} =
                             PMsg,
                         #{consumer_id := NFconsumer_id,
                           message_id := NFmessage_id} =
                             NMsg,
                         TrUserData) ->
    S1 = #{consumer_id => NFconsumer_id,
           message_id =>
               merge_msg_MessageIdData(PFmessage_id,
                                       NFmessage_id,
                                       TrUserData)},
    S2 = case {PMsg, NMsg} of
             {_, #{redelivery_count := NFredelivery_count}} ->
                 S1#{redelivery_count => NFredelivery_count};
             {#{redelivery_count := PFredelivery_count}, _} ->
                 S1#{redelivery_count => PFredelivery_count};
             _ -> S1
         end,
    case {PMsg, NMsg} of
        {#{ack_set := PFack_set}, #{ack_set := NFack_set}} ->
            S2#{ack_set =>
                    'erlang_++'(PFack_set, NFack_set, TrUserData)};
        {_, #{ack_set := NFack_set}} ->
            S2#{ack_set => NFack_set};
        {#{ack_set := PFack_set}, _} ->
            S2#{ack_set => PFack_set};
        {_, _} -> S2
    end.

-compile({nowarn_unused_function,merge_msg_CommandAck/3}).
merge_msg_CommandAck(#{} = PMsg,
                     #{consumer_id := NFconsumer_id,
                       ack_type := NFack_type} =
                         NMsg,
                     TrUserData) ->
    S1 = #{consumer_id => NFconsumer_id,
           ack_type => NFack_type},
    S2 = case {PMsg, NMsg} of
             {#{message_id := PFmessage_id},
              #{message_id := NFmessage_id}} ->
                 S1#{message_id =>
                         'erlang_++'(PFmessage_id, NFmessage_id, TrUserData)};
             {_, #{message_id := NFmessage_id}} ->
                 S1#{message_id => NFmessage_id};
             {#{message_id := PFmessage_id}, _} ->
                 S1#{message_id => PFmessage_id};
             {_, _} -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{validation_error := NFvalidation_error}} ->
                 S2#{validation_error => NFvalidation_error};
             {#{validation_error := PFvalidation_error}, _} ->
                 S2#{validation_error => PFvalidation_error};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {#{properties := PFproperties},
              #{properties := NFproperties}} ->
                 S3#{properties =>
                         'erlang_++'(PFproperties, NFproperties, TrUserData)};
             {_, #{properties := NFproperties}} ->
                 S3#{properties => NFproperties};
             {#{properties := PFproperties}, _} ->
                 S3#{properties => PFproperties};
             {_, _} -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S4#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S4#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S5#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S5#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S5
         end,
    case {PMsg, NMsg} of
        {_, #{request_id := NFrequest_id}} ->
            S6#{request_id => NFrequest_id};
        {#{request_id := PFrequest_id}, _} ->
            S6#{request_id => PFrequest_id};
        _ -> S6
    end.

-compile({nowarn_unused_function,merge_msg_CommandAckResponse/3}).
merge_msg_CommandAckResponse(#{} = PMsg,
                             #{consumer_id := NFconsumer_id} = NMsg, _) ->
    S1 = #{consumer_id => NFconsumer_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S3#{error => NFerror};
             {#{error := PFerror}, _} -> S3#{error => PFerror};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_, #{message := NFmessage}} ->
                 S4#{message => NFmessage};
             {#{message := PFmessage}, _} ->
                 S4#{message => PFmessage};
             _ -> S4
         end,
    case {PMsg, NMsg} of
        {_, #{request_id := NFrequest_id}} ->
            S5#{request_id => NFrequest_id};
        {#{request_id := PFrequest_id}, _} ->
            S5#{request_id => PFrequest_id};
        _ -> S5
    end.

-compile({nowarn_unused_function,merge_msg_CommandActiveConsumerChange/3}).
merge_msg_CommandActiveConsumerChange(#{} = PMsg,
                                      #{consumer_id := NFconsumer_id} = NMsg,
                                      _) ->
    S1 = #{consumer_id => NFconsumer_id},
    case {PMsg, NMsg} of
        {_, #{is_active := NFis_active}} ->
            S1#{is_active => NFis_active};
        {#{is_active := PFis_active}, _} ->
            S1#{is_active => PFis_active};
        _ -> S1
    end.

-compile({nowarn_unused_function,merge_msg_CommandFlow/3}).
merge_msg_CommandFlow(#{},
                      #{consumer_id := NFconsumer_id,
                        messagePermits := NFmessagePermits},
                      _) ->
    #{consumer_id => NFconsumer_id,
      messagePermits => NFmessagePermits}.

-compile({nowarn_unused_function,merge_msg_CommandUnsubscribe/3}).
merge_msg_CommandUnsubscribe(#{},
                             #{consumer_id := NFconsumer_id,
                               request_id := NFrequest_id},
                             _) ->
    #{consumer_id => NFconsumer_id,
      request_id => NFrequest_id}.

-compile({nowarn_unused_function,merge_msg_CommandSeek/3}).
merge_msg_CommandSeek(#{} = PMsg,
                      #{consumer_id := NFconsumer_id,
                        request_id := NFrequest_id} =
                          NMsg,
                      TrUserData) ->
    S1 = #{consumer_id => NFconsumer_id,
           request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {#{message_id := PFmessage_id},
              #{message_id := NFmessage_id}} ->
                 S1#{message_id =>
                         merge_msg_MessageIdData(PFmessage_id,
                                                 NFmessage_id,
                                                 TrUserData)};
             {_, #{message_id := NFmessage_id}} ->
                 S1#{message_id => NFmessage_id};
             {#{message_id := PFmessage_id}, _} ->
                 S1#{message_id => PFmessage_id};
             {_, _} -> S1
         end,
    case {PMsg, NMsg} of
        {_,
         #{message_publish_time := NFmessage_publish_time}} ->
            S2#{message_publish_time => NFmessage_publish_time};
        {#{message_publish_time := PFmessage_publish_time},
         _} ->
            S2#{message_publish_time => PFmessage_publish_time};
        _ -> S2
    end.

-compile({nowarn_unused_function,merge_msg_CommandReachedEndOfTopic/3}).
merge_msg_CommandReachedEndOfTopic(#{},
                                   #{consumer_id := NFconsumer_id}, _) ->
    #{consumer_id => NFconsumer_id}.

-compile({nowarn_unused_function,merge_msg_CommandCloseProducer/3}).
merge_msg_CommandCloseProducer(#{},
                               #{producer_id := NFproducer_id,
                                 request_id := NFrequest_id},
                               _) ->
    #{producer_id => NFproducer_id,
      request_id => NFrequest_id}.

-compile({nowarn_unused_function,merge_msg_CommandCloseConsumer/3}).
merge_msg_CommandCloseConsumer(#{},
                               #{consumer_id := NFconsumer_id,
                                 request_id := NFrequest_id},
                               _) ->
    #{consumer_id => NFconsumer_id,
      request_id => NFrequest_id}.

-compile({nowarn_unused_function,merge_msg_CommandRedeliverUnacknowledgedMessages/3}).
merge_msg_CommandRedeliverUnacknowledgedMessages(#{} =
                                                     PMsg,
                                                 #{consumer_id :=
                                                       NFconsumer_id} =
                                                     NMsg,
                                                 TrUserData) ->
    S1 = #{consumer_id => NFconsumer_id},
    case {PMsg, NMsg} of
        {#{message_ids := PFmessage_ids},
         #{message_ids := NFmessage_ids}} ->
            S1#{message_ids =>
                    'erlang_++'(PFmessage_ids, NFmessage_ids, TrUserData)};
        {_, #{message_ids := NFmessage_ids}} ->
            S1#{message_ids => NFmessage_ids};
        {#{message_ids := PFmessage_ids}, _} ->
            S1#{message_ids => PFmessage_ids};
        {_, _} -> S1
    end.

-compile({nowarn_unused_function,merge_msg_CommandSuccess/3}).
merge_msg_CommandSuccess(#{} = PMsg,
                         #{request_id := NFrequest_id} = NMsg, TrUserData) ->
    S1 = #{request_id => NFrequest_id},
    case {PMsg, NMsg} of
        {#{schema := PFschema}, #{schema := NFschema}} ->
            S1#{schema =>
                    merge_msg_Schema(PFschema, NFschema, TrUserData)};
        {_, #{schema := NFschema}} -> S1#{schema => NFschema};
        {#{schema := PFschema}, _} -> S1#{schema => PFschema};
        {_, _} -> S1
    end.

-compile({nowarn_unused_function,merge_msg_CommandProducerSuccess/3}).
merge_msg_CommandProducerSuccess(#{} = PMsg,
                                 #{request_id := NFrequest_id,
                                   producer_name := NFproducer_name} =
                                     NMsg,
                                 _) ->
    S1 = #{request_id => NFrequest_id,
           producer_name => NFproducer_name},
    S2 = case {PMsg, NMsg} of
             {_, #{last_sequence_id := NFlast_sequence_id}} ->
                 S1#{last_sequence_id => NFlast_sequence_id};
             {#{last_sequence_id := PFlast_sequence_id}, _} ->
                 S1#{last_sequence_id => PFlast_sequence_id};
             _ -> S1
         end,
    case {PMsg, NMsg} of
        {_, #{schema_version := NFschema_version}} ->
            S2#{schema_version => NFschema_version};
        {#{schema_version := PFschema_version}, _} ->
            S2#{schema_version => PFschema_version};
        _ -> S2
    end.

-compile({nowarn_unused_function,merge_msg_CommandError/3}).
merge_msg_CommandError(#{},
                       #{request_id := NFrequest_id, error := NFerror,
                         message := NFmessage},
                       _) ->
    #{request_id => NFrequest_id, error => NFerror,
      message => NFmessage}.

-compile({nowarn_unused_function,merge_msg_CommandPing/3}).
merge_msg_CommandPing(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,merge_msg_CommandPong/3}).
merge_msg_CommandPong(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,merge_msg_CommandConsumerStats/3}).
merge_msg_CommandConsumerStats(#{},
                               #{request_id := NFrequest_id,
                                 consumer_id := NFconsumer_id},
                               _) ->
    #{request_id => NFrequest_id,
      consumer_id => NFconsumer_id}.

-compile({nowarn_unused_function,merge_msg_CommandConsumerStatsResponse/3}).
merge_msg_CommandConsumerStatsResponse(#{} = PMsg,
                                       #{request_id := NFrequest_id} = NMsg,
                                       _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{error_code := NFerror_code}} ->
                 S1#{error_code => NFerror_code};
             {#{error_code := PFerror_code}, _} ->
                 S1#{error_code => PFerror_code};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{error_message := NFerror_message}} ->
                 S2#{error_message => NFerror_message};
             {#{error_message := PFerror_message}, _} ->
                 S2#{error_message => PFerror_message};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{msgRateOut := NFmsgRateOut}} ->
                 S3#{msgRateOut => NFmsgRateOut};
             {#{msgRateOut := PFmsgRateOut}, _} ->
                 S3#{msgRateOut => PFmsgRateOut};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_, #{msgThroughputOut := NFmsgThroughputOut}} ->
                 S4#{msgThroughputOut => NFmsgThroughputOut};
             {#{msgThroughputOut := PFmsgThroughputOut}, _} ->
                 S4#{msgThroughputOut => PFmsgThroughputOut};
             _ -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {_, #{msgRateRedeliver := NFmsgRateRedeliver}} ->
                 S5#{msgRateRedeliver => NFmsgRateRedeliver};
             {#{msgRateRedeliver := PFmsgRateRedeliver}, _} ->
                 S5#{msgRateRedeliver => PFmsgRateRedeliver};
             _ -> S5
         end,
    S7 = case {PMsg, NMsg} of
             {_, #{consumerName := NFconsumerName}} ->
                 S6#{consumerName => NFconsumerName};
             {#{consumerName := PFconsumerName}, _} ->
                 S6#{consumerName => PFconsumerName};
             _ -> S6
         end,
    S8 = case {PMsg, NMsg} of
             {_, #{availablePermits := NFavailablePermits}} ->
                 S7#{availablePermits => NFavailablePermits};
             {#{availablePermits := PFavailablePermits}, _} ->
                 S7#{availablePermits => PFavailablePermits};
             _ -> S7
         end,
    S9 = case {PMsg, NMsg} of
             {_, #{unackedMessages := NFunackedMessages}} ->
                 S8#{unackedMessages => NFunackedMessages};
             {#{unackedMessages := PFunackedMessages}, _} ->
                 S8#{unackedMessages => PFunackedMessages};
             _ -> S8
         end,
    S10 = case {PMsg, NMsg} of
              {_,
               #{blockedConsumerOnUnackedMsgs :=
                     NFblockedConsumerOnUnackedMsgs}} ->
                  S9#{blockedConsumerOnUnackedMsgs =>
                          NFblockedConsumerOnUnackedMsgs};
              {#{blockedConsumerOnUnackedMsgs :=
                     PFblockedConsumerOnUnackedMsgs},
               _} ->
                  S9#{blockedConsumerOnUnackedMsgs =>
                          PFblockedConsumerOnUnackedMsgs};
              _ -> S9
          end,
    S11 = case {PMsg, NMsg} of
              {_, #{address := NFaddress}} ->
                  S10#{address => NFaddress};
              {#{address := PFaddress}, _} ->
                  S10#{address => PFaddress};
              _ -> S10
          end,
    S12 = case {PMsg, NMsg} of
              {_, #{connectedSince := NFconnectedSince}} ->
                  S11#{connectedSince => NFconnectedSince};
              {#{connectedSince := PFconnectedSince}, _} ->
                  S11#{connectedSince => PFconnectedSince};
              _ -> S11
          end,
    S13 = case {PMsg, NMsg} of
              {_, #{type := NFtype}} -> S12#{type => NFtype};
              {#{type := PFtype}, _} -> S12#{type => PFtype};
              _ -> S12
          end,
    S14 = case {PMsg, NMsg} of
              {_, #{msgRateExpired := NFmsgRateExpired}} ->
                  S13#{msgRateExpired => NFmsgRateExpired};
              {#{msgRateExpired := PFmsgRateExpired}, _} ->
                  S13#{msgRateExpired => PFmsgRateExpired};
              _ -> S13
          end,
    case {PMsg, NMsg} of
        {_, #{msgBacklog := NFmsgBacklog}} ->
            S14#{msgBacklog => NFmsgBacklog};
        {#{msgBacklog := PFmsgBacklog}, _} ->
            S14#{msgBacklog => PFmsgBacklog};
        _ -> S14
    end.

-compile({nowarn_unused_function,merge_msg_CommandGetLastMessageId/3}).
merge_msg_CommandGetLastMessageId(#{},
                                  #{consumer_id := NFconsumer_id,
                                    request_id := NFrequest_id},
                                  _) ->
    #{consumer_id => NFconsumer_id,
      request_id => NFrequest_id}.

-compile({nowarn_unused_function,merge_msg_CommandGetLastMessageIdResponse/3}).
merge_msg_CommandGetLastMessageIdResponse(#{last_message_id
                                                := PFlast_message_id} =
                                              PMsg,
                                          #{last_message_id :=
                                                NFlast_message_id,
                                            request_id := NFrequest_id} =
                                              NMsg,
                                          TrUserData) ->
    S1 = #{last_message_id =>
               merge_msg_MessageIdData(PFlast_message_id,
                                       NFlast_message_id,
                                       TrUserData),
           request_id => NFrequest_id},
    case {PMsg, NMsg} of
        {#{consumer_mark_delete_position :=
               PFconsumer_mark_delete_position},
         #{consumer_mark_delete_position :=
               NFconsumer_mark_delete_position}} ->
            S1#{consumer_mark_delete_position =>
                    merge_msg_MessageIdData(PFconsumer_mark_delete_position,
                                            NFconsumer_mark_delete_position,
                                            TrUserData)};
        {_,
         #{consumer_mark_delete_position :=
               NFconsumer_mark_delete_position}} ->
            S1#{consumer_mark_delete_position =>
                    NFconsumer_mark_delete_position};
        {#{consumer_mark_delete_position :=
               PFconsumer_mark_delete_position},
         _} ->
            S1#{consumer_mark_delete_position =>
                    PFconsumer_mark_delete_position};
        {_, _} -> S1
    end.

-compile({nowarn_unused_function,merge_msg_CommandGetTopicsOfNamespace/3}).
merge_msg_CommandGetTopicsOfNamespace(#{} = PMsg,
                                      #{request_id := NFrequest_id,
                                        namespace := NFnamespace} =
                                          NMsg,
                                      _) ->
    S1 = #{request_id => NFrequest_id,
           namespace => NFnamespace},
    case {PMsg, NMsg} of
        {_, #{mode := NFmode}} -> S1#{mode => NFmode};
        {#{mode := PFmode}, _} -> S1#{mode => PFmode};
        _ -> S1
    end.

-compile({nowarn_unused_function,merge_msg_CommandGetTopicsOfNamespaceResponse/3}).
merge_msg_CommandGetTopicsOfNamespaceResponse(#{} =
                                                  PMsg,
                                              #{request_id := NFrequest_id} =
                                                  NMsg,
                                              TrUserData) ->
    S1 = #{request_id => NFrequest_id},
    case {PMsg, NMsg} of
        {#{topics := PFtopics}, #{topics := NFtopics}} ->
            S1#{topics =>
                    'erlang_++'(PFtopics, NFtopics, TrUserData)};
        {_, #{topics := NFtopics}} -> S1#{topics => NFtopics};
        {#{topics := PFtopics}, _} -> S1#{topics => PFtopics};
        {_, _} -> S1
    end.

-compile({nowarn_unused_function,merge_msg_CommandGetSchema/3}).
merge_msg_CommandGetSchema(#{} = PMsg,
                           #{request_id := NFrequest_id, topic := NFtopic} =
                               NMsg,
                           _) ->
    S1 = #{request_id => NFrequest_id, topic => NFtopic},
    case {PMsg, NMsg} of
        {_, #{schema_version := NFschema_version}} ->
            S1#{schema_version => NFschema_version};
        {#{schema_version := PFschema_version}, _} ->
            S1#{schema_version => PFschema_version};
        _ -> S1
    end.

-compile({nowarn_unused_function,merge_msg_CommandGetSchemaResponse/3}).
merge_msg_CommandGetSchemaResponse(#{} = PMsg,
                                   #{request_id := NFrequest_id} = NMsg,
                                   TrUserData) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{error_code := NFerror_code}} ->
                 S1#{error_code => NFerror_code};
             {#{error_code := PFerror_code}, _} ->
                 S1#{error_code => PFerror_code};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{error_message := NFerror_message}} ->
                 S2#{error_message => NFerror_message};
             {#{error_message := PFerror_message}, _} ->
                 S2#{error_message => PFerror_message};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {#{schema := PFschema}, #{schema := NFschema}} ->
                 S3#{schema =>
                         merge_msg_Schema(PFschema, NFschema, TrUserData)};
             {_, #{schema := NFschema}} -> S3#{schema => NFschema};
             {#{schema := PFschema}, _} -> S3#{schema => PFschema};
             {_, _} -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{schema_version := NFschema_version}} ->
            S4#{schema_version => NFschema_version};
        {#{schema_version := PFschema_version}, _} ->
            S4#{schema_version => PFschema_version};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_CommandGetOrCreateSchema/3}).
merge_msg_CommandGetOrCreateSchema(#{schema :=
                                         PFschema},
                                   #{request_id := NFrequest_id,
                                     topic := NFtopic, schema := NFschema},
                                   TrUserData) ->
    #{request_id => NFrequest_id, topic => NFtopic,
      schema =>
          merge_msg_Schema(PFschema, NFschema, TrUserData)}.

-compile({nowarn_unused_function,merge_msg_CommandGetOrCreateSchemaResponse/3}).
merge_msg_CommandGetOrCreateSchemaResponse(#{} = PMsg,
                                           #{request_id := NFrequest_id} = NMsg,
                                           _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{error_code := NFerror_code}} ->
                 S1#{error_code => NFerror_code};
             {#{error_code := PFerror_code}, _} ->
                 S1#{error_code => PFerror_code};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{error_message := NFerror_message}} ->
                 S2#{error_message => NFerror_message};
             {#{error_message := PFerror_message}, _} ->
                 S2#{error_message => PFerror_message};
             _ -> S2
         end,
    case {PMsg, NMsg} of
        {_, #{schema_version := NFschema_version}} ->
            S3#{schema_version => NFschema_version};
        {#{schema_version := PFschema_version}, _} ->
            S3#{schema_version => PFschema_version};
        _ -> S3
    end.

-compile({nowarn_unused_function,merge_msg_CommandNewTxn/3}).
merge_msg_CommandNewTxn(#{} = PMsg,
                        #{request_id := NFrequest_id} = NMsg, _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txn_ttl_seconds := NFtxn_ttl_seconds}} ->
                 S1#{txn_ttl_seconds => NFtxn_ttl_seconds};
             {#{txn_ttl_seconds := PFtxn_ttl_seconds}, _} ->
                 S1#{txn_ttl_seconds => PFtxn_ttl_seconds};
             _ -> S1
         end,
    case {PMsg, NMsg} of
        {_, #{tc_id := NFtc_id}} -> S2#{tc_id => NFtc_id};
        {#{tc_id := PFtc_id}, _} -> S2#{tc_id => PFtc_id};
        _ -> S2
    end.

-compile({nowarn_unused_function,merge_msg_CommandNewTxnResponse/3}).
merge_msg_CommandNewTxnResponse(#{} = PMsg,
                                #{request_id := NFrequest_id} = NMsg, _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S3#{error => NFerror};
             {#{error := PFerror}, _} -> S3#{error => PFerror};
             _ -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{message := NFmessage}} ->
            S4#{message => NFmessage};
        {#{message := PFmessage}, _} ->
            S4#{message => PFmessage};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_CommandAddPartitionToTxn/3}).
merge_msg_CommandAddPartitionToTxn(#{} = PMsg,
                                   #{request_id := NFrequest_id} = NMsg,
                                   TrUserData) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    case {PMsg, NMsg} of
        {#{partitions := PFpartitions},
         #{partitions := NFpartitions}} ->
            S3#{partitions =>
                    'erlang_++'(PFpartitions, NFpartitions, TrUserData)};
        {_, #{partitions := NFpartitions}} ->
            S3#{partitions => NFpartitions};
        {#{partitions := PFpartitions}, _} ->
            S3#{partitions => PFpartitions};
        {_, _} -> S3
    end.

-compile({nowarn_unused_function,merge_msg_CommandAddPartitionToTxnResponse/3}).
merge_msg_CommandAddPartitionToTxnResponse(#{} = PMsg,
                                           #{request_id := NFrequest_id} = NMsg,
                                           _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S3#{error => NFerror};
             {#{error := PFerror}, _} -> S3#{error => PFerror};
             _ -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{message := NFmessage}} ->
            S4#{message => NFmessage};
        {#{message := PFmessage}, _} ->
            S4#{message => PFmessage};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_Subscription/3}).
merge_msg_Subscription(#{},
                       #{topic := NFtopic, subscription := NFsubscription},
                       _) ->
    #{topic => NFtopic, subscription => NFsubscription}.

-compile({nowarn_unused_function,merge_msg_CommandAddSubscriptionToTxn/3}).
merge_msg_CommandAddSubscriptionToTxn(#{} = PMsg,
                                      #{request_id := NFrequest_id} = NMsg,
                                      TrUserData) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    case {PMsg, NMsg} of
        {#{subscription := PFsubscription},
         #{subscription := NFsubscription}} ->
            S3#{subscription =>
                    'erlang_++'(PFsubscription,
                                NFsubscription,
                                TrUserData)};
        {_, #{subscription := NFsubscription}} ->
            S3#{subscription => NFsubscription};
        {#{subscription := PFsubscription}, _} ->
            S3#{subscription => PFsubscription};
        {_, _} -> S3
    end.

-compile({nowarn_unused_function,merge_msg_CommandAddSubscriptionToTxnResponse/3}).
merge_msg_CommandAddSubscriptionToTxnResponse(#{} =
                                                  PMsg,
                                              #{request_id := NFrequest_id} =
                                                  NMsg,
                                              _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S3#{error => NFerror};
             {#{error := PFerror}, _} -> S3#{error => PFerror};
             _ -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{message := NFmessage}} ->
            S4#{message => NFmessage};
        {#{message := PFmessage}, _} ->
            S4#{message => PFmessage};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_CommandEndTxn/3}).
merge_msg_CommandEndTxn(#{} = PMsg,
                        #{request_id := NFrequest_id} = NMsg, TrUserData) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{txn_action := NFtxn_action}} ->
                 S3#{txn_action => NFtxn_action};
             {#{txn_action := PFtxn_action}, _} ->
                 S3#{txn_action => PFtxn_action};
             _ -> S3
         end,
    case {PMsg, NMsg} of
        {#{message_id := PFmessage_id},
         #{message_id := NFmessage_id}} ->
            S4#{message_id =>
                    'erlang_++'(PFmessage_id, NFmessage_id, TrUserData)};
        {_, #{message_id := NFmessage_id}} ->
            S4#{message_id => NFmessage_id};
        {#{message_id := PFmessage_id}, _} ->
            S4#{message_id => PFmessage_id};
        {_, _} -> S4
    end.

-compile({nowarn_unused_function,merge_msg_CommandEndTxnResponse/3}).
merge_msg_CommandEndTxnResponse(#{} = PMsg,
                                #{request_id := NFrequest_id} = NMsg, _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S3#{error => NFerror};
             {#{error := PFerror}, _} -> S3#{error => PFerror};
             _ -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{message := NFmessage}} ->
            S4#{message => NFmessage};
        {#{message := PFmessage}, _} ->
            S4#{message => PFmessage};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_CommandEndTxnOnPartition/3}).
merge_msg_CommandEndTxnOnPartition(#{} = PMsg,
                                   #{request_id := NFrequest_id} = NMsg,
                                   TrUserData) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{topic := NFtopic}} -> S3#{topic => NFtopic};
             {#{topic := PFtopic}, _} -> S3#{topic => PFtopic};
             _ -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {_, #{txn_action := NFtxn_action}} ->
                 S4#{txn_action => NFtxn_action};
             {#{txn_action := PFtxn_action}, _} ->
                 S4#{txn_action => PFtxn_action};
             _ -> S4
         end,
    case {PMsg, NMsg} of
        {#{message_id := PFmessage_id},
         #{message_id := NFmessage_id}} ->
            S5#{message_id =>
                    'erlang_++'(PFmessage_id, NFmessage_id, TrUserData)};
        {_, #{message_id := NFmessage_id}} ->
            S5#{message_id => NFmessage_id};
        {#{message_id := PFmessage_id}, _} ->
            S5#{message_id => PFmessage_id};
        {_, _} -> S5
    end.

-compile({nowarn_unused_function,merge_msg_CommandEndTxnOnPartitionResponse/3}).
merge_msg_CommandEndTxnOnPartitionResponse(#{} = PMsg,
                                           #{request_id := NFrequest_id} = NMsg,
                                           _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S3#{error => NFerror};
             {#{error := PFerror}, _} -> S3#{error => PFerror};
             _ -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{message := NFmessage}} ->
            S4#{message => NFmessage};
        {#{message := PFmessage}, _} ->
            S4#{message => PFmessage};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_CommandEndTxnOnSubscription/3}).
merge_msg_CommandEndTxnOnSubscription(#{} = PMsg,
                                      #{request_id := NFrequest_id} = NMsg,
                                      TrUserData) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {#{subscription := PFsubscription},
              #{subscription := NFsubscription}} ->
                 S3#{subscription =>
                         merge_msg_Subscription(PFsubscription,
                                                NFsubscription,
                                                TrUserData)};
             {_, #{subscription := NFsubscription}} ->
                 S3#{subscription => NFsubscription};
             {#{subscription := PFsubscription}, _} ->
                 S3#{subscription => PFsubscription};
             {_, _} -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{txn_action := NFtxn_action}} ->
            S4#{txn_action => NFtxn_action};
        {#{txn_action := PFtxn_action}, _} ->
            S4#{txn_action => PFtxn_action};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_CommandEndTxnOnSubscriptionResponse/3}).
merge_msg_CommandEndTxnOnSubscriptionResponse(#{} =
                                                  PMsg,
                                              #{request_id := NFrequest_id} =
                                                  NMsg,
                                              _) ->
    S1 = #{request_id => NFrequest_id},
    S2 = case {PMsg, NMsg} of
             {_, #{txnid_least_bits := NFtxnid_least_bits}} ->
                 S1#{txnid_least_bits => NFtxnid_least_bits};
             {#{txnid_least_bits := PFtxnid_least_bits}, _} ->
                 S1#{txnid_least_bits => PFtxnid_least_bits};
             _ -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {_, #{txnid_most_bits := NFtxnid_most_bits}} ->
                 S2#{txnid_most_bits => NFtxnid_most_bits};
             {#{txnid_most_bits := PFtxnid_most_bits}, _} ->
                 S2#{txnid_most_bits => PFtxnid_most_bits};
             _ -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {_, #{error := NFerror}} -> S3#{error => NFerror};
             {#{error := PFerror}, _} -> S3#{error => PFerror};
             _ -> S3
         end,
    case {PMsg, NMsg} of
        {_, #{message := NFmessage}} ->
            S4#{message => NFmessage};
        {#{message := PFmessage}, _} ->
            S4#{message => PFmessage};
        _ -> S4
    end.

-compile({nowarn_unused_function,merge_msg_BaseCommand/3}).
merge_msg_BaseCommand(#{} = PMsg,
                      #{type := NFtype} = NMsg, TrUserData) ->
    S1 = #{type => NFtype},
    S2 = case {PMsg, NMsg} of
             {#{connect := PFconnect}, #{connect := NFconnect}} ->
                 S1#{connect =>
                         merge_msg_CommandConnect(PFconnect,
                                                  NFconnect,
                                                  TrUserData)};
             {_, #{connect := NFconnect}} ->
                 S1#{connect => NFconnect};
             {#{connect := PFconnect}, _} ->
                 S1#{connect => PFconnect};
             {_, _} -> S1
         end,
    S3 = case {PMsg, NMsg} of
             {#{connected := PFconnected},
              #{connected := NFconnected}} ->
                 S2#{connected =>
                         merge_msg_CommandConnected(PFconnected,
                                                    NFconnected,
                                                    TrUserData)};
             {_, #{connected := NFconnected}} ->
                 S2#{connected => NFconnected};
             {#{connected := PFconnected}, _} ->
                 S2#{connected => PFconnected};
             {_, _} -> S2
         end,
    S4 = case {PMsg, NMsg} of
             {#{subscribe := PFsubscribe},
              #{subscribe := NFsubscribe}} ->
                 S3#{subscribe =>
                         merge_msg_CommandSubscribe(PFsubscribe,
                                                    NFsubscribe,
                                                    TrUserData)};
             {_, #{subscribe := NFsubscribe}} ->
                 S3#{subscribe => NFsubscribe};
             {#{subscribe := PFsubscribe}, _} ->
                 S3#{subscribe => PFsubscribe};
             {_, _} -> S3
         end,
    S5 = case {PMsg, NMsg} of
             {#{producer := PFproducer},
              #{producer := NFproducer}} ->
                 S4#{producer =>
                         merge_msg_CommandProducer(PFproducer,
                                                   NFproducer,
                                                   TrUserData)};
             {_, #{producer := NFproducer}} ->
                 S4#{producer => NFproducer};
             {#{producer := PFproducer}, _} ->
                 S4#{producer => PFproducer};
             {_, _} -> S4
         end,
    S6 = case {PMsg, NMsg} of
             {#{send := PFsend}, #{send := NFsend}} ->
                 S5#{send =>
                         merge_msg_CommandSend(PFsend, NFsend, TrUserData)};
             {_, #{send := NFsend}} -> S5#{send => NFsend};
             {#{send := PFsend}, _} -> S5#{send => PFsend};
             {_, _} -> S5
         end,
    S7 = case {PMsg, NMsg} of
             {#{send_receipt := PFsend_receipt},
              #{send_receipt := NFsend_receipt}} ->
                 S6#{send_receipt =>
                         merge_msg_CommandSendReceipt(PFsend_receipt,
                                                      NFsend_receipt,
                                                      TrUserData)};
             {_, #{send_receipt := NFsend_receipt}} ->
                 S6#{send_receipt => NFsend_receipt};
             {#{send_receipt := PFsend_receipt}, _} ->
                 S6#{send_receipt => PFsend_receipt};
             {_, _} -> S6
         end,
    S8 = case {PMsg, NMsg} of
             {#{send_error := PFsend_error},
              #{send_error := NFsend_error}} ->
                 S7#{send_error =>
                         merge_msg_CommandSendError(PFsend_error,
                                                    NFsend_error,
                                                    TrUserData)};
             {_, #{send_error := NFsend_error}} ->
                 S7#{send_error => NFsend_error};
             {#{send_error := PFsend_error}, _} ->
                 S7#{send_error => PFsend_error};
             {_, _} -> S7
         end,
    S9 = case {PMsg, NMsg} of
             {#{message := PFmessage}, #{message := NFmessage}} ->
                 S8#{message =>
                         merge_msg_CommandMessage(PFmessage,
                                                  NFmessage,
                                                  TrUserData)};
             {_, #{message := NFmessage}} ->
                 S8#{message => NFmessage};
             {#{message := PFmessage}, _} ->
                 S8#{message => PFmessage};
             {_, _} -> S8
         end,
    S10 = case {PMsg, NMsg} of
              {#{ack := PFack}, #{ack := NFack}} ->
                  S9#{ack =>
                          merge_msg_CommandAck(PFack, NFack, TrUserData)};
              {_, #{ack := NFack}} -> S9#{ack => NFack};
              {#{ack := PFack}, _} -> S9#{ack => PFack};
              {_, _} -> S9
          end,
    S11 = case {PMsg, NMsg} of
              {#{flow := PFflow}, #{flow := NFflow}} ->
                  S10#{flow =>
                           merge_msg_CommandFlow(PFflow, NFflow, TrUserData)};
              {_, #{flow := NFflow}} -> S10#{flow => NFflow};
              {#{flow := PFflow}, _} -> S10#{flow => PFflow};
              {_, _} -> S10
          end,
    S12 = case {PMsg, NMsg} of
              {#{unsubscribe := PFunsubscribe},
               #{unsubscribe := NFunsubscribe}} ->
                  S11#{unsubscribe =>
                           merge_msg_CommandUnsubscribe(PFunsubscribe,
                                                        NFunsubscribe,
                                                        TrUserData)};
              {_, #{unsubscribe := NFunsubscribe}} ->
                  S11#{unsubscribe => NFunsubscribe};
              {#{unsubscribe := PFunsubscribe}, _} ->
                  S11#{unsubscribe => PFunsubscribe};
              {_, _} -> S11
          end,
    S13 = case {PMsg, NMsg} of
              {#{success := PFsuccess}, #{success := NFsuccess}} ->
                  S12#{success =>
                           merge_msg_CommandSuccess(PFsuccess,
                                                    NFsuccess,
                                                    TrUserData)};
              {_, #{success := NFsuccess}} ->
                  S12#{success => NFsuccess};
              {#{success := PFsuccess}, _} ->
                  S12#{success => PFsuccess};
              {_, _} -> S12
          end,
    S14 = case {PMsg, NMsg} of
              {#{error := PFerror}, #{error := NFerror}} ->
                  S13#{error =>
                           merge_msg_CommandError(PFerror,
                                                  NFerror,
                                                  TrUserData)};
              {_, #{error := NFerror}} -> S13#{error => NFerror};
              {#{error := PFerror}, _} -> S13#{error => PFerror};
              {_, _} -> S13
          end,
    S15 = case {PMsg, NMsg} of
              {#{close_producer := PFclose_producer},
               #{close_producer := NFclose_producer}} ->
                  S14#{close_producer =>
                           merge_msg_CommandCloseProducer(PFclose_producer,
                                                          NFclose_producer,
                                                          TrUserData)};
              {_, #{close_producer := NFclose_producer}} ->
                  S14#{close_producer => NFclose_producer};
              {#{close_producer := PFclose_producer}, _} ->
                  S14#{close_producer => PFclose_producer};
              {_, _} -> S14
          end,
    S16 = case {PMsg, NMsg} of
              {#{close_consumer := PFclose_consumer},
               #{close_consumer := NFclose_consumer}} ->
                  S15#{close_consumer =>
                           merge_msg_CommandCloseConsumer(PFclose_consumer,
                                                          NFclose_consumer,
                                                          TrUserData)};
              {_, #{close_consumer := NFclose_consumer}} ->
                  S15#{close_consumer => NFclose_consumer};
              {#{close_consumer := PFclose_consumer}, _} ->
                  S15#{close_consumer => PFclose_consumer};
              {_, _} -> S15
          end,
    S17 = case {PMsg, NMsg} of
              {#{producer_success := PFproducer_success},
               #{producer_success := NFproducer_success}} ->
                  S16#{producer_success =>
                           merge_msg_CommandProducerSuccess(PFproducer_success,
                                                            NFproducer_success,
                                                            TrUserData)};
              {_, #{producer_success := NFproducer_success}} ->
                  S16#{producer_success => NFproducer_success};
              {#{producer_success := PFproducer_success}, _} ->
                  S16#{producer_success => PFproducer_success};
              {_, _} -> S16
          end,
    S18 = case {PMsg, NMsg} of
              {#{ping := PFping}, #{ping := NFping}} ->
                  S17#{ping =>
                           merge_msg_CommandPing(PFping, NFping, TrUserData)};
              {_, #{ping := NFping}} -> S17#{ping => NFping};
              {#{ping := PFping}, _} -> S17#{ping => PFping};
              {_, _} -> S17
          end,
    S19 = case {PMsg, NMsg} of
              {#{pong := PFpong}, #{pong := NFpong}} ->
                  S18#{pong =>
                           merge_msg_CommandPong(PFpong, NFpong, TrUserData)};
              {_, #{pong := NFpong}} -> S18#{pong => NFpong};
              {#{pong := PFpong}, _} -> S18#{pong => PFpong};
              {_, _} -> S18
          end,
    S20 = case {PMsg, NMsg} of
              {#{redeliverUnacknowledgedMessages :=
                     PFredeliverUnacknowledgedMessages},
               #{redeliverUnacknowledgedMessages :=
                     NFredeliverUnacknowledgedMessages}} ->
                  S19#{redeliverUnacknowledgedMessages =>
                           merge_msg_CommandRedeliverUnacknowledgedMessages(PFredeliverUnacknowledgedMessages,
                                                                            NFredeliverUnacknowledgedMessages,
                                                                            TrUserData)};
              {_,
               #{redeliverUnacknowledgedMessages :=
                     NFredeliverUnacknowledgedMessages}} ->
                  S19#{redeliverUnacknowledgedMessages =>
                           NFredeliverUnacknowledgedMessages};
              {#{redeliverUnacknowledgedMessages :=
                     PFredeliverUnacknowledgedMessages},
               _} ->
                  S19#{redeliverUnacknowledgedMessages =>
                           PFredeliverUnacknowledgedMessages};
              {_, _} -> S19
          end,
    S21 = case {PMsg, NMsg} of
              {#{partitionMetadata := PFpartitionMetadata},
               #{partitionMetadata := NFpartitionMetadata}} ->
                  S20#{partitionMetadata =>
                           merge_msg_CommandPartitionedTopicMetadata(PFpartitionMetadata,
                                                                     NFpartitionMetadata,
                                                                     TrUserData)};
              {_, #{partitionMetadata := NFpartitionMetadata}} ->
                  S20#{partitionMetadata => NFpartitionMetadata};
              {#{partitionMetadata := PFpartitionMetadata}, _} ->
                  S20#{partitionMetadata => PFpartitionMetadata};
              {_, _} -> S20
          end,
    S22 = case {PMsg, NMsg} of
              {#{partitionMetadataResponse :=
                     PFpartitionMetadataResponse},
               #{partitionMetadataResponse :=
                     NFpartitionMetadataResponse}} ->
                  S21#{partitionMetadataResponse =>
                           merge_msg_CommandPartitionedTopicMetadataResponse(PFpartitionMetadataResponse,
                                                                             NFpartitionMetadataResponse,
                                                                             TrUserData)};
              {_,
               #{partitionMetadataResponse :=
                     NFpartitionMetadataResponse}} ->
                  S21#{partitionMetadataResponse =>
                           NFpartitionMetadataResponse};
              {#{partitionMetadataResponse :=
                     PFpartitionMetadataResponse},
               _} ->
                  S21#{partitionMetadataResponse =>
                           PFpartitionMetadataResponse};
              {_, _} -> S21
          end,
    S23 = case {PMsg, NMsg} of
              {#{lookupTopic := PFlookupTopic},
               #{lookupTopic := NFlookupTopic}} ->
                  S22#{lookupTopic =>
                           merge_msg_CommandLookupTopic(PFlookupTopic,
                                                        NFlookupTopic,
                                                        TrUserData)};
              {_, #{lookupTopic := NFlookupTopic}} ->
                  S22#{lookupTopic => NFlookupTopic};
              {#{lookupTopic := PFlookupTopic}, _} ->
                  S22#{lookupTopic => PFlookupTopic};
              {_, _} -> S22
          end,
    S24 = case {PMsg, NMsg} of
              {#{lookupTopicResponse := PFlookupTopicResponse},
               #{lookupTopicResponse := NFlookupTopicResponse}} ->
                  S23#{lookupTopicResponse =>
                           merge_msg_CommandLookupTopicResponse(PFlookupTopicResponse,
                                                                NFlookupTopicResponse,
                                                                TrUserData)};
              {_, #{lookupTopicResponse := NFlookupTopicResponse}} ->
                  S23#{lookupTopicResponse => NFlookupTopicResponse};
              {#{lookupTopicResponse := PFlookupTopicResponse}, _} ->
                  S23#{lookupTopicResponse => PFlookupTopicResponse};
              {_, _} -> S23
          end,
    S25 = case {PMsg, NMsg} of
              {#{consumerStats := PFconsumerStats},
               #{consumerStats := NFconsumerStats}} ->
                  S24#{consumerStats =>
                           merge_msg_CommandConsumerStats(PFconsumerStats,
                                                          NFconsumerStats,
                                                          TrUserData)};
              {_, #{consumerStats := NFconsumerStats}} ->
                  S24#{consumerStats => NFconsumerStats};
              {#{consumerStats := PFconsumerStats}, _} ->
                  S24#{consumerStats => PFconsumerStats};
              {_, _} -> S24
          end,
    S26 = case {PMsg, NMsg} of
              {#{consumerStatsResponse := PFconsumerStatsResponse},
               #{consumerStatsResponse := NFconsumerStatsResponse}} ->
                  S25#{consumerStatsResponse =>
                           merge_msg_CommandConsumerStatsResponse(PFconsumerStatsResponse,
                                                                  NFconsumerStatsResponse,
                                                                  TrUserData)};
              {_,
               #{consumerStatsResponse := NFconsumerStatsResponse}} ->
                  S25#{consumerStatsResponse => NFconsumerStatsResponse};
              {#{consumerStatsResponse := PFconsumerStatsResponse},
               _} ->
                  S25#{consumerStatsResponse => PFconsumerStatsResponse};
              {_, _} -> S25
          end,
    S27 = case {PMsg, NMsg} of
              {#{reachedEndOfTopic := PFreachedEndOfTopic},
               #{reachedEndOfTopic := NFreachedEndOfTopic}} ->
                  S26#{reachedEndOfTopic =>
                           merge_msg_CommandReachedEndOfTopic(PFreachedEndOfTopic,
                                                              NFreachedEndOfTopic,
                                                              TrUserData)};
              {_, #{reachedEndOfTopic := NFreachedEndOfTopic}} ->
                  S26#{reachedEndOfTopic => NFreachedEndOfTopic};
              {#{reachedEndOfTopic := PFreachedEndOfTopic}, _} ->
                  S26#{reachedEndOfTopic => PFreachedEndOfTopic};
              {_, _} -> S26
          end,
    S28 = case {PMsg, NMsg} of
              {#{seek := PFseek}, #{seek := NFseek}} ->
                  S27#{seek =>
                           merge_msg_CommandSeek(PFseek, NFseek, TrUserData)};
              {_, #{seek := NFseek}} -> S27#{seek => NFseek};
              {#{seek := PFseek}, _} -> S27#{seek => PFseek};
              {_, _} -> S27
          end,
    S29 = case {PMsg, NMsg} of
              {#{getLastMessageId := PFgetLastMessageId},
               #{getLastMessageId := NFgetLastMessageId}} ->
                  S28#{getLastMessageId =>
                           merge_msg_CommandGetLastMessageId(PFgetLastMessageId,
                                                             NFgetLastMessageId,
                                                             TrUserData)};
              {_, #{getLastMessageId := NFgetLastMessageId}} ->
                  S28#{getLastMessageId => NFgetLastMessageId};
              {#{getLastMessageId := PFgetLastMessageId}, _} ->
                  S28#{getLastMessageId => PFgetLastMessageId};
              {_, _} -> S28
          end,
    S30 = case {PMsg, NMsg} of
              {#{getLastMessageIdResponse :=
                     PFgetLastMessageIdResponse},
               #{getLastMessageIdResponse :=
                     NFgetLastMessageIdResponse}} ->
                  S29#{getLastMessageIdResponse =>
                           merge_msg_CommandGetLastMessageIdResponse(PFgetLastMessageIdResponse,
                                                                     NFgetLastMessageIdResponse,
                                                                     TrUserData)};
              {_,
               #{getLastMessageIdResponse :=
                     NFgetLastMessageIdResponse}} ->
                  S29#{getLastMessageIdResponse =>
                           NFgetLastMessageIdResponse};
              {#{getLastMessageIdResponse :=
                     PFgetLastMessageIdResponse},
               _} ->
                  S29#{getLastMessageIdResponse =>
                           PFgetLastMessageIdResponse};
              {_, _} -> S29
          end,
    S31 = case {PMsg, NMsg} of
              {#{active_consumer_change := PFactive_consumer_change},
               #{active_consumer_change :=
                     NFactive_consumer_change}} ->
                  S30#{active_consumer_change =>
                           merge_msg_CommandActiveConsumerChange(PFactive_consumer_change,
                                                                 NFactive_consumer_change,
                                                                 TrUserData)};
              {_,
               #{active_consumer_change :=
                     NFactive_consumer_change}} ->
                  S30#{active_consumer_change =>
                           NFactive_consumer_change};
              {#{active_consumer_change := PFactive_consumer_change},
               _} ->
                  S30#{active_consumer_change =>
                           PFactive_consumer_change};
              {_, _} -> S30
          end,
    S32 = case {PMsg, NMsg} of
              {#{getTopicsOfNamespace := PFgetTopicsOfNamespace},
               #{getTopicsOfNamespace := NFgetTopicsOfNamespace}} ->
                  S31#{getTopicsOfNamespace =>
                           merge_msg_CommandGetTopicsOfNamespace(PFgetTopicsOfNamespace,
                                                                 NFgetTopicsOfNamespace,
                                                                 TrUserData)};
              {_,
               #{getTopicsOfNamespace := NFgetTopicsOfNamespace}} ->
                  S31#{getTopicsOfNamespace => NFgetTopicsOfNamespace};
              {#{getTopicsOfNamespace := PFgetTopicsOfNamespace},
               _} ->
                  S31#{getTopicsOfNamespace => PFgetTopicsOfNamespace};
              {_, _} -> S31
          end,
    S33 = case {PMsg, NMsg} of
              {#{getTopicsOfNamespaceResponse :=
                     PFgetTopicsOfNamespaceResponse},
               #{getTopicsOfNamespaceResponse :=
                     NFgetTopicsOfNamespaceResponse}} ->
                  S32#{getTopicsOfNamespaceResponse =>
                           merge_msg_CommandGetTopicsOfNamespaceResponse(PFgetTopicsOfNamespaceResponse,
                                                                         NFgetTopicsOfNamespaceResponse,
                                                                         TrUserData)};
              {_,
               #{getTopicsOfNamespaceResponse :=
                     NFgetTopicsOfNamespaceResponse}} ->
                  S32#{getTopicsOfNamespaceResponse =>
                           NFgetTopicsOfNamespaceResponse};
              {#{getTopicsOfNamespaceResponse :=
                     PFgetTopicsOfNamespaceResponse},
               _} ->
                  S32#{getTopicsOfNamespaceResponse =>
                           PFgetTopicsOfNamespaceResponse};
              {_, _} -> S32
          end,
    S34 = case {PMsg, NMsg} of
              {#{getSchema := PFgetSchema},
               #{getSchema := NFgetSchema}} ->
                  S33#{getSchema =>
                           merge_msg_CommandGetSchema(PFgetSchema,
                                                      NFgetSchema,
                                                      TrUserData)};
              {_, #{getSchema := NFgetSchema}} ->
                  S33#{getSchema => NFgetSchema};
              {#{getSchema := PFgetSchema}, _} ->
                  S33#{getSchema => PFgetSchema};
              {_, _} -> S33
          end,
    S35 = case {PMsg, NMsg} of
              {#{getSchemaResponse := PFgetSchemaResponse},
               #{getSchemaResponse := NFgetSchemaResponse}} ->
                  S34#{getSchemaResponse =>
                           merge_msg_CommandGetSchemaResponse(PFgetSchemaResponse,
                                                              NFgetSchemaResponse,
                                                              TrUserData)};
              {_, #{getSchemaResponse := NFgetSchemaResponse}} ->
                  S34#{getSchemaResponse => NFgetSchemaResponse};
              {#{getSchemaResponse := PFgetSchemaResponse}, _} ->
                  S34#{getSchemaResponse => PFgetSchemaResponse};
              {_, _} -> S34
          end,
    S36 = case {PMsg, NMsg} of
              {#{authChallenge := PFauthChallenge},
               #{authChallenge := NFauthChallenge}} ->
                  S35#{authChallenge =>
                           merge_msg_CommandAuthChallenge(PFauthChallenge,
                                                          NFauthChallenge,
                                                          TrUserData)};
              {_, #{authChallenge := NFauthChallenge}} ->
                  S35#{authChallenge => NFauthChallenge};
              {#{authChallenge := PFauthChallenge}, _} ->
                  S35#{authChallenge => PFauthChallenge};
              {_, _} -> S35
          end,
    S37 = case {PMsg, NMsg} of
              {#{authResponse := PFauthResponse},
               #{authResponse := NFauthResponse}} ->
                  S36#{authResponse =>
                           merge_msg_CommandAuthResponse(PFauthResponse,
                                                         NFauthResponse,
                                                         TrUserData)};
              {_, #{authResponse := NFauthResponse}} ->
                  S36#{authResponse => NFauthResponse};
              {#{authResponse := PFauthResponse}, _} ->
                  S36#{authResponse => PFauthResponse};
              {_, _} -> S36
          end,
    S38 = case {PMsg, NMsg} of
              {#{ackResponse := PFackResponse},
               #{ackResponse := NFackResponse}} ->
                  S37#{ackResponse =>
                           merge_msg_CommandAckResponse(PFackResponse,
                                                        NFackResponse,
                                                        TrUserData)};
              {_, #{ackResponse := NFackResponse}} ->
                  S37#{ackResponse => NFackResponse};
              {#{ackResponse := PFackResponse}, _} ->
                  S37#{ackResponse => PFackResponse};
              {_, _} -> S37
          end,
    S39 = case {PMsg, NMsg} of
              {#{getOrCreateSchema := PFgetOrCreateSchema},
               #{getOrCreateSchema := NFgetOrCreateSchema}} ->
                  S38#{getOrCreateSchema =>
                           merge_msg_CommandGetOrCreateSchema(PFgetOrCreateSchema,
                                                              NFgetOrCreateSchema,
                                                              TrUserData)};
              {_, #{getOrCreateSchema := NFgetOrCreateSchema}} ->
                  S38#{getOrCreateSchema => NFgetOrCreateSchema};
              {#{getOrCreateSchema := PFgetOrCreateSchema}, _} ->
                  S38#{getOrCreateSchema => PFgetOrCreateSchema};
              {_, _} -> S38
          end,
    S40 = case {PMsg, NMsg} of
              {#{getOrCreateSchemaResponse :=
                     PFgetOrCreateSchemaResponse},
               #{getOrCreateSchemaResponse :=
                     NFgetOrCreateSchemaResponse}} ->
                  S39#{getOrCreateSchemaResponse =>
                           merge_msg_CommandGetOrCreateSchemaResponse(PFgetOrCreateSchemaResponse,
                                                                      NFgetOrCreateSchemaResponse,
                                                                      TrUserData)};
              {_,
               #{getOrCreateSchemaResponse :=
                     NFgetOrCreateSchemaResponse}} ->
                  S39#{getOrCreateSchemaResponse =>
                           NFgetOrCreateSchemaResponse};
              {#{getOrCreateSchemaResponse :=
                     PFgetOrCreateSchemaResponse},
               _} ->
                  S39#{getOrCreateSchemaResponse =>
                           PFgetOrCreateSchemaResponse};
              {_, _} -> S39
          end,
    S41 = case {PMsg, NMsg} of
              {#{newTxn := PFnewTxn}, #{newTxn := NFnewTxn}} ->
                  S40#{newTxn =>
                           merge_msg_CommandNewTxn(PFnewTxn,
                                                   NFnewTxn,
                                                   TrUserData)};
              {_, #{newTxn := NFnewTxn}} -> S40#{newTxn => NFnewTxn};
              {#{newTxn := PFnewTxn}, _} -> S40#{newTxn => PFnewTxn};
              {_, _} -> S40
          end,
    S42 = case {PMsg, NMsg} of
              {#{newTxnResponse := PFnewTxnResponse},
               #{newTxnResponse := NFnewTxnResponse}} ->
                  S41#{newTxnResponse =>
                           merge_msg_CommandNewTxnResponse(PFnewTxnResponse,
                                                           NFnewTxnResponse,
                                                           TrUserData)};
              {_, #{newTxnResponse := NFnewTxnResponse}} ->
                  S41#{newTxnResponse => NFnewTxnResponse};
              {#{newTxnResponse := PFnewTxnResponse}, _} ->
                  S41#{newTxnResponse => PFnewTxnResponse};
              {_, _} -> S41
          end,
    S43 = case {PMsg, NMsg} of
              {#{addPartitionToTxn := PFaddPartitionToTxn},
               #{addPartitionToTxn := NFaddPartitionToTxn}} ->
                  S42#{addPartitionToTxn =>
                           merge_msg_CommandAddPartitionToTxn(PFaddPartitionToTxn,
                                                              NFaddPartitionToTxn,
                                                              TrUserData)};
              {_, #{addPartitionToTxn := NFaddPartitionToTxn}} ->
                  S42#{addPartitionToTxn => NFaddPartitionToTxn};
              {#{addPartitionToTxn := PFaddPartitionToTxn}, _} ->
                  S42#{addPartitionToTxn => PFaddPartitionToTxn};
              {_, _} -> S42
          end,
    S44 = case {PMsg, NMsg} of
              {#{addPartitionToTxnResponse :=
                     PFaddPartitionToTxnResponse},
               #{addPartitionToTxnResponse :=
                     NFaddPartitionToTxnResponse}} ->
                  S43#{addPartitionToTxnResponse =>
                           merge_msg_CommandAddPartitionToTxnResponse(PFaddPartitionToTxnResponse,
                                                                      NFaddPartitionToTxnResponse,
                                                                      TrUserData)};
              {_,
               #{addPartitionToTxnResponse :=
                     NFaddPartitionToTxnResponse}} ->
                  S43#{addPartitionToTxnResponse =>
                           NFaddPartitionToTxnResponse};
              {#{addPartitionToTxnResponse :=
                     PFaddPartitionToTxnResponse},
               _} ->
                  S43#{addPartitionToTxnResponse =>
                           PFaddPartitionToTxnResponse};
              {_, _} -> S43
          end,
    S45 = case {PMsg, NMsg} of
              {#{addSubscriptionToTxn := PFaddSubscriptionToTxn},
               #{addSubscriptionToTxn := NFaddSubscriptionToTxn}} ->
                  S44#{addSubscriptionToTxn =>
                           merge_msg_CommandAddSubscriptionToTxn(PFaddSubscriptionToTxn,
                                                                 NFaddSubscriptionToTxn,
                                                                 TrUserData)};
              {_,
               #{addSubscriptionToTxn := NFaddSubscriptionToTxn}} ->
                  S44#{addSubscriptionToTxn => NFaddSubscriptionToTxn};
              {#{addSubscriptionToTxn := PFaddSubscriptionToTxn},
               _} ->
                  S44#{addSubscriptionToTxn => PFaddSubscriptionToTxn};
              {_, _} -> S44
          end,
    S46 = case {PMsg, NMsg} of
              {#{addSubscriptionToTxnResponse :=
                     PFaddSubscriptionToTxnResponse},
               #{addSubscriptionToTxnResponse :=
                     NFaddSubscriptionToTxnResponse}} ->
                  S45#{addSubscriptionToTxnResponse =>
                           merge_msg_CommandAddSubscriptionToTxnResponse(PFaddSubscriptionToTxnResponse,
                                                                         NFaddSubscriptionToTxnResponse,
                                                                         TrUserData)};
              {_,
               #{addSubscriptionToTxnResponse :=
                     NFaddSubscriptionToTxnResponse}} ->
                  S45#{addSubscriptionToTxnResponse =>
                           NFaddSubscriptionToTxnResponse};
              {#{addSubscriptionToTxnResponse :=
                     PFaddSubscriptionToTxnResponse},
               _} ->
                  S45#{addSubscriptionToTxnResponse =>
                           PFaddSubscriptionToTxnResponse};
              {_, _} -> S45
          end,
    S47 = case {PMsg, NMsg} of
              {#{endTxn := PFendTxn}, #{endTxn := NFendTxn}} ->
                  S46#{endTxn =>
                           merge_msg_CommandEndTxn(PFendTxn,
                                                   NFendTxn,
                                                   TrUserData)};
              {_, #{endTxn := NFendTxn}} -> S46#{endTxn => NFendTxn};
              {#{endTxn := PFendTxn}, _} -> S46#{endTxn => PFendTxn};
              {_, _} -> S46
          end,
    S48 = case {PMsg, NMsg} of
              {#{endTxnResponse := PFendTxnResponse},
               #{endTxnResponse := NFendTxnResponse}} ->
                  S47#{endTxnResponse =>
                           merge_msg_CommandEndTxnResponse(PFendTxnResponse,
                                                           NFendTxnResponse,
                                                           TrUserData)};
              {_, #{endTxnResponse := NFendTxnResponse}} ->
                  S47#{endTxnResponse => NFendTxnResponse};
              {#{endTxnResponse := PFendTxnResponse}, _} ->
                  S47#{endTxnResponse => PFendTxnResponse};
              {_, _} -> S47
          end,
    S49 = case {PMsg, NMsg} of
              {#{endTxnOnPartition := PFendTxnOnPartition},
               #{endTxnOnPartition := NFendTxnOnPartition}} ->
                  S48#{endTxnOnPartition =>
                           merge_msg_CommandEndTxnOnPartition(PFendTxnOnPartition,
                                                              NFendTxnOnPartition,
                                                              TrUserData)};
              {_, #{endTxnOnPartition := NFendTxnOnPartition}} ->
                  S48#{endTxnOnPartition => NFendTxnOnPartition};
              {#{endTxnOnPartition := PFendTxnOnPartition}, _} ->
                  S48#{endTxnOnPartition => PFendTxnOnPartition};
              {_, _} -> S48
          end,
    S50 = case {PMsg, NMsg} of
              {#{endTxnOnPartitionResponse :=
                     PFendTxnOnPartitionResponse},
               #{endTxnOnPartitionResponse :=
                     NFendTxnOnPartitionResponse}} ->
                  S49#{endTxnOnPartitionResponse =>
                           merge_msg_CommandEndTxnOnPartitionResponse(PFendTxnOnPartitionResponse,
                                                                      NFendTxnOnPartitionResponse,
                                                                      TrUserData)};
              {_,
               #{endTxnOnPartitionResponse :=
                     NFendTxnOnPartitionResponse}} ->
                  S49#{endTxnOnPartitionResponse =>
                           NFendTxnOnPartitionResponse};
              {#{endTxnOnPartitionResponse :=
                     PFendTxnOnPartitionResponse},
               _} ->
                  S49#{endTxnOnPartitionResponse =>
                           PFendTxnOnPartitionResponse};
              {_, _} -> S49
          end,
    S51 = case {PMsg, NMsg} of
              {#{endTxnOnSubscription := PFendTxnOnSubscription},
               #{endTxnOnSubscription := NFendTxnOnSubscription}} ->
                  S50#{endTxnOnSubscription =>
                           merge_msg_CommandEndTxnOnSubscription(PFendTxnOnSubscription,
                                                                 NFendTxnOnSubscription,
                                                                 TrUserData)};
              {_,
               #{endTxnOnSubscription := NFendTxnOnSubscription}} ->
                  S50#{endTxnOnSubscription => NFendTxnOnSubscription};
              {#{endTxnOnSubscription := PFendTxnOnSubscription},
               _} ->
                  S50#{endTxnOnSubscription => PFendTxnOnSubscription};
              {_, _} -> S50
          end,
    case {PMsg, NMsg} of
        {#{endTxnOnSubscriptionResponse :=
               PFendTxnOnSubscriptionResponse},
         #{endTxnOnSubscriptionResponse :=
               NFendTxnOnSubscriptionResponse}} ->
            S51#{endTxnOnSubscriptionResponse =>
                     merge_msg_CommandEndTxnOnSubscriptionResponse(PFendTxnOnSubscriptionResponse,
                                                                   NFendTxnOnSubscriptionResponse,
                                                                   TrUserData)};
        {_,
         #{endTxnOnSubscriptionResponse :=
               NFendTxnOnSubscriptionResponse}} ->
            S51#{endTxnOnSubscriptionResponse =>
                     NFendTxnOnSubscriptionResponse};
        {#{endTxnOnSubscriptionResponse :=
               PFendTxnOnSubscriptionResponse},
         _} ->
            S51#{endTxnOnSubscriptionResponse =>
                     PFendTxnOnSubscriptionResponse};
        {_, _} -> S51
    end.


verify_msg(Msg, MsgName) when is_atom(MsgName) ->
    verify_msg(Msg, MsgName, []).

verify_msg(Msg, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'Schema' -> v_msg_Schema(Msg, [MsgName], TrUserData);
        'MessageIdData' ->
            v_msg_MessageIdData(Msg, [MsgName], TrUserData);
        'KeyValue' ->
            v_msg_KeyValue(Msg, [MsgName], TrUserData);
        'KeyLongValue' ->
            v_msg_KeyLongValue(Msg, [MsgName], TrUserData);
        'IntRange' ->
            v_msg_IntRange(Msg, [MsgName], TrUserData);
        'EncryptionKeys' ->
            v_msg_EncryptionKeys(Msg, [MsgName], TrUserData);
        'MessageMetadata' ->
            v_msg_MessageMetadata(Msg, [MsgName], TrUserData);
        'SingleMessageMetadata' ->
            v_msg_SingleMessageMetadata(Msg, [MsgName], TrUserData);
        'CommandConnect' ->
            v_msg_CommandConnect(Msg, [MsgName], TrUserData);
        'FeatureFlags' ->
            v_msg_FeatureFlags(Msg, [MsgName], TrUserData);
        'CommandConnected' ->
            v_msg_CommandConnected(Msg, [MsgName], TrUserData);
        'CommandAuthResponse' ->
            v_msg_CommandAuthResponse(Msg, [MsgName], TrUserData);
        'CommandAuthChallenge' ->
            v_msg_CommandAuthChallenge(Msg, [MsgName], TrUserData);
        'AuthData' ->
            v_msg_AuthData(Msg, [MsgName], TrUserData);
        'KeySharedMeta' ->
            v_msg_KeySharedMeta(Msg, [MsgName], TrUserData);
        'CommandSubscribe' ->
            v_msg_CommandSubscribe(Msg, [MsgName], TrUserData);
        'CommandPartitionedTopicMetadata' ->
            v_msg_CommandPartitionedTopicMetadata(Msg,
                                                  [MsgName],
                                                  TrUserData);
        'CommandPartitionedTopicMetadataResponse' ->
            v_msg_CommandPartitionedTopicMetadataResponse(Msg,
                                                          [MsgName],
                                                          TrUserData);
        'CommandLookupTopic' ->
            v_msg_CommandLookupTopic(Msg, [MsgName], TrUserData);
        'CommandLookupTopicResponse' ->
            v_msg_CommandLookupTopicResponse(Msg,
                                             [MsgName],
                                             TrUserData);
        'CommandProducer' ->
            v_msg_CommandProducer(Msg, [MsgName], TrUserData);
        'CommandSend' ->
            v_msg_CommandSend(Msg, [MsgName], TrUserData);
        'CommandSendReceipt' ->
            v_msg_CommandSendReceipt(Msg, [MsgName], TrUserData);
        'CommandSendError' ->
            v_msg_CommandSendError(Msg, [MsgName], TrUserData);
        'CommandMessage' ->
            v_msg_CommandMessage(Msg, [MsgName], TrUserData);
        'CommandAck' ->
            v_msg_CommandAck(Msg, [MsgName], TrUserData);
        'CommandAckResponse' ->
            v_msg_CommandAckResponse(Msg, [MsgName], TrUserData);
        'CommandActiveConsumerChange' ->
            v_msg_CommandActiveConsumerChange(Msg,
                                              [MsgName],
                                              TrUserData);
        'CommandFlow' ->
            v_msg_CommandFlow(Msg, [MsgName], TrUserData);
        'CommandUnsubscribe' ->
            v_msg_CommandUnsubscribe(Msg, [MsgName], TrUserData);
        'CommandSeek' ->
            v_msg_CommandSeek(Msg, [MsgName], TrUserData);
        'CommandReachedEndOfTopic' ->
            v_msg_CommandReachedEndOfTopic(Msg,
                                           [MsgName],
                                           TrUserData);
        'CommandCloseProducer' ->
            v_msg_CommandCloseProducer(Msg, [MsgName], TrUserData);
        'CommandCloseConsumer' ->
            v_msg_CommandCloseConsumer(Msg, [MsgName], TrUserData);
        'CommandRedeliverUnacknowledgedMessages' ->
            v_msg_CommandRedeliverUnacknowledgedMessages(Msg,
                                                         [MsgName],
                                                         TrUserData);
        'CommandSuccess' ->
            v_msg_CommandSuccess(Msg, [MsgName], TrUserData);
        'CommandProducerSuccess' ->
            v_msg_CommandProducerSuccess(Msg,
                                         [MsgName],
                                         TrUserData);
        'CommandError' ->
            v_msg_CommandError(Msg, [MsgName], TrUserData);
        'CommandPing' ->
            v_msg_CommandPing(Msg, [MsgName], TrUserData);
        'CommandPong' ->
            v_msg_CommandPong(Msg, [MsgName], TrUserData);
        'CommandConsumerStats' ->
            v_msg_CommandConsumerStats(Msg, [MsgName], TrUserData);
        'CommandConsumerStatsResponse' ->
            v_msg_CommandConsumerStatsResponse(Msg,
                                               [MsgName],
                                               TrUserData);
        'CommandGetLastMessageId' ->
            v_msg_CommandGetLastMessageId(Msg,
                                          [MsgName],
                                          TrUserData);
        'CommandGetLastMessageIdResponse' ->
            v_msg_CommandGetLastMessageIdResponse(Msg,
                                                  [MsgName],
                                                  TrUserData);
        'CommandGetTopicsOfNamespace' ->
            v_msg_CommandGetTopicsOfNamespace(Msg,
                                              [MsgName],
                                              TrUserData);
        'CommandGetTopicsOfNamespaceResponse' ->
            v_msg_CommandGetTopicsOfNamespaceResponse(Msg,
                                                      [MsgName],
                                                      TrUserData);
        'CommandGetSchema' ->
            v_msg_CommandGetSchema(Msg, [MsgName], TrUserData);
        'CommandGetSchemaResponse' ->
            v_msg_CommandGetSchemaResponse(Msg,
                                           [MsgName],
                                           TrUserData);
        'CommandGetOrCreateSchema' ->
            v_msg_CommandGetOrCreateSchema(Msg,
                                           [MsgName],
                                           TrUserData);
        'CommandGetOrCreateSchemaResponse' ->
            v_msg_CommandGetOrCreateSchemaResponse(Msg,
                                                   [MsgName],
                                                   TrUserData);
        'CommandNewTxn' ->
            v_msg_CommandNewTxn(Msg, [MsgName], TrUserData);
        'CommandNewTxnResponse' ->
            v_msg_CommandNewTxnResponse(Msg, [MsgName], TrUserData);
        'CommandAddPartitionToTxn' ->
            v_msg_CommandAddPartitionToTxn(Msg,
                                           [MsgName],
                                           TrUserData);
        'CommandAddPartitionToTxnResponse' ->
            v_msg_CommandAddPartitionToTxnResponse(Msg,
                                                   [MsgName],
                                                   TrUserData);
        'Subscription' ->
            v_msg_Subscription(Msg, [MsgName], TrUserData);
        'CommandAddSubscriptionToTxn' ->
            v_msg_CommandAddSubscriptionToTxn(Msg,
                                              [MsgName],
                                              TrUserData);
        'CommandAddSubscriptionToTxnResponse' ->
            v_msg_CommandAddSubscriptionToTxnResponse(Msg,
                                                      [MsgName],
                                                      TrUserData);
        'CommandEndTxn' ->
            v_msg_CommandEndTxn(Msg, [MsgName], TrUserData);
        'CommandEndTxnResponse' ->
            v_msg_CommandEndTxnResponse(Msg, [MsgName], TrUserData);
        'CommandEndTxnOnPartition' ->
            v_msg_CommandEndTxnOnPartition(Msg,
                                           [MsgName],
                                           TrUserData);
        'CommandEndTxnOnPartitionResponse' ->
            v_msg_CommandEndTxnOnPartitionResponse(Msg,
                                                   [MsgName],
                                                   TrUserData);
        'CommandEndTxnOnSubscription' ->
            v_msg_CommandEndTxnOnSubscription(Msg,
                                              [MsgName],
                                              TrUserData);
        'CommandEndTxnOnSubscriptionResponse' ->
            v_msg_CommandEndTxnOnSubscriptionResponse(Msg,
                                                      [MsgName],
                                                      TrUserData);
        'BaseCommand' ->
            v_msg_BaseCommand(Msg, [MsgName], TrUserData);
        _ -> mk_type_error(not_a_known_message, Msg, [])
    end.


-compile({nowarn_unused_function,v_msg_Schema/3}).
-dialyzer({nowarn_function,v_msg_Schema/3}).
v_msg_Schema(#{name := F1, schema_data := F2,
               type := F3} =
                 M,
             Path, TrUserData) ->
    v_type_string(F1, [name | Path], TrUserData),
    v_type_bytes(F2, [schema_data | Path], TrUserData),
    'v_enum_Schema.Type'(F3, [type | Path], TrUserData),
    case M of
        #{properties := F4} ->
            if is_list(F4) ->
                   _ = [v_msg_KeyValue(Elem,
                                       [properties | Path],
                                       TrUserData)
                        || Elem <- F4],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'KeyValue'}},
                                 F4,
                                 [properties | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (name) -> ok;
                      (schema_data) -> ok;
                      (type) -> ok;
                      (properties) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_Schema(M, Path, _TrUserData) when is_map(M) ->
    mk_type_error({missing_fields,
                   [name, schema_data, type] -- maps:keys(M),
                   'Schema'},
                  M,
                  Path);
v_msg_Schema(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'Schema'}, X, Path).

-compile({nowarn_unused_function,v_msg_MessageIdData/3}).
-dialyzer({nowarn_function,v_msg_MessageIdData/3}).
v_msg_MessageIdData(#{ledgerId := F1, entryId := F2} =
                        M,
                    Path, TrUserData) ->
    v_type_uint64(F1, [ledgerId | Path], TrUserData),
    v_type_uint64(F2, [entryId | Path], TrUserData),
    case M of
        #{partition := F3} ->
            v_type_int32(F3, [partition | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{batch_index := F4} ->
            v_type_int32(F4, [batch_index | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{ack_set := F5} ->
            if is_list(F5) ->
                   _ = [v_type_int64(Elem, [ack_set | Path], TrUserData)
                        || Elem <- F5],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, int64},
                                 F5,
                                 [ack_set | Path])
            end;
        _ -> ok
    end,
    case M of
        #{batch_size := F6} ->
            v_type_int32(F6, [batch_size | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (ledgerId) -> ok;
                      (entryId) -> ok;
                      (partition) -> ok;
                      (batch_index) -> ok;
                      (ack_set) -> ok;
                      (batch_size) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_MessageIdData(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [ledgerId, entryId] -- maps:keys(M),
                   'MessageIdData'},
                  M,
                  Path);
v_msg_MessageIdData(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'MessageIdData'}, X, Path).

-compile({nowarn_unused_function,v_msg_KeyValue/3}).
-dialyzer({nowarn_function,v_msg_KeyValue/3}).
v_msg_KeyValue(#{key := F1, value := F2} = M, Path,
               TrUserData) ->
    v_type_string(F1, [key | Path], TrUserData),
    v_type_string(F2, [value | Path], TrUserData),
    lists:foreach(fun (key) -> ok;
                      (value) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_KeyValue(M, Path, _TrUserData) when is_map(M) ->
    mk_type_error({missing_fields,
                   [key, value] -- maps:keys(M),
                   'KeyValue'},
                  M,
                  Path);
v_msg_KeyValue(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'KeyValue'}, X, Path).

-compile({nowarn_unused_function,v_msg_KeyLongValue/3}).
-dialyzer({nowarn_function,v_msg_KeyLongValue/3}).
v_msg_KeyLongValue(#{key := F1, value := F2} = M, Path,
                   TrUserData) ->
    v_type_string(F1, [key | Path], TrUserData),
    v_type_uint64(F2, [value | Path], TrUserData),
    lists:foreach(fun (key) -> ok;
                      (value) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_KeyLongValue(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [key, value] -- maps:keys(M),
                   'KeyLongValue'},
                  M,
                  Path);
v_msg_KeyLongValue(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'KeyLongValue'}, X, Path).

-compile({nowarn_unused_function,v_msg_IntRange/3}).
-dialyzer({nowarn_function,v_msg_IntRange/3}).
v_msg_IntRange(#{start := F1, 'end' := F2} = M, Path,
               TrUserData) ->
    v_type_int32(F1, [start | Path], TrUserData),
    v_type_int32(F2, ['end' | Path], TrUserData),
    lists:foreach(fun (start) -> ok;
                      ('end') -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_IntRange(M, Path, _TrUserData) when is_map(M) ->
    mk_type_error({missing_fields,
                   [start, 'end'] -- maps:keys(M),
                   'IntRange'},
                  M,
                  Path);
v_msg_IntRange(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'IntRange'}, X, Path).

-compile({nowarn_unused_function,v_msg_EncryptionKeys/3}).
-dialyzer({nowarn_function,v_msg_EncryptionKeys/3}).
v_msg_EncryptionKeys(#{key := F1, value := F2} = M,
                     Path, TrUserData) ->
    v_type_string(F1, [key | Path], TrUserData),
    v_type_bytes(F2, [value | Path], TrUserData),
    case M of
        #{metadata := F3} ->
            if is_list(F3) ->
                   _ = [v_msg_KeyValue(Elem, [metadata | Path], TrUserData)
                        || Elem <- F3],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'KeyValue'}},
                                 F3,
                                 [metadata | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (key) -> ok;
                      (value) -> ok;
                      (metadata) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_EncryptionKeys(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [key, value] -- maps:keys(M),
                   'EncryptionKeys'},
                  M,
                  Path);
v_msg_EncryptionKeys(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'EncryptionKeys'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_MessageMetadata/3}).
-dialyzer({nowarn_function,v_msg_MessageMetadata/3}).
v_msg_MessageMetadata(#{producer_name := F1,
                        sequence_id := F2, publish_time := F3} =
                          M,
                      Path, TrUserData) ->
    v_type_string(F1, [producer_name | Path], TrUserData),
    v_type_uint64(F2, [sequence_id | Path], TrUserData),
    v_type_uint64(F3, [publish_time | Path], TrUserData),
    case M of
        #{properties := F4} ->
            if is_list(F4) ->
                   _ = [v_msg_KeyValue(Elem,
                                       [properties | Path],
                                       TrUserData)
                        || Elem <- F4],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'KeyValue'}},
                                 F4,
                                 [properties | Path])
            end;
        _ -> ok
    end,
    case M of
        #{replicated_from := F5} ->
            v_type_string(F5, [replicated_from | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{partition_key := F6} ->
            v_type_string(F6, [partition_key | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{replicate_to := F7} ->
            if is_list(F7) ->
                   _ = [v_type_string(Elem,
                                      [replicate_to | Path],
                                      TrUserData)
                        || Elem <- F7],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, string},
                                 F7,
                                 [replicate_to | Path])
            end;
        _ -> ok
    end,
    case M of
        #{compression := F8} ->
            v_enum_CompressionType(F8,
                                   [compression | Path],
                                   TrUserData);
        _ -> ok
    end,
    case M of
        #{uncompressed_size := F9} ->
            v_type_uint32(F9,
                          [uncompressed_size | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{num_messages_in_batch := F10} ->
            v_type_int32(F10,
                         [num_messages_in_batch | Path],
                         TrUserData);
        _ -> ok
    end,
    case M of
        #{event_time := F11} ->
            v_type_uint64(F11, [event_time | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{encryption_keys := F12} ->
            if is_list(F12) ->
                   _ = [v_msg_EncryptionKeys(Elem,
                                             [encryption_keys | Path],
                                             TrUserData)
                        || Elem <- F12],
                   ok;
               true ->
                   mk_type_error({invalid_list_of,
                                  {msg, 'EncryptionKeys'}},
                                 F12,
                                 [encryption_keys | Path])
            end;
        _ -> ok
    end,
    case M of
        #{encryption_algo := F13} ->
            v_type_string(F13,
                          [encryption_algo | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{encryption_param := F14} ->
            v_type_bytes(F14,
                         [encryption_param | Path],
                         TrUserData);
        _ -> ok
    end,
    case M of
        #{schema_version := F15} ->
            v_type_bytes(F15, [schema_version | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{partition_key_b64_encoded := F16} ->
            v_type_bool(F16,
                        [partition_key_b64_encoded | Path],
                        TrUserData);
        _ -> ok
    end,
    case M of
        #{ordering_key := F17} ->
            v_type_bytes(F17, [ordering_key | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{deliver_at_time := F18} ->
            v_type_int64(F18, [deliver_at_time | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{marker_type := F19} ->
            v_type_int32(F19, [marker_type | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_least_bits := F20} ->
            v_type_uint64(F20,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F21} ->
            v_type_uint64(F21,
                          [txnid_most_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{highest_sequence_id := F22} ->
            v_type_uint64(F22,
                          [highest_sequence_id | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{null_value := F23} ->
            v_type_bool(F23, [null_value | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{uuid := F24} ->
            v_type_string(F24, [uuid | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{num_chunks_from_msg := F25} ->
            v_type_int32(F25,
                         [num_chunks_from_msg | Path],
                         TrUserData);
        _ -> ok
    end,
    case M of
        #{total_chunk_msg_size := F26} ->
            v_type_int32(F26,
                         [total_chunk_msg_size | Path],
                         TrUserData);
        _ -> ok
    end,
    case M of
        #{chunk_id := F27} ->
            v_type_int32(F27, [chunk_id | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{null_partition_key := F28} ->
            v_type_bool(F28,
                        [null_partition_key | Path],
                        TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (producer_name) -> ok;
                      (sequence_id) -> ok;
                      (publish_time) -> ok;
                      (properties) -> ok;
                      (replicated_from) -> ok;
                      (partition_key) -> ok;
                      (replicate_to) -> ok;
                      (compression) -> ok;
                      (uncompressed_size) -> ok;
                      (num_messages_in_batch) -> ok;
                      (event_time) -> ok;
                      (encryption_keys) -> ok;
                      (encryption_algo) -> ok;
                      (encryption_param) -> ok;
                      (schema_version) -> ok;
                      (partition_key_b64_encoded) -> ok;
                      (ordering_key) -> ok;
                      (deliver_at_time) -> ok;
                      (marker_type) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (highest_sequence_id) -> ok;
                      (null_value) -> ok;
                      (uuid) -> ok;
                      (num_chunks_from_msg) -> ok;
                      (total_chunk_msg_size) -> ok;
                      (chunk_id) -> ok;
                      (null_partition_key) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_MessageMetadata(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [producer_name, sequence_id, publish_time] --
                       maps:keys(M),
                   'MessageMetadata'},
                  M,
                  Path);
v_msg_MessageMetadata(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'MessageMetadata'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_SingleMessageMetadata/3}).
-dialyzer({nowarn_function,v_msg_SingleMessageMetadata/3}).
v_msg_SingleMessageMetadata(#{payload_size := F3} = M,
                            Path, TrUserData) ->
    case M of
        #{properties := F1} ->
            if is_list(F1) ->
                   _ = [v_msg_KeyValue(Elem,
                                       [properties | Path],
                                       TrUserData)
                        || Elem <- F1],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'KeyValue'}},
                                 F1,
                                 [properties | Path])
            end;
        _ -> ok
    end,
    case M of
        #{partition_key := F2} ->
            v_type_string(F2, [partition_key | Path], TrUserData);
        _ -> ok
    end,
    v_type_int32(F3, [payload_size | Path], TrUserData),
    case M of
        #{compacted_out := F4} ->
            v_type_bool(F4, [compacted_out | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{event_time := F5} ->
            v_type_uint64(F5, [event_time | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{partition_key_b64_encoded := F6} ->
            v_type_bool(F6,
                        [partition_key_b64_encoded | Path],
                        TrUserData);
        _ -> ok
    end,
    case M of
        #{ordering_key := F7} ->
            v_type_bytes(F7, [ordering_key | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{sequence_id := F8} ->
            v_type_uint64(F8, [sequence_id | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{null_value := F9} ->
            v_type_bool(F9, [null_value | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{null_partition_key := F10} ->
            v_type_bool(F10,
                        [null_partition_key | Path],
                        TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (properties) -> ok;
                      (partition_key) -> ok;
                      (payload_size) -> ok;
                      (compacted_out) -> ok;
                      (event_time) -> ok;
                      (partition_key_b64_encoded) -> ok;
                      (ordering_key) -> ok;
                      (sequence_id) -> ok;
                      (null_value) -> ok;
                      (null_partition_key) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_SingleMessageMetadata(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [payload_size] -- maps:keys(M),
                   'SingleMessageMetadata'},
                  M,
                  Path);
v_msg_SingleMessageMetadata(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'SingleMessageMetadata'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandConnect/3}).
-dialyzer({nowarn_function,v_msg_CommandConnect/3}).
v_msg_CommandConnect(#{client_version := F1} = M, Path,
                     TrUserData) ->
    v_type_string(F1, [client_version | Path], TrUserData),
    case M of
        #{auth_method := F2} ->
            v_enum_AuthMethod(F2, [auth_method | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{auth_method_name := F3} ->
            v_type_string(F3,
                          [auth_method_name | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{auth_data := F4} ->
            v_type_bytes(F4, [auth_data | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{protocol_version := F5} ->
            v_type_int32(F5, [protocol_version | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{proxy_to_broker_url := F6} ->
            v_type_string(F6,
                          [proxy_to_broker_url | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{original_principal := F7} ->
            v_type_string(F7,
                          [original_principal | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{original_auth_data := F8} ->
            v_type_string(F8,
                          [original_auth_data | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{original_auth_method := F9} ->
            v_type_string(F9,
                          [original_auth_method | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{feature_flags := F10} ->
            v_msg_FeatureFlags(F10,
                               [feature_flags | Path],
                               TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (client_version) -> ok;
                      (auth_method) -> ok;
                      (auth_method_name) -> ok;
                      (auth_data) -> ok;
                      (protocol_version) -> ok;
                      (proxy_to_broker_url) -> ok;
                      (original_principal) -> ok;
                      (original_auth_data) -> ok;
                      (original_auth_method) -> ok;
                      (feature_flags) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandConnect(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [client_version] -- maps:keys(M),
                   'CommandConnect'},
                  M,
                  Path);
v_msg_CommandConnect(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandConnect'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_FeatureFlags/3}).
-dialyzer({nowarn_function,v_msg_FeatureFlags/3}).
v_msg_FeatureFlags(#{} = M, Path, TrUserData) ->
    case M of
        #{supports_auth_refresh := F1} ->
            v_type_bool(F1,
                        [supports_auth_refresh | Path],
                        TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (supports_auth_refresh) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_FeatureFlags(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [] -- maps:keys(M),
                   'FeatureFlags'},
                  M,
                  Path);
v_msg_FeatureFlags(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'FeatureFlags'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandConnected/3}).
-dialyzer({nowarn_function,v_msg_CommandConnected/3}).
v_msg_CommandConnected(#{server_version := F1} = M,
                       Path, TrUserData) ->
    v_type_string(F1, [server_version | Path], TrUserData),
    case M of
        #{protocol_version := F2} ->
            v_type_int32(F2, [protocol_version | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{max_message_size := F3} ->
            v_type_int32(F3, [max_message_size | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (server_version) -> ok;
                      (protocol_version) -> ok;
                      (max_message_size) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandConnected(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [server_version] -- maps:keys(M),
                   'CommandConnected'},
                  M,
                  Path);
v_msg_CommandConnected(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandConnected'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandAuthResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandAuthResponse/3}).
v_msg_CommandAuthResponse(#{} = M, Path, TrUserData) ->
    case M of
        #{client_version := F1} ->
            v_type_string(F1, [client_version | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{response := F2} ->
            v_msg_AuthData(F2, [response | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{protocol_version := F3} ->
            v_type_int32(F3, [protocol_version | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (client_version) -> ok;
                      (response) -> ok;
                      (protocol_version) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandAuthResponse(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [] -- maps:keys(M),
                   'CommandAuthResponse'},
                  M,
                  Path);
v_msg_CommandAuthResponse(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandAuthResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandAuthChallenge/3}).
-dialyzer({nowarn_function,v_msg_CommandAuthChallenge/3}).
v_msg_CommandAuthChallenge(#{} = M, Path, TrUserData) ->
    case M of
        #{server_version := F1} ->
            v_type_string(F1, [server_version | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{challenge := F2} ->
            v_msg_AuthData(F2, [challenge | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{protocol_version := F3} ->
            v_type_int32(F3, [protocol_version | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (server_version) -> ok;
                      (challenge) -> ok;
                      (protocol_version) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandAuthChallenge(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [] -- maps:keys(M),
                   'CommandAuthChallenge'},
                  M,
                  Path);
v_msg_CommandAuthChallenge(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandAuthChallenge'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_AuthData/3}).
-dialyzer({nowarn_function,v_msg_AuthData/3}).
v_msg_AuthData(#{} = M, Path, TrUserData) ->
    case M of
        #{auth_method_name := F1} ->
            v_type_string(F1,
                          [auth_method_name | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{auth_data := F2} ->
            v_type_bytes(F2, [auth_data | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (auth_method_name) -> ok;
                      (auth_data) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_AuthData(M, Path, _TrUserData) when is_map(M) ->
    mk_type_error({missing_fields,
                   [] -- maps:keys(M),
                   'AuthData'},
                  M,
                  Path);
v_msg_AuthData(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'AuthData'}, X, Path).

-compile({nowarn_unused_function,v_msg_KeySharedMeta/3}).
-dialyzer({nowarn_function,v_msg_KeySharedMeta/3}).
v_msg_KeySharedMeta(#{keySharedMode := F1} = M, Path,
                    TrUserData) ->
    v_enum_KeySharedMode(F1,
                         [keySharedMode | Path],
                         TrUserData),
    case M of
        #{hashRanges := F2} ->
            if is_list(F2) ->
                   _ = [v_msg_IntRange(Elem,
                                       [hashRanges | Path],
                                       TrUserData)
                        || Elem <- F2],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'IntRange'}},
                                 F2,
                                 [hashRanges | Path])
            end;
        _ -> ok
    end,
    case M of
        #{allowOutOfOrderDelivery := F3} ->
            v_type_bool(F3,
                        [allowOutOfOrderDelivery | Path],
                        TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (keySharedMode) -> ok;
                      (hashRanges) -> ok;
                      (allowOutOfOrderDelivery) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_KeySharedMeta(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [keySharedMode] -- maps:keys(M),
                   'KeySharedMeta'},
                  M,
                  Path);
v_msg_KeySharedMeta(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'KeySharedMeta'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandSubscribe/3}).
-dialyzer({nowarn_function,v_msg_CommandSubscribe/3}).
v_msg_CommandSubscribe(#{topic := F1,
                         subscription := F2, subType := F3, consumer_id := F4,
                         request_id := F5} =
                           M,
                       Path, TrUserData) ->
    v_type_string(F1, [topic | Path], TrUserData),
    v_type_string(F2, [subscription | Path], TrUserData),
    'v_enum_CommandSubscribe.SubType'(F3,
                                      [subType | Path],
                                      TrUserData),
    v_type_uint64(F4, [consumer_id | Path], TrUserData),
    v_type_uint64(F5, [request_id | Path], TrUserData),
    case M of
        #{consumer_name := F6} ->
            v_type_string(F6, [consumer_name | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{priority_level := F7} ->
            v_type_int32(F7, [priority_level | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{durable := F8} ->
            v_type_bool(F8, [durable | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{start_message_id := F9} ->
            v_msg_MessageIdData(F9,
                                [start_message_id | Path],
                                TrUserData);
        _ -> ok
    end,
    case M of
        #{metadata := F10} ->
            if is_list(F10) ->
                   _ = [v_msg_KeyValue(Elem, [metadata | Path], TrUserData)
                        || Elem <- F10],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'KeyValue'}},
                                 F10,
                                 [metadata | Path])
            end;
        _ -> ok
    end,
    case M of
        #{read_compacted := F11} ->
            v_type_bool(F11, [read_compacted | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{schema := F12} ->
            v_msg_Schema(F12, [schema | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{initialPosition := F13} ->
            'v_enum_CommandSubscribe.InitialPosition'(F13,
                                                      [initialPosition | Path],
                                                      TrUserData);
        _ -> ok
    end,
    case M of
        #{replicate_subscription_state := F14} ->
            v_type_bool(F14,
                        [replicate_subscription_state | Path],
                        TrUserData);
        _ -> ok
    end,
    case M of
        #{force_topic_creation := F15} ->
            v_type_bool(F15,
                        [force_topic_creation | Path],
                        TrUserData);
        _ -> ok
    end,
    case M of
        #{start_message_rollback_duration_sec := F16} ->
            v_type_uint64(F16,
                          [start_message_rollback_duration_sec | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{keySharedMeta := F17} ->
            v_msg_KeySharedMeta(F17,
                                [keySharedMeta | Path],
                                TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (topic) -> ok;
                      (subscription) -> ok;
                      (subType) -> ok;
                      (consumer_id) -> ok;
                      (request_id) -> ok;
                      (consumer_name) -> ok;
                      (priority_level) -> ok;
                      (durable) -> ok;
                      (start_message_id) -> ok;
                      (metadata) -> ok;
                      (read_compacted) -> ok;
                      (schema) -> ok;
                      (initialPosition) -> ok;
                      (replicate_subscription_state) -> ok;
                      (force_topic_creation) -> ok;
                      (start_message_rollback_duration_sec) -> ok;
                      (keySharedMeta) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandSubscribe(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [topic, subscription, subType, consumer_id, request_id]
                       -- maps:keys(M),
                   'CommandSubscribe'},
                  M,
                  Path);
v_msg_CommandSubscribe(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandSubscribe'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandPartitionedTopicMetadata/3}).
-dialyzer({nowarn_function,v_msg_CommandPartitionedTopicMetadata/3}).
v_msg_CommandPartitionedTopicMetadata(#{topic := F1,
                                        request_id := F2} =
                                          M,
                                      Path, TrUserData) ->
    v_type_string(F1, [topic | Path], TrUserData),
    v_type_uint64(F2, [request_id | Path], TrUserData),
    case M of
        #{original_principal := F3} ->
            v_type_string(F3,
                          [original_principal | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{original_auth_data := F4} ->
            v_type_string(F4,
                          [original_auth_data | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{original_auth_method := F5} ->
            v_type_string(F5,
                          [original_auth_method | Path],
                          TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (topic) -> ok;
                      (request_id) -> ok;
                      (original_principal) -> ok;
                      (original_auth_data) -> ok;
                      (original_auth_method) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandPartitionedTopicMetadata(M, Path,
                                      _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [topic, request_id] -- maps:keys(M),
                   'CommandPartitionedTopicMetadata'},
                  M,
                  Path);
v_msg_CommandPartitionedTopicMetadata(X, Path,
                                      _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandPartitionedTopicMetadata'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandPartitionedTopicMetadataResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandPartitionedTopicMetadataResponse/3}).
v_msg_CommandPartitionedTopicMetadataResponse(#{request_id
                                                    := F2} =
                                                  M,
                                              Path, TrUserData) ->
    case M of
        #{partitions := F1} ->
            v_type_uint32(F1, [partitions | Path], TrUserData);
        _ -> ok
    end,
    v_type_uint64(F2, [request_id | Path], TrUserData),
    case M of
        #{response := F3} ->
            'v_enum_CommandPartitionedTopicMetadataResponse.LookupType'(F3,
                                                                        [response
                                                                         | Path],
                                                                        TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F4} ->
            v_enum_ServerError(F4, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F5} ->
            v_type_string(F5, [message | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (partitions) -> ok;
                      (request_id) -> ok;
                      (response) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandPartitionedTopicMetadataResponse(M, Path,
                                              _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandPartitionedTopicMetadataResponse'},
                  M,
                  Path);
v_msg_CommandPartitionedTopicMetadataResponse(X, Path,
                                              _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandPartitionedTopicMetadataResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandLookupTopic/3}).
-dialyzer({nowarn_function,v_msg_CommandLookupTopic/3}).
v_msg_CommandLookupTopic(#{topic := F1,
                           request_id := F2} =
                             M,
                         Path, TrUserData) ->
    v_type_string(F1, [topic | Path], TrUserData),
    v_type_uint64(F2, [request_id | Path], TrUserData),
    case M of
        #{authoritative := F3} ->
            v_type_bool(F3, [authoritative | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{original_principal := F4} ->
            v_type_string(F4,
                          [original_principal | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{original_auth_data := F5} ->
            v_type_string(F5,
                          [original_auth_data | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{original_auth_method := F6} ->
            v_type_string(F6,
                          [original_auth_method | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{advertised_listener_name := F7} ->
            v_type_string(F7,
                          [advertised_listener_name | Path],
                          TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (topic) -> ok;
                      (request_id) -> ok;
                      (authoritative) -> ok;
                      (original_principal) -> ok;
                      (original_auth_data) -> ok;
                      (original_auth_method) -> ok;
                      (advertised_listener_name) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandLookupTopic(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [topic, request_id] -- maps:keys(M),
                   'CommandLookupTopic'},
                  M,
                  Path);
v_msg_CommandLookupTopic(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandLookupTopic'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandLookupTopicResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandLookupTopicResponse/3}).
v_msg_CommandLookupTopicResponse(#{request_id := F4} =
                                     M,
                                 Path, TrUserData) ->
    case M of
        #{brokerServiceUrl := F1} ->
            v_type_string(F1,
                          [brokerServiceUrl | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{brokerServiceUrlTls := F2} ->
            v_type_string(F2,
                          [brokerServiceUrlTls | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{response := F3} ->
            'v_enum_CommandLookupTopicResponse.LookupType'(F3,
                                                           [response | Path],
                                                           TrUserData);
        _ -> ok
    end,
    v_type_uint64(F4, [request_id | Path], TrUserData),
    case M of
        #{authoritative := F5} ->
            v_type_bool(F5, [authoritative | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F6} ->
            v_enum_ServerError(F6, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F7} ->
            v_type_string(F7, [message | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{proxy_through_service_url := F8} ->
            v_type_bool(F8,
                        [proxy_through_service_url | Path],
                        TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (brokerServiceUrl) -> ok;
                      (brokerServiceUrlTls) -> ok;
                      (response) -> ok;
                      (request_id) -> ok;
                      (authoritative) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (proxy_through_service_url) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandLookupTopicResponse(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandLookupTopicResponse'},
                  M,
                  Path);
v_msg_CommandLookupTopicResponse(X, Path,
                                 _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandLookupTopicResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandProducer/3}).
-dialyzer({nowarn_function,v_msg_CommandProducer/3}).
v_msg_CommandProducer(#{topic := F1, producer_id := F2,
                        request_id := F3} =
                          M,
                      Path, TrUserData) ->
    v_type_string(F1, [topic | Path], TrUserData),
    v_type_uint64(F2, [producer_id | Path], TrUserData),
    v_type_uint64(F3, [request_id | Path], TrUserData),
    case M of
        #{producer_name := F4} ->
            v_type_string(F4, [producer_name | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{encrypted := F5} ->
            v_type_bool(F5, [encrypted | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{metadata := F6} ->
            if is_list(F6) ->
                   _ = [v_msg_KeyValue(Elem, [metadata | Path], TrUserData)
                        || Elem <- F6],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'KeyValue'}},
                                 F6,
                                 [metadata | Path])
            end;
        _ -> ok
    end,
    case M of
        #{schema := F7} ->
            v_msg_Schema(F7, [schema | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{epoch := F8} ->
            v_type_uint64(F8, [epoch | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{user_provided_producer_name := F9} ->
            v_type_bool(F9,
                        [user_provided_producer_name | Path],
                        TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (topic) -> ok;
                      (producer_id) -> ok;
                      (request_id) -> ok;
                      (producer_name) -> ok;
                      (encrypted) -> ok;
                      (metadata) -> ok;
                      (schema) -> ok;
                      (epoch) -> ok;
                      (user_provided_producer_name) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandProducer(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [topic, producer_id, request_id] -- maps:keys(M),
                   'CommandProducer'},
                  M,
                  Path);
v_msg_CommandProducer(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandProducer'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandSend/3}).
-dialyzer({nowarn_function,v_msg_CommandSend/3}).
v_msg_CommandSend(#{producer_id := F1,
                    sequence_id := F2} =
                      M,
                  Path, TrUserData) ->
    v_type_uint64(F1, [producer_id | Path], TrUserData),
    v_type_uint64(F2, [sequence_id | Path], TrUserData),
    case M of
        #{num_messages := F3} ->
            v_type_int32(F3, [num_messages | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_least_bits := F4} ->
            v_type_uint64(F4,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F5} ->
            v_type_uint64(F5, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{highest_sequence_id := F6} ->
            v_type_uint64(F6,
                          [highest_sequence_id | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{is_chunk := F7} ->
            v_type_bool(F7, [is_chunk | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (producer_id) -> ok;
                      (sequence_id) -> ok;
                      (num_messages) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (highest_sequence_id) -> ok;
                      (is_chunk) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandSend(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [producer_id, sequence_id] -- maps:keys(M),
                   'CommandSend'},
                  M,
                  Path);
v_msg_CommandSend(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandSend'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandSendReceipt/3}).
-dialyzer({nowarn_function,v_msg_CommandSendReceipt/3}).
v_msg_CommandSendReceipt(#{producer_id := F1,
                           sequence_id := F2} =
                             M,
                         Path, TrUserData) ->
    v_type_uint64(F1, [producer_id | Path], TrUserData),
    v_type_uint64(F2, [sequence_id | Path], TrUserData),
    case M of
        #{message_id := F3} ->
            v_msg_MessageIdData(F3,
                                [message_id | Path],
                                TrUserData);
        _ -> ok
    end,
    case M of
        #{highest_sequence_id := F4} ->
            v_type_uint64(F4,
                          [highest_sequence_id | Path],
                          TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (producer_id) -> ok;
                      (sequence_id) -> ok;
                      (message_id) -> ok;
                      (highest_sequence_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandSendReceipt(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [producer_id, sequence_id] -- maps:keys(M),
                   'CommandSendReceipt'},
                  M,
                  Path);
v_msg_CommandSendReceipt(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandSendReceipt'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandSendError/3}).
-dialyzer({nowarn_function,v_msg_CommandSendError/3}).
v_msg_CommandSendError(#{producer_id := F1,
                         sequence_id := F2, error := F3, message := F4} =
                           M,
                       Path, TrUserData) ->
    v_type_uint64(F1, [producer_id | Path], TrUserData),
    v_type_uint64(F2, [sequence_id | Path], TrUserData),
    v_enum_ServerError(F3, [error | Path], TrUserData),
    v_type_string(F4, [message | Path], TrUserData),
    lists:foreach(fun (producer_id) -> ok;
                      (sequence_id) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandSendError(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [producer_id, sequence_id, error, message] --
                       maps:keys(M),
                   'CommandSendError'},
                  M,
                  Path);
v_msg_CommandSendError(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandSendError'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandMessage/3}).
-dialyzer({nowarn_function,v_msg_CommandMessage/3}).
v_msg_CommandMessage(#{consumer_id := F1,
                       message_id := F2} =
                         M,
                     Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    v_msg_MessageIdData(F2,
                        [message_id | Path],
                        TrUserData),
    case M of
        #{redelivery_count := F3} ->
            v_type_uint32(F3,
                          [redelivery_count | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{ack_set := F4} ->
            if is_list(F4) ->
                   _ = [v_type_int64(Elem, [ack_set | Path], TrUserData)
                        || Elem <- F4],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, int64},
                                 F4,
                                 [ack_set | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (consumer_id) -> ok;
                      (message_id) -> ok;
                      (redelivery_count) -> ok;
                      (ack_set) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandMessage(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id, message_id] -- maps:keys(M),
                   'CommandMessage'},
                  M,
                  Path);
v_msg_CommandMessage(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandMessage'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandAck/3}).
-dialyzer({nowarn_function,v_msg_CommandAck/3}).
v_msg_CommandAck(#{consumer_id := F1, ack_type := F2} =
                     M,
                 Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    'v_enum_CommandAck.AckType'(F2,
                                [ack_type | Path],
                                TrUserData),
    case M of
        #{message_id := F3} ->
            if is_list(F3) ->
                   _ = [v_msg_MessageIdData(Elem,
                                            [message_id | Path],
                                            TrUserData)
                        || Elem <- F3],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'MessageIdData'}},
                                 F3,
                                 [message_id | Path])
            end;
        _ -> ok
    end,
    case M of
        #{validation_error := F4} ->
            'v_enum_CommandAck.ValidationError'(F4,
                                                [validation_error | Path],
                                                TrUserData);
        _ -> ok
    end,
    case M of
        #{properties := F5} ->
            if is_list(F5) ->
                   _ = [v_msg_KeyLongValue(Elem,
                                           [properties | Path],
                                           TrUserData)
                        || Elem <- F5],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'KeyLongValue'}},
                                 F5,
                                 [properties | Path])
            end;
        _ -> ok
    end,
    case M of
        #{txnid_least_bits := F6} ->
            v_type_uint64(F6,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F7} ->
            v_type_uint64(F7, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{request_id := F8} ->
            v_type_uint64(F8, [request_id | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (consumer_id) -> ok;
                      (ack_type) -> ok;
                      (message_id) -> ok;
                      (validation_error) -> ok;
                      (properties) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (request_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandAck(M, Path, _TrUserData) when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id, ack_type] -- maps:keys(M),
                   'CommandAck'},
                  M,
                  Path);
v_msg_CommandAck(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandAck'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandAckResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandAckResponse/3}).
v_msg_CommandAckResponse(#{consumer_id := F1} = M, Path,
                         TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F4} ->
            v_enum_ServerError(F4, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F5} ->
            v_type_string(F5, [message | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{request_id := F6} ->
            v_type_uint64(F6, [request_id | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (consumer_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (request_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandAckResponse(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id] -- maps:keys(M),
                   'CommandAckResponse'},
                  M,
                  Path);
v_msg_CommandAckResponse(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandAckResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandActiveConsumerChange/3}).
-dialyzer({nowarn_function,v_msg_CommandActiveConsumerChange/3}).
v_msg_CommandActiveConsumerChange(#{consumer_id := F1} =
                                      M,
                                  Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    case M of
        #{is_active := F2} ->
            v_type_bool(F2, [is_active | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (consumer_id) -> ok;
                      (is_active) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandActiveConsumerChange(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id] -- maps:keys(M),
                   'CommandActiveConsumerChange'},
                  M,
                  Path);
v_msg_CommandActiveConsumerChange(X, Path,
                                  _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandActiveConsumerChange'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandFlow/3}).
-dialyzer({nowarn_function,v_msg_CommandFlow/3}).
v_msg_CommandFlow(#{consumer_id := F1,
                    messagePermits := F2} =
                      M,
                  Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    v_type_uint32(F2, [messagePermits | Path], TrUserData),
    lists:foreach(fun (consumer_id) -> ok;
                      (messagePermits) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandFlow(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id, messagePermits] -- maps:keys(M),
                   'CommandFlow'},
                  M,
                  Path);
v_msg_CommandFlow(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandFlow'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandUnsubscribe/3}).
-dialyzer({nowarn_function,v_msg_CommandUnsubscribe/3}).
v_msg_CommandUnsubscribe(#{consumer_id := F1,
                           request_id := F2} =
                             M,
                         Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    v_type_uint64(F2, [request_id | Path], TrUserData),
    lists:foreach(fun (consumer_id) -> ok;
                      (request_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandUnsubscribe(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id, request_id] -- maps:keys(M),
                   'CommandUnsubscribe'},
                  M,
                  Path);
v_msg_CommandUnsubscribe(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandUnsubscribe'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandSeek/3}).
-dialyzer({nowarn_function,v_msg_CommandSeek/3}).
v_msg_CommandSeek(#{consumer_id := F1,
                    request_id := F2} =
                      M,
                  Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    v_type_uint64(F2, [request_id | Path], TrUserData),
    case M of
        #{message_id := F3} ->
            v_msg_MessageIdData(F3,
                                [message_id | Path],
                                TrUserData);
        _ -> ok
    end,
    case M of
        #{message_publish_time := F4} ->
            v_type_uint64(F4,
                          [message_publish_time | Path],
                          TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (consumer_id) -> ok;
                      (request_id) -> ok;
                      (message_id) -> ok;
                      (message_publish_time) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandSeek(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id, request_id] -- maps:keys(M),
                   'CommandSeek'},
                  M,
                  Path);
v_msg_CommandSeek(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandSeek'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandReachedEndOfTopic/3}).
-dialyzer({nowarn_function,v_msg_CommandReachedEndOfTopic/3}).
v_msg_CommandReachedEndOfTopic(#{consumer_id := F1} = M,
                               Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    lists:foreach(fun (consumer_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandReachedEndOfTopic(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id] -- maps:keys(M),
                   'CommandReachedEndOfTopic'},
                  M,
                  Path);
v_msg_CommandReachedEndOfTopic(X, Path, _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandReachedEndOfTopic'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandCloseProducer/3}).
-dialyzer({nowarn_function,v_msg_CommandCloseProducer/3}).
v_msg_CommandCloseProducer(#{producer_id := F1,
                             request_id := F2} =
                               M,
                           Path, TrUserData) ->
    v_type_uint64(F1, [producer_id | Path], TrUserData),
    v_type_uint64(F2, [request_id | Path], TrUserData),
    lists:foreach(fun (producer_id) -> ok;
                      (request_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandCloseProducer(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [producer_id, request_id] -- maps:keys(M),
                   'CommandCloseProducer'},
                  M,
                  Path);
v_msg_CommandCloseProducer(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandCloseProducer'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandCloseConsumer/3}).
-dialyzer({nowarn_function,v_msg_CommandCloseConsumer/3}).
v_msg_CommandCloseConsumer(#{consumer_id := F1,
                             request_id := F2} =
                               M,
                           Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    v_type_uint64(F2, [request_id | Path], TrUserData),
    lists:foreach(fun (consumer_id) -> ok;
                      (request_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandCloseConsumer(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id, request_id] -- maps:keys(M),
                   'CommandCloseConsumer'},
                  M,
                  Path);
v_msg_CommandCloseConsumer(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandCloseConsumer'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandRedeliverUnacknowledgedMessages/3}).
-dialyzer({nowarn_function,v_msg_CommandRedeliverUnacknowledgedMessages/3}).
v_msg_CommandRedeliverUnacknowledgedMessages(#{consumer_id
                                                   := F1} =
                                                 M,
                                             Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    case M of
        #{message_ids := F2} ->
            if is_list(F2) ->
                   _ = [v_msg_MessageIdData(Elem,
                                            [message_ids | Path],
                                            TrUserData)
                        || Elem <- F2],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'MessageIdData'}},
                                 F2,
                                 [message_ids | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (consumer_id) -> ok;
                      (message_ids) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandRedeliverUnacknowledgedMessages(M, Path,
                                             _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id] -- maps:keys(M),
                   'CommandRedeliverUnacknowledgedMessages'},
                  M,
                  Path);
v_msg_CommandRedeliverUnacknowledgedMessages(X, Path,
                                             _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandRedeliverUnacknowledgedMessages'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandSuccess/3}).
-dialyzer({nowarn_function,v_msg_CommandSuccess/3}).
v_msg_CommandSuccess(#{request_id := F1} = M, Path,
                     TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{schema := F2} ->
            v_msg_Schema(F2, [schema | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (schema) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandSuccess(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandSuccess'},
                  M,
                  Path);
v_msg_CommandSuccess(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandSuccess'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandProducerSuccess/3}).
-dialyzer({nowarn_function,v_msg_CommandProducerSuccess/3}).
v_msg_CommandProducerSuccess(#{request_id := F1,
                               producer_name := F2} =
                                 M,
                             Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    v_type_string(F2, [producer_name | Path], TrUserData),
    case M of
        #{last_sequence_id := F3} ->
            v_type_int64(F3, [last_sequence_id | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{schema_version := F4} ->
            v_type_bytes(F4, [schema_version | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (producer_name) -> ok;
                      (last_sequence_id) -> ok;
                      (schema_version) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandProducerSuccess(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id, producer_name] -- maps:keys(M),
                   'CommandProducerSuccess'},
                  M,
                  Path);
v_msg_CommandProducerSuccess(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandProducerSuccess'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandError/3}).
-dialyzer({nowarn_function,v_msg_CommandError/3}).
v_msg_CommandError(#{request_id := F1, error := F2,
                     message := F3} =
                       M,
                   Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    v_enum_ServerError(F2, [error | Path], TrUserData),
    v_type_string(F3, [message | Path], TrUserData),
    lists:foreach(fun (request_id) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandError(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id, error, message] -- maps:keys(M),
                   'CommandError'},
                  M,
                  Path);
v_msg_CommandError(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandError'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandPing/3}).
-dialyzer({nowarn_function,v_msg_CommandPing/3}).
v_msg_CommandPing(#{} = M, Path, _) ->
    lists:foreach(fun (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandPing(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [] -- maps:keys(M),
                   'CommandPing'},
                  M,
                  Path);
v_msg_CommandPing(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandPing'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandPong/3}).
-dialyzer({nowarn_function,v_msg_CommandPong/3}).
v_msg_CommandPong(#{} = M, Path, _) ->
    lists:foreach(fun (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandPong(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [] -- maps:keys(M),
                   'CommandPong'},
                  M,
                  Path);
v_msg_CommandPong(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandPong'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandConsumerStats/3}).
-dialyzer({nowarn_function,v_msg_CommandConsumerStats/3}).
v_msg_CommandConsumerStats(#{request_id := F1,
                             consumer_id := F2} =
                               M,
                           Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    v_type_uint64(F2, [consumer_id | Path], TrUserData),
    lists:foreach(fun (request_id) -> ok;
                      (consumer_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandConsumerStats(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id, consumer_id] -- maps:keys(M),
                   'CommandConsumerStats'},
                  M,
                  Path);
v_msg_CommandConsumerStats(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandConsumerStats'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandConsumerStatsResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandConsumerStatsResponse/3}).
v_msg_CommandConsumerStatsResponse(#{request_id := F1} =
                                       M,
                                   Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{error_code := F2} ->
            v_enum_ServerError(F2, [error_code | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error_message := F3} ->
            v_type_string(F3, [error_message | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{msgRateOut := F4} ->
            v_type_double(F4, [msgRateOut | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{msgThroughputOut := F5} ->
            v_type_double(F5,
                          [msgThroughputOut | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{msgRateRedeliver := F6} ->
            v_type_double(F6,
                          [msgRateRedeliver | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{consumerName := F7} ->
            v_type_string(F7, [consumerName | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{availablePermits := F8} ->
            v_type_uint64(F8,
                          [availablePermits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{unackedMessages := F9} ->
            v_type_uint64(F9, [unackedMessages | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{blockedConsumerOnUnackedMsgs := F10} ->
            v_type_bool(F10,
                        [blockedConsumerOnUnackedMsgs | Path],
                        TrUserData);
        _ -> ok
    end,
    case M of
        #{address := F11} ->
            v_type_string(F11, [address | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{connectedSince := F12} ->
            v_type_string(F12, [connectedSince | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{type := F13} ->
            v_type_string(F13, [type | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{msgRateExpired := F14} ->
            v_type_double(F14, [msgRateExpired | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{msgBacklog := F15} ->
            v_type_uint64(F15, [msgBacklog | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (error_code) -> ok;
                      (error_message) -> ok;
                      (msgRateOut) -> ok;
                      (msgThroughputOut) -> ok;
                      (msgRateRedeliver) -> ok;
                      (consumerName) -> ok;
                      (availablePermits) -> ok;
                      (unackedMessages) -> ok;
                      (blockedConsumerOnUnackedMsgs) -> ok;
                      (address) -> ok;
                      (connectedSince) -> ok;
                      (type) -> ok;
                      (msgRateExpired) -> ok;
                      (msgBacklog) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandConsumerStatsResponse(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandConsumerStatsResponse'},
                  M,
                  Path);
v_msg_CommandConsumerStatsResponse(X, Path,
                                   _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandConsumerStatsResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandGetLastMessageId/3}).
-dialyzer({nowarn_function,v_msg_CommandGetLastMessageId/3}).
v_msg_CommandGetLastMessageId(#{consumer_id := F1,
                                request_id := F2} =
                                  M,
                              Path, TrUserData) ->
    v_type_uint64(F1, [consumer_id | Path], TrUserData),
    v_type_uint64(F2, [request_id | Path], TrUserData),
    lists:foreach(fun (consumer_id) -> ok;
                      (request_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandGetLastMessageId(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [consumer_id, request_id] -- maps:keys(M),
                   'CommandGetLastMessageId'},
                  M,
                  Path);
v_msg_CommandGetLastMessageId(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandGetLastMessageId'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandGetLastMessageIdResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandGetLastMessageIdResponse/3}).
v_msg_CommandGetLastMessageIdResponse(#{last_message_id
                                            := F1,
                                        request_id := F2} =
                                          M,
                                      Path, TrUserData) ->
    v_msg_MessageIdData(F1,
                        [last_message_id | Path],
                        TrUserData),
    v_type_uint64(F2, [request_id | Path], TrUserData),
    case M of
        #{consumer_mark_delete_position := F3} ->
            v_msg_MessageIdData(F3,
                                [consumer_mark_delete_position | Path],
                                TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (last_message_id) -> ok;
                      (request_id) -> ok;
                      (consumer_mark_delete_position) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandGetLastMessageIdResponse(M, Path,
                                      _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [last_message_id, request_id] -- maps:keys(M),
                   'CommandGetLastMessageIdResponse'},
                  M,
                  Path);
v_msg_CommandGetLastMessageIdResponse(X, Path,
                                      _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandGetLastMessageIdResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandGetTopicsOfNamespace/3}).
-dialyzer({nowarn_function,v_msg_CommandGetTopicsOfNamespace/3}).
v_msg_CommandGetTopicsOfNamespace(#{request_id := F1,
                                    namespace := F2} =
                                      M,
                                  Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    v_type_string(F2, [namespace | Path], TrUserData),
    case M of
        #{mode := F3} ->
            'v_enum_CommandGetTopicsOfNamespace.Mode'(F3,
                                                      [mode | Path],
                                                      TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (namespace) -> ok;
                      (mode) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandGetTopicsOfNamespace(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id, namespace] -- maps:keys(M),
                   'CommandGetTopicsOfNamespace'},
                  M,
                  Path);
v_msg_CommandGetTopicsOfNamespace(X, Path,
                                  _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandGetTopicsOfNamespace'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandGetTopicsOfNamespaceResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandGetTopicsOfNamespaceResponse/3}).
v_msg_CommandGetTopicsOfNamespaceResponse(#{request_id
                                                := F1} =
                                              M,
                                          Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{topics := F2} ->
            if is_list(F2) ->
                   _ = [v_type_string(Elem, [topics | Path], TrUserData)
                        || Elem <- F2],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, string},
                                 F2,
                                 [topics | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (topics) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandGetTopicsOfNamespaceResponse(M, Path,
                                          _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandGetTopicsOfNamespaceResponse'},
                  M,
                  Path);
v_msg_CommandGetTopicsOfNamespaceResponse(X, Path,
                                          _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandGetTopicsOfNamespaceResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandGetSchema/3}).
-dialyzer({nowarn_function,v_msg_CommandGetSchema/3}).
v_msg_CommandGetSchema(#{request_id := F1,
                         topic := F2} =
                           M,
                       Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    v_type_string(F2, [topic | Path], TrUserData),
    case M of
        #{schema_version := F3} ->
            v_type_bytes(F3, [schema_version | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (topic) -> ok;
                      (schema_version) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandGetSchema(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id, topic] -- maps:keys(M),
                   'CommandGetSchema'},
                  M,
                  Path);
v_msg_CommandGetSchema(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandGetSchema'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandGetSchemaResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandGetSchemaResponse/3}).
v_msg_CommandGetSchemaResponse(#{request_id := F1} = M,
                               Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{error_code := F2} ->
            v_enum_ServerError(F2, [error_code | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error_message := F3} ->
            v_type_string(F3, [error_message | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{schema := F4} ->
            v_msg_Schema(F4, [schema | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{schema_version := F5} ->
            v_type_bytes(F5, [schema_version | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (error_code) -> ok;
                      (error_message) -> ok;
                      (schema) -> ok;
                      (schema_version) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandGetSchemaResponse(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandGetSchemaResponse'},
                  M,
                  Path);
v_msg_CommandGetSchemaResponse(X, Path, _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandGetSchemaResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandGetOrCreateSchema/3}).
-dialyzer({nowarn_function,v_msg_CommandGetOrCreateSchema/3}).
v_msg_CommandGetOrCreateSchema(#{request_id := F1,
                                 topic := F2, schema := F3} =
                                   M,
                               Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    v_type_string(F2, [topic | Path], TrUserData),
    v_msg_Schema(F3, [schema | Path], TrUserData),
    lists:foreach(fun (request_id) -> ok;
                      (topic) -> ok;
                      (schema) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandGetOrCreateSchema(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id, topic, schema] -- maps:keys(M),
                   'CommandGetOrCreateSchema'},
                  M,
                  Path);
v_msg_CommandGetOrCreateSchema(X, Path, _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandGetOrCreateSchema'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandGetOrCreateSchemaResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandGetOrCreateSchemaResponse/3}).
v_msg_CommandGetOrCreateSchemaResponse(#{request_id :=
                                             F1} =
                                           M,
                                       Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{error_code := F2} ->
            v_enum_ServerError(F2, [error_code | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error_message := F3} ->
            v_type_string(F3, [error_message | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{schema_version := F4} ->
            v_type_bytes(F4, [schema_version | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (error_code) -> ok;
                      (error_message) -> ok;
                      (schema_version) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandGetOrCreateSchemaResponse(M, Path,
                                       _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandGetOrCreateSchemaResponse'},
                  M,
                  Path);
v_msg_CommandGetOrCreateSchemaResponse(X, Path,
                                       _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandGetOrCreateSchemaResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandNewTxn/3}).
-dialyzer({nowarn_function,v_msg_CommandNewTxn/3}).
v_msg_CommandNewTxn(#{request_id := F1} = M, Path,
                    TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txn_ttl_seconds := F2} ->
            v_type_uint64(F2, [txn_ttl_seconds | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{tc_id := F3} ->
            v_type_uint64(F3, [tc_id | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txn_ttl_seconds) -> ok;
                      (tc_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandNewTxn(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandNewTxn'},
                  M,
                  Path);
v_msg_CommandNewTxn(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandNewTxn'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandNewTxnResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandNewTxnResponse/3}).
v_msg_CommandNewTxnResponse(#{request_id := F1} = M,
                            Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F4} ->
            v_enum_ServerError(F4, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F5} ->
            v_type_string(F5, [message | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandNewTxnResponse(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandNewTxnResponse'},
                  M,
                  Path);
v_msg_CommandNewTxnResponse(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandNewTxnResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandAddPartitionToTxn/3}).
-dialyzer({nowarn_function,v_msg_CommandAddPartitionToTxn/3}).
v_msg_CommandAddPartitionToTxn(#{request_id := F1} = M,
                               Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{partitions := F4} ->
            if is_list(F4) ->
                   _ = [v_type_string(Elem,
                                      [partitions | Path],
                                      TrUserData)
                        || Elem <- F4],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, string},
                                 F4,
                                 [partitions | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (partitions) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandAddPartitionToTxn(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandAddPartitionToTxn'},
                  M,
                  Path);
v_msg_CommandAddPartitionToTxn(X, Path, _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandAddPartitionToTxn'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandAddPartitionToTxnResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandAddPartitionToTxnResponse/3}).
v_msg_CommandAddPartitionToTxnResponse(#{request_id :=
                                             F1} =
                                           M,
                                       Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F4} ->
            v_enum_ServerError(F4, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F5} ->
            v_type_string(F5, [message | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandAddPartitionToTxnResponse(M, Path,
                                       _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandAddPartitionToTxnResponse'},
                  M,
                  Path);
v_msg_CommandAddPartitionToTxnResponse(X, Path,
                                       _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandAddPartitionToTxnResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_Subscription/3}).
-dialyzer({nowarn_function,v_msg_Subscription/3}).
v_msg_Subscription(#{topic := F1, subscription := F2} =
                       M,
                   Path, TrUserData) ->
    v_type_string(F1, [topic | Path], TrUserData),
    v_type_string(F2, [subscription | Path], TrUserData),
    lists:foreach(fun (topic) -> ok;
                      (subscription) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_Subscription(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [topic, subscription] -- maps:keys(M),
                   'Subscription'},
                  M,
                  Path);
v_msg_Subscription(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'Subscription'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandAddSubscriptionToTxn/3}).
-dialyzer({nowarn_function,v_msg_CommandAddSubscriptionToTxn/3}).
v_msg_CommandAddSubscriptionToTxn(#{request_id := F1} =
                                      M,
                                  Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{subscription := F4} ->
            if is_list(F4) ->
                   _ = [v_msg_Subscription(Elem,
                                           [subscription | Path],
                                           TrUserData)
                        || Elem <- F4],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'Subscription'}},
                                 F4,
                                 [subscription | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (subscription) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandAddSubscriptionToTxn(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandAddSubscriptionToTxn'},
                  M,
                  Path);
v_msg_CommandAddSubscriptionToTxn(X, Path,
                                  _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandAddSubscriptionToTxn'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandAddSubscriptionToTxnResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandAddSubscriptionToTxnResponse/3}).
v_msg_CommandAddSubscriptionToTxnResponse(#{request_id
                                                := F1} =
                                              M,
                                          Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F4} ->
            v_enum_ServerError(F4, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F5} ->
            v_type_string(F5, [message | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandAddSubscriptionToTxnResponse(M, Path,
                                          _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandAddSubscriptionToTxnResponse'},
                  M,
                  Path);
v_msg_CommandAddSubscriptionToTxnResponse(X, Path,
                                          _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandAddSubscriptionToTxnResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandEndTxn/3}).
-dialyzer({nowarn_function,v_msg_CommandEndTxn/3}).
v_msg_CommandEndTxn(#{request_id := F1} = M, Path,
                    TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{txn_action := F4} ->
            v_enum_TxnAction(F4, [txn_action | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message_id := F5} ->
            if is_list(F5) ->
                   _ = [v_msg_MessageIdData(Elem,
                                            [message_id | Path],
                                            TrUserData)
                        || Elem <- F5],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'MessageIdData'}},
                                 F5,
                                 [message_id | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (txn_action) -> ok;
                      (message_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandEndTxn(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandEndTxn'},
                  M,
                  Path);
v_msg_CommandEndTxn(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandEndTxn'}, X, Path).

-compile({nowarn_unused_function,v_msg_CommandEndTxnResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandEndTxnResponse/3}).
v_msg_CommandEndTxnResponse(#{request_id := F1} = M,
                            Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F4} ->
            v_enum_ServerError(F4, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F5} ->
            v_type_string(F5, [message | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandEndTxnResponse(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandEndTxnResponse'},
                  M,
                  Path);
v_msg_CommandEndTxnResponse(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'CommandEndTxnResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandEndTxnOnPartition/3}).
-dialyzer({nowarn_function,v_msg_CommandEndTxnOnPartition/3}).
v_msg_CommandEndTxnOnPartition(#{request_id := F1} = M,
                               Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{topic := F4} ->
            v_type_string(F4, [topic | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{txn_action := F5} ->
            v_enum_TxnAction(F5, [txn_action | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message_id := F6} ->
            if is_list(F6) ->
                   _ = [v_msg_MessageIdData(Elem,
                                            [message_id | Path],
                                            TrUserData)
                        || Elem <- F6],
                   ok;
               true ->
                   mk_type_error({invalid_list_of, {msg, 'MessageIdData'}},
                                 F6,
                                 [message_id | Path])
            end;
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (topic) -> ok;
                      (txn_action) -> ok;
                      (message_id) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandEndTxnOnPartition(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandEndTxnOnPartition'},
                  M,
                  Path);
v_msg_CommandEndTxnOnPartition(X, Path, _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandEndTxnOnPartition'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandEndTxnOnPartitionResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandEndTxnOnPartitionResponse/3}).
v_msg_CommandEndTxnOnPartitionResponse(#{request_id :=
                                             F1} =
                                           M,
                                       Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F4} ->
            v_enum_ServerError(F4, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F5} ->
            v_type_string(F5, [message | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandEndTxnOnPartitionResponse(M, Path,
                                       _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandEndTxnOnPartitionResponse'},
                  M,
                  Path);
v_msg_CommandEndTxnOnPartitionResponse(X, Path,
                                       _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandEndTxnOnPartitionResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandEndTxnOnSubscription/3}).
-dialyzer({nowarn_function,v_msg_CommandEndTxnOnSubscription/3}).
v_msg_CommandEndTxnOnSubscription(#{request_id := F1} =
                                      M,
                                  Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{subscription := F4} ->
            v_msg_Subscription(F4,
                               [subscription | Path],
                               TrUserData);
        _ -> ok
    end,
    case M of
        #{txn_action := F5} ->
            v_enum_TxnAction(F5, [txn_action | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (subscription) -> ok;
                      (txn_action) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandEndTxnOnSubscription(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandEndTxnOnSubscription'},
                  M,
                  Path);
v_msg_CommandEndTxnOnSubscription(X, Path,
                                  _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandEndTxnOnSubscription'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_CommandEndTxnOnSubscriptionResponse/3}).
-dialyzer({nowarn_function,v_msg_CommandEndTxnOnSubscriptionResponse/3}).
v_msg_CommandEndTxnOnSubscriptionResponse(#{request_id
                                                := F1} =
                                              M,
                                          Path, TrUserData) ->
    v_type_uint64(F1, [request_id | Path], TrUserData),
    case M of
        #{txnid_least_bits := F2} ->
            v_type_uint64(F2,
                          [txnid_least_bits | Path],
                          TrUserData);
        _ -> ok
    end,
    case M of
        #{txnid_most_bits := F3} ->
            v_type_uint64(F3, [txnid_most_bits | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F4} ->
            v_enum_ServerError(F4, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F5} ->
            v_type_string(F5, [message | Path], TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (request_id) -> ok;
                      (txnid_least_bits) -> ok;
                      (txnid_most_bits) -> ok;
                      (error) -> ok;
                      (message) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_CommandEndTxnOnSubscriptionResponse(M, Path,
                                          _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [request_id] -- maps:keys(M),
                   'CommandEndTxnOnSubscriptionResponse'},
                  M,
                  Path);
v_msg_CommandEndTxnOnSubscriptionResponse(X, Path,
                                          _TrUserData) ->
    mk_type_error({expected_msg,
                   'CommandEndTxnOnSubscriptionResponse'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_msg_BaseCommand/3}).
-dialyzer({nowarn_function,v_msg_BaseCommand/3}).
v_msg_BaseCommand(#{type := F1} = M, Path,
                  TrUserData) ->
    'v_enum_BaseCommand.Type'(F1,
                              [type | Path],
                              TrUserData),
    case M of
        #{connect := F2} ->
            v_msg_CommandConnect(F2, [connect | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{connected := F3} ->
            v_msg_CommandConnected(F3,
                                   [connected | Path],
                                   TrUserData);
        _ -> ok
    end,
    case M of
        #{subscribe := F4} ->
            v_msg_CommandSubscribe(F4,
                                   [subscribe | Path],
                                   TrUserData);
        _ -> ok
    end,
    case M of
        #{producer := F5} ->
            v_msg_CommandProducer(F5,
                                  [producer | Path],
                                  TrUserData);
        _ -> ok
    end,
    case M of
        #{send := F6} ->
            v_msg_CommandSend(F6, [send | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{send_receipt := F7} ->
            v_msg_CommandSendReceipt(F7,
                                     [send_receipt | Path],
                                     TrUserData);
        _ -> ok
    end,
    case M of
        #{send_error := F8} ->
            v_msg_CommandSendError(F8,
                                   [send_error | Path],
                                   TrUserData);
        _ -> ok
    end,
    case M of
        #{message := F9} ->
            v_msg_CommandMessage(F9, [message | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{ack := F10} ->
            v_msg_CommandAck(F10, [ack | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{flow := F11} ->
            v_msg_CommandFlow(F11, [flow | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{unsubscribe := F12} ->
            v_msg_CommandUnsubscribe(F12,
                                     [unsubscribe | Path],
                                     TrUserData);
        _ -> ok
    end,
    case M of
        #{success := F13} ->
            v_msg_CommandSuccess(F13, [success | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{error := F14} ->
            v_msg_CommandError(F14, [error | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{close_producer := F15} ->
            v_msg_CommandCloseProducer(F15,
                                       [close_producer | Path],
                                       TrUserData);
        _ -> ok
    end,
    case M of
        #{close_consumer := F16} ->
            v_msg_CommandCloseConsumer(F16,
                                       [close_consumer | Path],
                                       TrUserData);
        _ -> ok
    end,
    case M of
        #{producer_success := F17} ->
            v_msg_CommandProducerSuccess(F17,
                                         [producer_success | Path],
                                         TrUserData);
        _ -> ok
    end,
    case M of
        #{ping := F18} ->
            v_msg_CommandPing(F18, [ping | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{pong := F19} ->
            v_msg_CommandPong(F19, [pong | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{redeliverUnacknowledgedMessages := F20} ->
            v_msg_CommandRedeliverUnacknowledgedMessages(F20,
                                                         [redeliverUnacknowledgedMessages
                                                          | Path],
                                                         TrUserData);
        _ -> ok
    end,
    case M of
        #{partitionMetadata := F21} ->
            v_msg_CommandPartitionedTopicMetadata(F21,
                                                  [partitionMetadata | Path],
                                                  TrUserData);
        _ -> ok
    end,
    case M of
        #{partitionMetadataResponse := F22} ->
            v_msg_CommandPartitionedTopicMetadataResponse(F22,
                                                          [partitionMetadataResponse
                                                           | Path],
                                                          TrUserData);
        _ -> ok
    end,
    case M of
        #{lookupTopic := F23} ->
            v_msg_CommandLookupTopic(F23,
                                     [lookupTopic | Path],
                                     TrUserData);
        _ -> ok
    end,
    case M of
        #{lookupTopicResponse := F24} ->
            v_msg_CommandLookupTopicResponse(F24,
                                             [lookupTopicResponse | Path],
                                             TrUserData);
        _ -> ok
    end,
    case M of
        #{consumerStats := F25} ->
            v_msg_CommandConsumerStats(F25,
                                       [consumerStats | Path],
                                       TrUserData);
        _ -> ok
    end,
    case M of
        #{consumerStatsResponse := F26} ->
            v_msg_CommandConsumerStatsResponse(F26,
                                               [consumerStatsResponse | Path],
                                               TrUserData);
        _ -> ok
    end,
    case M of
        #{reachedEndOfTopic := F27} ->
            v_msg_CommandReachedEndOfTopic(F27,
                                           [reachedEndOfTopic | Path],
                                           TrUserData);
        _ -> ok
    end,
    case M of
        #{seek := F28} ->
            v_msg_CommandSeek(F28, [seek | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{getLastMessageId := F29} ->
            v_msg_CommandGetLastMessageId(F29,
                                          [getLastMessageId | Path],
                                          TrUserData);
        _ -> ok
    end,
    case M of
        #{getLastMessageIdResponse := F30} ->
            v_msg_CommandGetLastMessageIdResponse(F30,
                                                  [getLastMessageIdResponse
                                                   | Path],
                                                  TrUserData);
        _ -> ok
    end,
    case M of
        #{active_consumer_change := F31} ->
            v_msg_CommandActiveConsumerChange(F31,
                                              [active_consumer_change | Path],
                                              TrUserData);
        _ -> ok
    end,
    case M of
        #{getTopicsOfNamespace := F32} ->
            v_msg_CommandGetTopicsOfNamespace(F32,
                                              [getTopicsOfNamespace | Path],
                                              TrUserData);
        _ -> ok
    end,
    case M of
        #{getTopicsOfNamespaceResponse := F33} ->
            v_msg_CommandGetTopicsOfNamespaceResponse(F33,
                                                      [getTopicsOfNamespaceResponse
                                                       | Path],
                                                      TrUserData);
        _ -> ok
    end,
    case M of
        #{getSchema := F34} ->
            v_msg_CommandGetSchema(F34,
                                   [getSchema | Path],
                                   TrUserData);
        _ -> ok
    end,
    case M of
        #{getSchemaResponse := F35} ->
            v_msg_CommandGetSchemaResponse(F35,
                                           [getSchemaResponse | Path],
                                           TrUserData);
        _ -> ok
    end,
    case M of
        #{authChallenge := F36} ->
            v_msg_CommandAuthChallenge(F36,
                                       [authChallenge | Path],
                                       TrUserData);
        _ -> ok
    end,
    case M of
        #{authResponse := F37} ->
            v_msg_CommandAuthResponse(F37,
                                      [authResponse | Path],
                                      TrUserData);
        _ -> ok
    end,
    case M of
        #{ackResponse := F38} ->
            v_msg_CommandAckResponse(F38,
                                     [ackResponse | Path],
                                     TrUserData);
        _ -> ok
    end,
    case M of
        #{getOrCreateSchema := F39} ->
            v_msg_CommandGetOrCreateSchema(F39,
                                           [getOrCreateSchema | Path],
                                           TrUserData);
        _ -> ok
    end,
    case M of
        #{getOrCreateSchemaResponse := F40} ->
            v_msg_CommandGetOrCreateSchemaResponse(F40,
                                                   [getOrCreateSchemaResponse
                                                    | Path],
                                                   TrUserData);
        _ -> ok
    end,
    case M of
        #{newTxn := F41} ->
            v_msg_CommandNewTxn(F41, [newTxn | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{newTxnResponse := F42} ->
            v_msg_CommandNewTxnResponse(F42,
                                        [newTxnResponse | Path],
                                        TrUserData);
        _ -> ok
    end,
    case M of
        #{addPartitionToTxn := F43} ->
            v_msg_CommandAddPartitionToTxn(F43,
                                           [addPartitionToTxn | Path],
                                           TrUserData);
        _ -> ok
    end,
    case M of
        #{addPartitionToTxnResponse := F44} ->
            v_msg_CommandAddPartitionToTxnResponse(F44,
                                                   [addPartitionToTxnResponse
                                                    | Path],
                                                   TrUserData);
        _ -> ok
    end,
    case M of
        #{addSubscriptionToTxn := F45} ->
            v_msg_CommandAddSubscriptionToTxn(F45,
                                              [addSubscriptionToTxn | Path],
                                              TrUserData);
        _ -> ok
    end,
    case M of
        #{addSubscriptionToTxnResponse := F46} ->
            v_msg_CommandAddSubscriptionToTxnResponse(F46,
                                                      [addSubscriptionToTxnResponse
                                                       | Path],
                                                      TrUserData);
        _ -> ok
    end,
    case M of
        #{endTxn := F47} ->
            v_msg_CommandEndTxn(F47, [endTxn | Path], TrUserData);
        _ -> ok
    end,
    case M of
        #{endTxnResponse := F48} ->
            v_msg_CommandEndTxnResponse(F48,
                                        [endTxnResponse | Path],
                                        TrUserData);
        _ -> ok
    end,
    case M of
        #{endTxnOnPartition := F49} ->
            v_msg_CommandEndTxnOnPartition(F49,
                                           [endTxnOnPartition | Path],
                                           TrUserData);
        _ -> ok
    end,
    case M of
        #{endTxnOnPartitionResponse := F50} ->
            v_msg_CommandEndTxnOnPartitionResponse(F50,
                                                   [endTxnOnPartitionResponse
                                                    | Path],
                                                   TrUserData);
        _ -> ok
    end,
    case M of
        #{endTxnOnSubscription := F51} ->
            v_msg_CommandEndTxnOnSubscription(F51,
                                              [endTxnOnSubscription | Path],
                                              TrUserData);
        _ -> ok
    end,
    case M of
        #{endTxnOnSubscriptionResponse := F52} ->
            v_msg_CommandEndTxnOnSubscriptionResponse(F52,
                                                      [endTxnOnSubscriptionResponse
                                                       | Path],
                                                      TrUserData);
        _ -> ok
    end,
    lists:foreach(fun (type) -> ok;
                      (connect) -> ok;
                      (connected) -> ok;
                      (subscribe) -> ok;
                      (producer) -> ok;
                      (send) -> ok;
                      (send_receipt) -> ok;
                      (send_error) -> ok;
                      (message) -> ok;
                      (ack) -> ok;
                      (flow) -> ok;
                      (unsubscribe) -> ok;
                      (success) -> ok;
                      (error) -> ok;
                      (close_producer) -> ok;
                      (close_consumer) -> ok;
                      (producer_success) -> ok;
                      (ping) -> ok;
                      (pong) -> ok;
                      (redeliverUnacknowledgedMessages) -> ok;
                      (partitionMetadata) -> ok;
                      (partitionMetadataResponse) -> ok;
                      (lookupTopic) -> ok;
                      (lookupTopicResponse) -> ok;
                      (consumerStats) -> ok;
                      (consumerStatsResponse) -> ok;
                      (reachedEndOfTopic) -> ok;
                      (seek) -> ok;
                      (getLastMessageId) -> ok;
                      (getLastMessageIdResponse) -> ok;
                      (active_consumer_change) -> ok;
                      (getTopicsOfNamespace) -> ok;
                      (getTopicsOfNamespaceResponse) -> ok;
                      (getSchema) -> ok;
                      (getSchemaResponse) -> ok;
                      (authChallenge) -> ok;
                      (authResponse) -> ok;
                      (ackResponse) -> ok;
                      (getOrCreateSchema) -> ok;
                      (getOrCreateSchemaResponse) -> ok;
                      (newTxn) -> ok;
                      (newTxnResponse) -> ok;
                      (addPartitionToTxn) -> ok;
                      (addPartitionToTxnResponse) -> ok;
                      (addSubscriptionToTxn) -> ok;
                      (addSubscriptionToTxnResponse) -> ok;
                      (endTxn) -> ok;
                      (endTxnResponse) -> ok;
                      (endTxnOnPartition) -> ok;
                      (endTxnOnPartitionResponse) -> ok;
                      (endTxnOnSubscription) -> ok;
                      (endTxnOnSubscriptionResponse) -> ok;
                      (OtherKey) ->
                          mk_type_error({extraneous_key, OtherKey}, M, Path)
                  end,
                  maps:keys(M)),
    ok;
v_msg_BaseCommand(M, Path, _TrUserData)
    when is_map(M) ->
    mk_type_error({missing_fields,
                   [type] -- maps:keys(M),
                   'BaseCommand'},
                  M,
                  Path);
v_msg_BaseCommand(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'BaseCommand'}, X, Path).

-compile({nowarn_unused_function,'v_enum_Schema.Type'/3}).
-dialyzer({nowarn_function,'v_enum_Schema.Type'/3}).
'v_enum_Schema.Type'('None', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('String', _Path, _TrUserData) ->
    ok;
'v_enum_Schema.Type'('Json', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Protobuf', _Path, _TrUserData) ->
    ok;
'v_enum_Schema.Type'('Avro', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Bool', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Int8', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Int16', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Int32', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Int64', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Float', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Double', _Path, _TrUserData) ->
    ok;
'v_enum_Schema.Type'('Date', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Time', _Path, _TrUserData) -> ok;
'v_enum_Schema.Type'('Timestamp', _Path, _TrUserData) ->
    ok;
'v_enum_Schema.Type'('KeyValue', _Path, _TrUserData) ->
    ok;
'v_enum_Schema.Type'('Instant', _Path, _TrUserData) ->
    ok;
'v_enum_Schema.Type'('LocalDate', _Path, _TrUserData) ->
    ok;
'v_enum_Schema.Type'('LocalTime', _Path, _TrUserData) ->
    ok;
'v_enum_Schema.Type'('LocalDateTime', _Path,
                     _TrUserData) ->
    ok;
'v_enum_Schema.Type'('ProtobufNative', _Path,
                     _TrUserData) ->
    ok;
'v_enum_Schema.Type'(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_Schema.Type'(X, Path, _TrUserData) ->
    mk_type_error({invalid_enum, 'Schema.Type'}, X, Path).

-compile({nowarn_unused_function,v_enum_CompressionType/3}).
-dialyzer({nowarn_function,v_enum_CompressionType/3}).
v_enum_CompressionType('NONE', _Path, _TrUserData) ->
    ok;
v_enum_CompressionType('LZ4', _Path, _TrUserData) -> ok;
v_enum_CompressionType('ZLIB', _Path, _TrUserData) ->
    ok;
v_enum_CompressionType('ZSTD', _Path, _TrUserData) ->
    ok;
v_enum_CompressionType('SNAPPY', _Path, _TrUserData) ->
    ok;
v_enum_CompressionType(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
v_enum_CompressionType(X, Path, _TrUserData) ->
    mk_type_error({invalid_enum, 'CompressionType'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_enum_ServerError/3}).
-dialyzer({nowarn_function,v_enum_ServerError/3}).
v_enum_ServerError('UnknownError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('MetadataError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('PersistenceError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('AuthenticationError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('AuthorizationError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('ConsumerBusy', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('ServiceNotReady', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('ProducerBlockedQuotaExceededError',
                   _Path, _TrUserData) ->
    ok;
v_enum_ServerError('ProducerBlockedQuotaExceededException',
                   _Path, _TrUserData) ->
    ok;
v_enum_ServerError('ChecksumError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('UnsupportedVersionError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('TopicNotFound', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('SubscriptionNotFound', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('ConsumerNotFound', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('TooManyRequests', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('TopicTerminatedError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('ProducerBusy', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('InvalidTopicName', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('IncompatibleSchema', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('ConsumerAssignError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('TransactionCoordinatorNotFound',
                   _Path, _TrUserData) ->
    ok;
v_enum_ServerError('InvalidTxnStatus', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('NotAllowedError', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('TransactionConflict', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError('TransactionNotFound', _Path,
                   _TrUserData) ->
    ok;
v_enum_ServerError(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
v_enum_ServerError(X, Path, _TrUserData) ->
    mk_type_error({invalid_enum, 'ServerError'}, X, Path).

-compile({nowarn_unused_function,v_enum_AuthMethod/3}).
-dialyzer({nowarn_function,v_enum_AuthMethod/3}).
v_enum_AuthMethod('AuthMethodNone', _Path,
                  _TrUserData) ->
    ok;
v_enum_AuthMethod('AuthMethodYcaV1', _Path,
                  _TrUserData) ->
    ok;
v_enum_AuthMethod('AuthMethodAthens', _Path,
                  _TrUserData) ->
    ok;
v_enum_AuthMethod(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
v_enum_AuthMethod(X, Path, _TrUserData) ->
    mk_type_error({invalid_enum, 'AuthMethod'}, X, Path).

-compile({nowarn_unused_function,v_enum_KeySharedMode/3}).
-dialyzer({nowarn_function,v_enum_KeySharedMode/3}).
v_enum_KeySharedMode('AUTO_SPLIT', _Path,
                     _TrUserData) ->
    ok;
v_enum_KeySharedMode('STICKY', _Path, _TrUserData) ->
    ok;
v_enum_KeySharedMode(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
v_enum_KeySharedMode(X, Path, _TrUserData) ->
    mk_type_error({invalid_enum, 'KeySharedMode'}, X, Path).

-compile({nowarn_unused_function,'v_enum_CommandSubscribe.SubType'/3}).
-dialyzer({nowarn_function,'v_enum_CommandSubscribe.SubType'/3}).
'v_enum_CommandSubscribe.SubType'('Exclusive', _Path,
                                  _TrUserData) ->
    ok;
'v_enum_CommandSubscribe.SubType'('Shared', _Path,
                                  _TrUserData) ->
    ok;
'v_enum_CommandSubscribe.SubType'('Failover', _Path,
                                  _TrUserData) ->
    ok;
'v_enum_CommandSubscribe.SubType'('Key_Shared', _Path,
                                  _TrUserData) ->
    ok;
'v_enum_CommandSubscribe.SubType'(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_CommandSubscribe.SubType'(X, Path,
                                  _TrUserData) ->
    mk_type_error({invalid_enum,
                   'CommandSubscribe.SubType'},
                  X,
                  Path).

-compile({nowarn_unused_function,'v_enum_CommandSubscribe.InitialPosition'/3}).
-dialyzer({nowarn_function,'v_enum_CommandSubscribe.InitialPosition'/3}).
'v_enum_CommandSubscribe.InitialPosition'('Latest',
                                          _Path, _TrUserData) ->
    ok;
'v_enum_CommandSubscribe.InitialPosition'('Earliest',
                                          _Path, _TrUserData) ->
    ok;
'v_enum_CommandSubscribe.InitialPosition'(V, Path,
                                          TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_CommandSubscribe.InitialPosition'(X, Path,
                                          _TrUserData) ->
    mk_type_error({invalid_enum,
                   'CommandSubscribe.InitialPosition'},
                  X,
                  Path).

-compile({nowarn_unused_function,'v_enum_CommandPartitionedTopicMetadataResponse.LookupType'/3}).
-dialyzer({nowarn_function,'v_enum_CommandPartitionedTopicMetadataResponse.LookupType'/3}).
'v_enum_CommandPartitionedTopicMetadataResponse.LookupType'('Success',
                                                            _Path,
                                                            _TrUserData) ->
    ok;
'v_enum_CommandPartitionedTopicMetadataResponse.LookupType'('Failed',
                                                            _Path,
                                                            _TrUserData) ->
    ok;
'v_enum_CommandPartitionedTopicMetadataResponse.LookupType'(V,
                                                            Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_CommandPartitionedTopicMetadataResponse.LookupType'(X,
                                                            Path,
                                                            _TrUserData) ->
    mk_type_error({invalid_enum,
                   'CommandPartitionedTopicMetadataResponse.LookupType'},
                  X,
                  Path).

-compile({nowarn_unused_function,'v_enum_CommandLookupTopicResponse.LookupType'/3}).
-dialyzer({nowarn_function,'v_enum_CommandLookupTopicResponse.LookupType'/3}).
'v_enum_CommandLookupTopicResponse.LookupType'('Redirect',
                                               _Path, _TrUserData) ->
    ok;
'v_enum_CommandLookupTopicResponse.LookupType'('Connect',
                                               _Path, _TrUserData) ->
    ok;
'v_enum_CommandLookupTopicResponse.LookupType'('Failed',
                                               _Path, _TrUserData) ->
    ok;
'v_enum_CommandLookupTopicResponse.LookupType'(V, Path,
                                               TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_CommandLookupTopicResponse.LookupType'(X, Path,
                                               _TrUserData) ->
    mk_type_error({invalid_enum,
                   'CommandLookupTopicResponse.LookupType'},
                  X,
                  Path).

-compile({nowarn_unused_function,'v_enum_CommandAck.AckType'/3}).
-dialyzer({nowarn_function,'v_enum_CommandAck.AckType'/3}).
'v_enum_CommandAck.AckType'('Individual', _Path,
                            _TrUserData) ->
    ok;
'v_enum_CommandAck.AckType'('Cumulative', _Path,
                            _TrUserData) ->
    ok;
'v_enum_CommandAck.AckType'(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_CommandAck.AckType'(X, Path, _TrUserData) ->
    mk_type_error({invalid_enum, 'CommandAck.AckType'},
                  X,
                  Path).

-compile({nowarn_unused_function,'v_enum_CommandAck.ValidationError'/3}).
-dialyzer({nowarn_function,'v_enum_CommandAck.ValidationError'/3}).
'v_enum_CommandAck.ValidationError'('UncompressedSizeCorruption',
                                    _Path, _TrUserData) ->
    ok;
'v_enum_CommandAck.ValidationError'('DecompressionError',
                                    _Path, _TrUserData) ->
    ok;
'v_enum_CommandAck.ValidationError'('ChecksumMismatch',
                                    _Path, _TrUserData) ->
    ok;
'v_enum_CommandAck.ValidationError'('BatchDeSerializeError',
                                    _Path, _TrUserData) ->
    ok;
'v_enum_CommandAck.ValidationError'('DecryptionError',
                                    _Path, _TrUserData) ->
    ok;
'v_enum_CommandAck.ValidationError'(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_CommandAck.ValidationError'(X, Path,
                                    _TrUserData) ->
    mk_type_error({invalid_enum,
                   'CommandAck.ValidationError'},
                  X,
                  Path).

-compile({nowarn_unused_function,'v_enum_CommandGetTopicsOfNamespace.Mode'/3}).
-dialyzer({nowarn_function,'v_enum_CommandGetTopicsOfNamespace.Mode'/3}).
'v_enum_CommandGetTopicsOfNamespace.Mode'('PERSISTENT',
                                          _Path, _TrUserData) ->
    ok;
'v_enum_CommandGetTopicsOfNamespace.Mode'('NON_PERSISTENT',
                                          _Path, _TrUserData) ->
    ok;
'v_enum_CommandGetTopicsOfNamespace.Mode'('ALL', _Path,
                                          _TrUserData) ->
    ok;
'v_enum_CommandGetTopicsOfNamespace.Mode'(V, Path,
                                          TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_CommandGetTopicsOfNamespace.Mode'(X, Path,
                                          _TrUserData) ->
    mk_type_error({invalid_enum,
                   'CommandGetTopicsOfNamespace.Mode'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_enum_TxnAction/3}).
-dialyzer({nowarn_function,v_enum_TxnAction/3}).
v_enum_TxnAction('COMMIT', _Path, _TrUserData) -> ok;
v_enum_TxnAction('ABORT', _Path, _TrUserData) -> ok;
v_enum_TxnAction(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
v_enum_TxnAction(X, Path, _TrUserData) ->
    mk_type_error({invalid_enum, 'TxnAction'}, X, Path).

-compile({nowarn_unused_function,'v_enum_BaseCommand.Type'/3}).
-dialyzer({nowarn_function,'v_enum_BaseCommand.Type'/3}).
'v_enum_BaseCommand.Type'('CONNECT', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('CONNECTED', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('SUBSCRIBE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('PRODUCER', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('SEND', _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('SEND_RECEIPT', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('SEND_ERROR', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('MESSAGE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('ACK', _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('FLOW', _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('UNSUBSCRIBE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('SUCCESS', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('ERROR', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('CLOSE_PRODUCER', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('CLOSE_CONSUMER', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('PRODUCER_SUCCESS', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('PING', _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('PONG', _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('REDELIVER_UNACKNOWLEDGED_MESSAGES',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('PARTITIONED_METADATA', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('PARTITIONED_METADATA_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('LOOKUP', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('LOOKUP_RESPONSE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('CONSUMER_STATS', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('CONSUMER_STATS_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('REACHED_END_OF_TOPIC', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('SEEK', _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('GET_LAST_MESSAGE_ID', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('GET_LAST_MESSAGE_ID_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('ACTIVE_CONSUMER_CHANGE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('GET_TOPICS_OF_NAMESPACE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('GET_TOPICS_OF_NAMESPACE_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('GET_SCHEMA', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('GET_SCHEMA_RESPONSE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('AUTH_CHALLENGE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('AUTH_RESPONSE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('ACK_RESPONSE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('GET_OR_CREATE_SCHEMA', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('GET_OR_CREATE_SCHEMA_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('NEW_TXN', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('NEW_TXN_RESPONSE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('ADD_PARTITION_TO_TXN', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('ADD_PARTITION_TO_TXN_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('ADD_SUBSCRIPTION_TO_TXN',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('ADD_SUBSCRIPTION_TO_TXN_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('END_TXN', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('END_TXN_RESPONSE', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('END_TXN_ON_PARTITION', _Path,
                          _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('END_TXN_ON_PARTITION_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('END_TXN_ON_SUBSCRIPTION',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'('END_TXN_ON_SUBSCRIPTION_RESPONSE',
                          _Path, _TrUserData) ->
    ok;
'v_enum_BaseCommand.Type'(V, Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_BaseCommand.Type'(X, Path, _TrUserData) ->
    mk_type_error({invalid_enum, 'BaseCommand.Type'},
                  X,
                  Path).

-compile({nowarn_unused_function,v_type_sint32/3}).
-dialyzer({nowarn_function,v_type_sint32/3}).
v_type_sint32(N, _Path, _TrUserData)
    when -2147483648 =< N, N =< 2147483647 ->
    ok;
v_type_sint32(N, Path, _TrUserData)
    when is_integer(N) ->
    mk_type_error({value_out_of_range, sint32, signed, 32},
                  N,
                  Path);
v_type_sint32(X, Path, _TrUserData) ->
    mk_type_error({bad_integer, sint32, signed, 32},
                  X,
                  Path).

-compile({nowarn_unused_function,v_type_int32/3}).
-dialyzer({nowarn_function,v_type_int32/3}).
v_type_int32(N, _Path, _TrUserData)
    when -2147483648 =< N, N =< 2147483647 ->
    ok;
v_type_int32(N, Path, _TrUserData) when is_integer(N) ->
    mk_type_error({value_out_of_range, int32, signed, 32},
                  N,
                  Path);
v_type_int32(X, Path, _TrUserData) ->
    mk_type_error({bad_integer, int32, signed, 32},
                  X,
                  Path).

-compile({nowarn_unused_function,v_type_int64/3}).
-dialyzer({nowarn_function,v_type_int64/3}).
v_type_int64(N, _Path, _TrUserData)
    when -9223372036854775808 =< N,
         N =< 9223372036854775807 ->
    ok;
v_type_int64(N, Path, _TrUserData) when is_integer(N) ->
    mk_type_error({value_out_of_range, int64, signed, 64},
                  N,
                  Path);
v_type_int64(X, Path, _TrUserData) ->
    mk_type_error({bad_integer, int64, signed, 64},
                  X,
                  Path).

-compile({nowarn_unused_function,v_type_uint32/3}).
-dialyzer({nowarn_function,v_type_uint32/3}).
v_type_uint32(N, _Path, _TrUserData)
    when 0 =< N, N =< 4294967295 ->
    ok;
v_type_uint32(N, Path, _TrUserData)
    when is_integer(N) ->
    mk_type_error({value_out_of_range,
                   uint32,
                   unsigned,
                   32},
                  N,
                  Path);
v_type_uint32(X, Path, _TrUserData) ->
    mk_type_error({bad_integer, uint32, unsigned, 32},
                  X,
                  Path).

-compile({nowarn_unused_function,v_type_uint64/3}).
-dialyzer({nowarn_function,v_type_uint64/3}).
v_type_uint64(N, _Path, _TrUserData)
    when 0 =< N, N =< 18446744073709551615 ->
    ok;
v_type_uint64(N, Path, _TrUserData)
    when is_integer(N) ->
    mk_type_error({value_out_of_range,
                   uint64,
                   unsigned,
                   64},
                  N,
                  Path);
v_type_uint64(X, Path, _TrUserData) ->
    mk_type_error({bad_integer, uint64, unsigned, 64},
                  X,
                  Path).

-compile({nowarn_unused_function,v_type_bool/3}).
-dialyzer({nowarn_function,v_type_bool/3}).
v_type_bool(false, _Path, _TrUserData) -> ok;
v_type_bool(true, _Path, _TrUserData) -> ok;
v_type_bool(0, _Path, _TrUserData) -> ok;
v_type_bool(1, _Path, _TrUserData) -> ok;
v_type_bool(X, Path, _TrUserData) ->
    mk_type_error(bad_boolean_value, X, Path).

-compile({nowarn_unused_function,v_type_double/3}).
-dialyzer({nowarn_function,v_type_double/3}).
v_type_double(N, _Path, _TrUserData) when is_float(N) ->
    ok;
v_type_double(N, _Path, _TrUserData)
    when is_integer(N) ->
    ok;
v_type_double(infinity, _Path, _TrUserData) -> ok;
v_type_double('-infinity', _Path, _TrUserData) -> ok;
v_type_double(nan, _Path, _TrUserData) -> ok;
v_type_double(X, Path, _TrUserData) ->
    mk_type_error(bad_double_value, X, Path).

-compile({nowarn_unused_function,v_type_string/3}).
-dialyzer({nowarn_function,v_type_string/3}).
v_type_string(S, Path, _TrUserData)
    when is_list(S); is_binary(S) ->
    try unicode:characters_to_binary(S) of
        B when is_binary(B) -> ok;
        {error, _, _} ->
            mk_type_error(bad_unicode_string, S, Path)
    catch
        error:badarg ->
            mk_type_error(bad_unicode_string, S, Path)
    end;
v_type_string(X, Path, _TrUserData) ->
    mk_type_error(bad_unicode_string, X, Path).

-compile({nowarn_unused_function,v_type_bytes/3}).
-dialyzer({nowarn_function,v_type_bytes/3}).
v_type_bytes(B, _Path, _TrUserData) when is_binary(B) ->
    ok;
v_type_bytes(B, _Path, _TrUserData) when is_list(B) ->
    ok;
v_type_bytes(X, Path, _TrUserData) ->
    mk_type_error(bad_binary_value, X, Path).

-compile({nowarn_unused_function,mk_type_error/3}).
-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error,
                  {Error, [{value, ValueSeen}, {path, Path2}]}}).


-compile({nowarn_unused_function,prettify_path/1}).
-dialyzer({nowarn_function,prettify_path/1}).
prettify_path([]) -> top_level;
prettify_path(PathR) ->
    list_to_atom(lists:append(lists:join(".",
                                         lists:map(fun atom_to_list/1,
                                                   lists:reverse(PathR))))).


-compile({nowarn_unused_function,id/2}).
-compile({inline,id/2}).
id(X, _TrUserData) -> X.

-compile({nowarn_unused_function,v_ok/3}).
-compile({inline,v_ok/3}).
v_ok(_Value, _Path, _TrUserData) -> ok.

-compile({nowarn_unused_function,m_overwrite/3}).
-compile({inline,m_overwrite/3}).
m_overwrite(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,cons/3}).
-compile({inline,cons/3}).
cons(Elem, Acc, _TrUserData) -> [Elem | Acc].

-compile({nowarn_unused_function,lists_reverse/2}).
-compile({inline,lists_reverse/2}).
'lists_reverse'(L, _TrUserData) -> lists:reverse(L).
-compile({nowarn_unused_function,'erlang_++'/3}).
-compile({inline,'erlang_++'/3}).
'erlang_++'(A, B, _TrUserData) -> A ++ B.


get_msg_defs() ->
    [{{enum, 'Schema.Type'},
      [{'None', 0},
       {'String', 1},
       {'Json', 2},
       {'Protobuf', 3},
       {'Avro', 4},
       {'Bool', 5},
       {'Int8', 6},
       {'Int16', 7},
       {'Int32', 8},
       {'Int64', 9},
       {'Float', 10},
       {'Double', 11},
       {'Date', 12},
       {'Time', 13},
       {'Timestamp', 14},
       {'KeyValue', 15},
       {'Instant', 16},
       {'LocalDate', 17},
       {'LocalTime', 18},
       {'LocalDateTime', 19},
       {'ProtobufNative', 20}]},
     {{enum, 'CompressionType'},
      [{'NONE', 0},
       {'LZ4', 1},
       {'ZLIB', 2},
       {'ZSTD', 3},
       {'SNAPPY', 4}]},
     {{enum, 'ServerError'},
      [{'UnknownError', 0},
       {'MetadataError', 1},
       {'PersistenceError', 2},
       {'AuthenticationError', 3},
       {'AuthorizationError', 4},
       {'ConsumerBusy', 5},
       {'ServiceNotReady', 6},
       {'ProducerBlockedQuotaExceededError', 7},
       {'ProducerBlockedQuotaExceededException', 8},
       {'ChecksumError', 9},
       {'UnsupportedVersionError', 10},
       {'TopicNotFound', 11},
       {'SubscriptionNotFound', 12},
       {'ConsumerNotFound', 13},
       {'TooManyRequests', 14},
       {'TopicTerminatedError', 15},
       {'ProducerBusy', 16},
       {'InvalidTopicName', 17},
       {'IncompatibleSchema', 18},
       {'ConsumerAssignError', 19},
       {'TransactionCoordinatorNotFound', 20},
       {'InvalidTxnStatus', 21},
       {'NotAllowedError', 22},
       {'TransactionConflict', 23},
       {'TransactionNotFound', 24}]},
     {{enum, 'AuthMethod'},
      [{'AuthMethodNone', 0},
       {'AuthMethodYcaV1', 1},
       {'AuthMethodAthens', 2}]},
     {{enum, 'ProtocolVersion'},
      [{v0, 0},
       {v1, 1},
       {v2, 2},
       {v3, 3},
       {v4, 4},
       {v5, 5},
       {v6, 6},
       {v7, 7},
       {v8, 8},
       {v9, 9},
       {v10, 10},
       {v11, 11},
       {v12, 12},
       {v13, 13},
       {v14, 14},
       {v15, 15}]},
     {{enum, 'KeySharedMode'},
      [{'AUTO_SPLIT', 0}, {'STICKY', 1}]},
     {{enum, 'CommandSubscribe.SubType'},
      [{'Exclusive', 0},
       {'Shared', 1},
       {'Failover', 2},
       {'Key_Shared', 3}]},
     {{enum, 'CommandSubscribe.InitialPosition'},
      [{'Latest', 0}, {'Earliest', 1}]},
     {{enum,
       'CommandPartitionedTopicMetadataResponse.LookupType'},
      [{'Success', 0}, {'Failed', 1}]},
     {{enum, 'CommandLookupTopicResponse.LookupType'},
      [{'Redirect', 0}, {'Connect', 1}, {'Failed', 2}]},
     {{enum, 'CommandAck.AckType'},
      [{'Individual', 0}, {'Cumulative', 1}]},
     {{enum, 'CommandAck.ValidationError'},
      [{'UncompressedSizeCorruption', 0},
       {'DecompressionError', 1},
       {'ChecksumMismatch', 2},
       {'BatchDeSerializeError', 3},
       {'DecryptionError', 4}]},
     {{enum, 'CommandGetTopicsOfNamespace.Mode'},
      [{'PERSISTENT', 0}, {'NON_PERSISTENT', 1}, {'ALL', 2}]},
     {{enum, 'TxnAction'}, [{'COMMIT', 0}, {'ABORT', 1}]},
     {{enum, 'BaseCommand.Type'},
      [{'CONNECT', 2},
       {'CONNECTED', 3},
       {'SUBSCRIBE', 4},
       {'PRODUCER', 5},
       {'SEND', 6},
       {'SEND_RECEIPT', 7},
       {'SEND_ERROR', 8},
       {'MESSAGE', 9},
       {'ACK', 10},
       {'FLOW', 11},
       {'UNSUBSCRIBE', 12},
       {'SUCCESS', 13},
       {'ERROR', 14},
       {'CLOSE_PRODUCER', 15},
       {'CLOSE_CONSUMER', 16},
       {'PRODUCER_SUCCESS', 17},
       {'PING', 18},
       {'PONG', 19},
       {'REDELIVER_UNACKNOWLEDGED_MESSAGES', 20},
       {'PARTITIONED_METADATA', 21},
       {'PARTITIONED_METADATA_RESPONSE', 22},
       {'LOOKUP', 23},
       {'LOOKUP_RESPONSE', 24},
       {'CONSUMER_STATS', 25},
       {'CONSUMER_STATS_RESPONSE', 26},
       {'REACHED_END_OF_TOPIC', 27},
       {'SEEK', 28},
       {'GET_LAST_MESSAGE_ID', 29},
       {'GET_LAST_MESSAGE_ID_RESPONSE', 30},
       {'ACTIVE_CONSUMER_CHANGE', 31},
       {'GET_TOPICS_OF_NAMESPACE', 32},
       {'GET_TOPICS_OF_NAMESPACE_RESPONSE', 33},
       {'GET_SCHEMA', 34},
       {'GET_SCHEMA_RESPONSE', 35},
       {'AUTH_CHALLENGE', 36},
       {'AUTH_RESPONSE', 37},
       {'ACK_RESPONSE', 38},
       {'GET_OR_CREATE_SCHEMA', 39},
       {'GET_OR_CREATE_SCHEMA_RESPONSE', 40},
       {'NEW_TXN', 50},
       {'NEW_TXN_RESPONSE', 51},
       {'ADD_PARTITION_TO_TXN', 52},
       {'ADD_PARTITION_TO_TXN_RESPONSE', 53},
       {'ADD_SUBSCRIPTION_TO_TXN', 54},
       {'ADD_SUBSCRIPTION_TO_TXN_RESPONSE', 55},
       {'END_TXN', 56},
       {'END_TXN_RESPONSE', 57},
       {'END_TXN_ON_PARTITION', 58},
       {'END_TXN_ON_PARTITION_RESPONSE', 59},
       {'END_TXN_ON_SUBSCRIPTION', 60},
       {'END_TXN_ON_SUBSCRIPTION_RESPONSE', 61}]},
     {{msg, 'Schema'},
      [#{name => name, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => schema_data, fnum => 3, rnum => 3,
         type => bytes, occurrence => required, opts => []},
       #{name => type, fnum => 4, rnum => 4,
         type => {enum, 'Schema.Type'}, occurrence => required,
         opts => []},
       #{name => properties, fnum => 5, rnum => 5,
         type => {msg, 'KeyValue'}, occurrence => repeated,
         opts => []}]},
     {{msg, 'MessageIdData'},
      [#{name => ledgerId, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => entryId, fnum => 2, rnum => 3, type => uint64,
         occurrence => required, opts => []},
       #{name => partition, fnum => 3, rnum => 4,
         type => int32, occurrence => optional,
         opts => [{default, -1}]},
       #{name => batch_index, fnum => 4, rnum => 5,
         type => int32, occurrence => optional,
         opts => [{default, -1}]},
       #{name => ack_set, fnum => 5, rnum => 6, type => int64,
         occurrence => repeated, opts => []},
       #{name => batch_size, fnum => 6, rnum => 7,
         type => int32, occurrence => optional, opts => []}]},
     {{msg, 'KeyValue'},
      [#{name => key, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => value, fnum => 2, rnum => 3, type => string,
         occurrence => required, opts => []}]},
     {{msg, 'KeyLongValue'},
      [#{name => key, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => value, fnum => 2, rnum => 3, type => uint64,
         occurrence => required, opts => []}]},
     {{msg, 'IntRange'},
      [#{name => start, fnum => 1, rnum => 2, type => int32,
         occurrence => required, opts => []},
       #{name => 'end', fnum => 2, rnum => 3, type => int32,
         occurrence => required, opts => []}]},
     {{msg, 'EncryptionKeys'},
      [#{name => key, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => value, fnum => 2, rnum => 3, type => bytes,
         occurrence => required, opts => []},
       #{name => metadata, fnum => 3, rnum => 4,
         type => {msg, 'KeyValue'}, occurrence => repeated,
         opts => []}]},
     {{msg, 'MessageMetadata'},
      [#{name => producer_name, fnum => 1, rnum => 2,
         type => string, occurrence => required, opts => []},
       #{name => sequence_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => publish_time, fnum => 3, rnum => 4,
         type => uint64, occurrence => required, opts => []},
       #{name => properties, fnum => 4, rnum => 5,
         type => {msg, 'KeyValue'}, occurrence => repeated,
         opts => []},
       #{name => replicated_from, fnum => 5, rnum => 6,
         type => string, occurrence => optional, opts => []},
       #{name => partition_key, fnum => 6, rnum => 7,
         type => string, occurrence => optional, opts => []},
       #{name => replicate_to, fnum => 7, rnum => 8,
         type => string, occurrence => repeated, opts => []},
       #{name => compression, fnum => 8, rnum => 9,
         type => {enum, 'CompressionType'},
         occurrence => optional, opts => [{default, 'NONE'}]},
       #{name => uncompressed_size, fnum => 9, rnum => 10,
         type => uint32, occurrence => optional,
         opts => [{default, 0}]},
       #{name => num_messages_in_batch, fnum => 11, rnum => 11,
         type => int32, occurrence => optional,
         opts => [{default, 1}]},
       #{name => event_time, fnum => 12, rnum => 12,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => encryption_keys, fnum => 13, rnum => 13,
         type => {msg, 'EncryptionKeys'}, occurrence => repeated,
         opts => []},
       #{name => encryption_algo, fnum => 14, rnum => 14,
         type => string, occurrence => optional, opts => []},
       #{name => encryption_param, fnum => 15, rnum => 15,
         type => bytes, occurrence => optional, opts => []},
       #{name => schema_version, fnum => 16, rnum => 16,
         type => bytes, occurrence => optional, opts => []},
       #{name => partition_key_b64_encoded, fnum => 17,
         rnum => 17, type => bool, occurrence => optional,
         opts => [{default, false}]},
       #{name => ordering_key, fnum => 18, rnum => 18,
         type => bytes, occurrence => optional, opts => []},
       #{name => deliver_at_time, fnum => 19, rnum => 19,
         type => int64, occurrence => optional, opts => []},
       #{name => marker_type, fnum => 20, rnum => 20,
         type => int32, occurrence => optional, opts => []},
       #{name => txnid_least_bits, fnum => 22, rnum => 21,
         type => uint64, occurrence => optional, opts => []},
       #{name => txnid_most_bits, fnum => 23, rnum => 22,
         type => uint64, occurrence => optional, opts => []},
       #{name => highest_sequence_id, fnum => 24, rnum => 23,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => null_value, fnum => 25, rnum => 24,
         type => bool, occurrence => optional,
         opts => [{default, false}]},
       #{name => uuid, fnum => 26, rnum => 25, type => string,
         occurrence => optional, opts => []},
       #{name => num_chunks_from_msg, fnum => 27, rnum => 26,
         type => int32, occurrence => optional, opts => []},
       #{name => total_chunk_msg_size, fnum => 28, rnum => 27,
         type => int32, occurrence => optional, opts => []},
       #{name => chunk_id, fnum => 29, rnum => 28,
         type => int32, occurrence => optional, opts => []},
       #{name => null_partition_key, fnum => 30, rnum => 29,
         type => bool, occurrence => optional,
         opts => [{default, false}]}]},
     {{msg, 'SingleMessageMetadata'},
      [#{name => properties, fnum => 1, rnum => 2,
         type => {msg, 'KeyValue'}, occurrence => repeated,
         opts => []},
       #{name => partition_key, fnum => 2, rnum => 3,
         type => string, occurrence => optional, opts => []},
       #{name => payload_size, fnum => 3, rnum => 4,
         type => int32, occurrence => required, opts => []},
       #{name => compacted_out, fnum => 4, rnum => 5,
         type => bool, occurrence => optional,
         opts => [{default, false}]},
       #{name => event_time, fnum => 5, rnum => 6,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => partition_key_b64_encoded, fnum => 6,
         rnum => 7, type => bool, occurrence => optional,
         opts => [{default, false}]},
       #{name => ordering_key, fnum => 7, rnum => 8,
         type => bytes, occurrence => optional, opts => []},
       #{name => sequence_id, fnum => 8, rnum => 9,
         type => uint64, occurrence => optional, opts => []},
       #{name => null_value, fnum => 9, rnum => 10,
         type => bool, occurrence => optional,
         opts => [{default, false}]},
       #{name => null_partition_key, fnum => 10, rnum => 11,
         type => bool, occurrence => optional,
         opts => [{default, false}]}]},
     {{msg, 'CommandConnect'},
      [#{name => client_version, fnum => 1, rnum => 2,
         type => string, occurrence => required, opts => []},
       #{name => auth_method, fnum => 2, rnum => 3,
         type => {enum, 'AuthMethod'}, occurrence => optional,
         opts => []},
       #{name => auth_method_name, fnum => 5, rnum => 4,
         type => string, occurrence => optional, opts => []},
       #{name => auth_data, fnum => 3, rnum => 5,
         type => bytes, occurrence => optional, opts => []},
       #{name => protocol_version, fnum => 4, rnum => 6,
         type => int32, occurrence => optional,
         opts => [{default, 0}]},
       #{name => proxy_to_broker_url, fnum => 6, rnum => 7,
         type => string, occurrence => optional, opts => []},
       #{name => original_principal, fnum => 7, rnum => 8,
         type => string, occurrence => optional, opts => []},
       #{name => original_auth_data, fnum => 8, rnum => 9,
         type => string, occurrence => optional, opts => []},
       #{name => original_auth_method, fnum => 9, rnum => 10,
         type => string, occurrence => optional, opts => []},
       #{name => feature_flags, fnum => 10, rnum => 11,
         type => {msg, 'FeatureFlags'}, occurrence => optional,
         opts => []}]},
     {{msg, 'FeatureFlags'},
      [#{name => supports_auth_refresh, fnum => 1, rnum => 2,
         type => bool, occurrence => optional,
         opts => [{default, false}]}]},
     {{msg, 'CommandConnected'},
      [#{name => server_version, fnum => 1, rnum => 2,
         type => string, occurrence => required, opts => []},
       #{name => protocol_version, fnum => 2, rnum => 3,
         type => int32, occurrence => optional,
         opts => [{default, 0}]},
       #{name => max_message_size, fnum => 3, rnum => 4,
         type => int32, occurrence => optional, opts => []}]},
     {{msg, 'CommandAuthResponse'},
      [#{name => client_version, fnum => 1, rnum => 2,
         type => string, occurrence => optional, opts => []},
       #{name => response, fnum => 2, rnum => 3,
         type => {msg, 'AuthData'}, occurrence => optional,
         opts => []},
       #{name => protocol_version, fnum => 3, rnum => 4,
         type => int32, occurrence => optional,
         opts => [{default, 0}]}]},
     {{msg, 'CommandAuthChallenge'},
      [#{name => server_version, fnum => 1, rnum => 2,
         type => string, occurrence => optional, opts => []},
       #{name => challenge, fnum => 2, rnum => 3,
         type => {msg, 'AuthData'}, occurrence => optional,
         opts => []},
       #{name => protocol_version, fnum => 3, rnum => 4,
         type => int32, occurrence => optional,
         opts => [{default, 0}]}]},
     {{msg, 'AuthData'},
      [#{name => auth_method_name, fnum => 1, rnum => 2,
         type => string, occurrence => optional, opts => []},
       #{name => auth_data, fnum => 2, rnum => 3,
         type => bytes, occurrence => optional, opts => []}]},
     {{msg, 'KeySharedMeta'},
      [#{name => keySharedMode, fnum => 1, rnum => 2,
         type => {enum, 'KeySharedMode'}, occurrence => required,
         opts => []},
       #{name => hashRanges, fnum => 3, rnum => 3,
         type => {msg, 'IntRange'}, occurrence => repeated,
         opts => []},
       #{name => allowOutOfOrderDelivery, fnum => 4, rnum => 4,
         type => bool, occurrence => optional,
         opts => [{default, false}]}]},
     {{msg, 'CommandSubscribe'},
      [#{name => topic, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => subscription, fnum => 2, rnum => 3,
         type => string, occurrence => required, opts => []},
       #{name => subType, fnum => 3, rnum => 4,
         type => {enum, 'CommandSubscribe.SubType'},
         occurrence => required, opts => []},
       #{name => consumer_id, fnum => 4, rnum => 5,
         type => uint64, occurrence => required, opts => []},
       #{name => request_id, fnum => 5, rnum => 6,
         type => uint64, occurrence => required, opts => []},
       #{name => consumer_name, fnum => 6, rnum => 7,
         type => string, occurrence => optional, opts => []},
       #{name => priority_level, fnum => 7, rnum => 8,
         type => int32, occurrence => optional, opts => []},
       #{name => durable, fnum => 8, rnum => 9, type => bool,
         occurrence => optional, opts => [{default, true}]},
       #{name => start_message_id, fnum => 9, rnum => 10,
         type => {msg, 'MessageIdData'}, occurrence => optional,
         opts => []},
       #{name => metadata, fnum => 10, rnum => 11,
         type => {msg, 'KeyValue'}, occurrence => repeated,
         opts => []},
       #{name => read_compacted, fnum => 11, rnum => 12,
         type => bool, occurrence => optional, opts => []},
       #{name => schema, fnum => 12, rnum => 13,
         type => {msg, 'Schema'}, occurrence => optional,
         opts => []},
       #{name => initialPosition, fnum => 13, rnum => 14,
         type => {enum, 'CommandSubscribe.InitialPosition'},
         occurrence => optional, opts => [{default, 'Latest'}]},
       #{name => replicate_subscription_state, fnum => 14,
         rnum => 15, type => bool, occurrence => optional,
         opts => []},
       #{name => force_topic_creation, fnum => 15, rnum => 16,
         type => bool, occurrence => optional,
         opts => [{default, true}]},
       #{name => start_message_rollback_duration_sec,
         fnum => 16, rnum => 17, type => uint64,
         occurrence => optional, opts => [{default, 0}]},
       #{name => keySharedMeta, fnum => 17, rnum => 18,
         type => {msg, 'KeySharedMeta'}, occurrence => optional,
         opts => []}]},
     {{msg, 'CommandPartitionedTopicMetadata'},
      [#{name => topic, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => original_principal, fnum => 3, rnum => 4,
         type => string, occurrence => optional, opts => []},
       #{name => original_auth_data, fnum => 4, rnum => 5,
         type => string, occurrence => optional, opts => []},
       #{name => original_auth_method, fnum => 5, rnum => 6,
         type => string, occurrence => optional, opts => []}]},
     {{msg, 'CommandPartitionedTopicMetadataResponse'},
      [#{name => partitions, fnum => 1, rnum => 2,
         type => uint32, occurrence => optional, opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => response, fnum => 3, rnum => 4,
         type =>
             {enum,
              'CommandPartitionedTopicMetadataResponse.LookupType'},
         occurrence => optional, opts => []},
       #{name => error, fnum => 4, rnum => 5,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 5, rnum => 6, type => string,
         occurrence => optional, opts => []}]},
     {{msg, 'CommandLookupTopic'},
      [#{name => topic, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => authoritative, fnum => 3, rnum => 4,
         type => bool, occurrence => optional,
         opts => [{default, false}]},
       #{name => original_principal, fnum => 4, rnum => 5,
         type => string, occurrence => optional, opts => []},
       #{name => original_auth_data, fnum => 5, rnum => 6,
         type => string, occurrence => optional, opts => []},
       #{name => original_auth_method, fnum => 6, rnum => 7,
         type => string, occurrence => optional, opts => []},
       #{name => advertised_listener_name, fnum => 7,
         rnum => 8, type => string, occurrence => optional,
         opts => []}]},
     {{msg, 'CommandLookupTopicResponse'},
      [#{name => brokerServiceUrl, fnum => 1, rnum => 2,
         type => string, occurrence => optional, opts => []},
       #{name => brokerServiceUrlTls, fnum => 2, rnum => 3,
         type => string, occurrence => optional, opts => []},
       #{name => response, fnum => 3, rnum => 4,
         type => {enum, 'CommandLookupTopicResponse.LookupType'},
         occurrence => optional, opts => []},
       #{name => request_id, fnum => 4, rnum => 5,
         type => uint64, occurrence => required, opts => []},
       #{name => authoritative, fnum => 5, rnum => 6,
         type => bool, occurrence => optional,
         opts => [{default, false}]},
       #{name => error, fnum => 6, rnum => 7,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 7, rnum => 8, type => string,
         occurrence => optional, opts => []},
       #{name => proxy_through_service_url, fnum => 8,
         rnum => 9, type => bool, occurrence => optional,
         opts => [{default, false}]}]},
     {{msg, 'CommandProducer'},
      [#{name => topic, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => producer_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => request_id, fnum => 3, rnum => 4,
         type => uint64, occurrence => required, opts => []},
       #{name => producer_name, fnum => 4, rnum => 5,
         type => string, occurrence => optional, opts => []},
       #{name => encrypted, fnum => 5, rnum => 6, type => bool,
         occurrence => optional, opts => [{default, false}]},
       #{name => metadata, fnum => 6, rnum => 7,
         type => {msg, 'KeyValue'}, occurrence => repeated,
         opts => []},
       #{name => schema, fnum => 7, rnum => 8,
         type => {msg, 'Schema'}, occurrence => optional,
         opts => []},
       #{name => epoch, fnum => 8, rnum => 9, type => uint64,
         occurrence => optional, opts => [{default, 0}]},
       #{name => user_provided_producer_name, fnum => 9,
         rnum => 10, type => bool, occurrence => optional,
         opts => [{default, true}]}]},
     {{msg, 'CommandSend'},
      [#{name => producer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => sequence_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => num_messages, fnum => 3, rnum => 4,
         type => int32, occurrence => optional,
         opts => [{default, 1}]},
       #{name => txnid_least_bits, fnum => 4, rnum => 5,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 5, rnum => 6,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => highest_sequence_id, fnum => 6, rnum => 7,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => is_chunk, fnum => 7, rnum => 8, type => bool,
         occurrence => optional, opts => [{default, false}]}]},
     {{msg, 'CommandSendReceipt'},
      [#{name => producer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => sequence_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => message_id, fnum => 3, rnum => 4,
         type => {msg, 'MessageIdData'}, occurrence => optional,
         opts => []},
       #{name => highest_sequence_id, fnum => 4, rnum => 5,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]}]},
     {{msg, 'CommandSendError'},
      [#{name => producer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => sequence_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => error, fnum => 3, rnum => 4,
         type => {enum, 'ServerError'}, occurrence => required,
         opts => []},
       #{name => message, fnum => 4, rnum => 5, type => string,
         occurrence => required, opts => []}]},
     {{msg, 'CommandMessage'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => message_id, fnum => 2, rnum => 3,
         type => {msg, 'MessageIdData'}, occurrence => required,
         opts => []},
       #{name => redelivery_count, fnum => 3, rnum => 4,
         type => uint32, occurrence => optional,
         opts => [{default, 0}]},
       #{name => ack_set, fnum => 4, rnum => 5, type => int64,
         occurrence => repeated, opts => []}]},
     {{msg, 'CommandAck'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => ack_type, fnum => 2, rnum => 3,
         type => {enum, 'CommandAck.AckType'},
         occurrence => required, opts => []},
       #{name => message_id, fnum => 3, rnum => 4,
         type => {msg, 'MessageIdData'}, occurrence => repeated,
         opts => []},
       #{name => validation_error, fnum => 4, rnum => 5,
         type => {enum, 'CommandAck.ValidationError'},
         occurrence => optional, opts => []},
       #{name => properties, fnum => 5, rnum => 6,
         type => {msg, 'KeyLongValue'}, occurrence => repeated,
         opts => []},
       #{name => txnid_least_bits, fnum => 6, rnum => 7,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 7, rnum => 8,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => request_id, fnum => 8, rnum => 9,
         type => uint64, occurrence => optional, opts => []}]},
     {{msg, 'CommandAckResponse'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => error, fnum => 4, rnum => 5,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 5, rnum => 6, type => string,
         occurrence => optional, opts => []},
       #{name => request_id, fnum => 6, rnum => 7,
         type => uint64, occurrence => optional, opts => []}]},
     {{msg, 'CommandActiveConsumerChange'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => is_active, fnum => 2, rnum => 3, type => bool,
         occurrence => optional, opts => [{default, false}]}]},
     {{msg, 'CommandFlow'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => messagePermits, fnum => 2, rnum => 3,
         type => uint32, occurrence => required, opts => []}]},
     {{msg, 'CommandUnsubscribe'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []}]},
     {{msg, 'CommandSeek'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => message_id, fnum => 3, rnum => 4,
         type => {msg, 'MessageIdData'}, occurrence => optional,
         opts => []},
       #{name => message_publish_time, fnum => 4, rnum => 5,
         type => uint64, occurrence => optional, opts => []}]},
     {{msg, 'CommandReachedEndOfTopic'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []}]},
     {{msg, 'CommandCloseProducer'},
      [#{name => producer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []}]},
     {{msg, 'CommandCloseConsumer'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []}]},
     {{msg, 'CommandRedeliverUnacknowledgedMessages'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => message_ids, fnum => 2, rnum => 3,
         type => {msg, 'MessageIdData'}, occurrence => repeated,
         opts => []}]},
     {{msg, 'CommandSuccess'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => schema, fnum => 2, rnum => 3,
         type => {msg, 'Schema'}, occurrence => optional,
         opts => []}]},
     {{msg, 'CommandProducerSuccess'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => producer_name, fnum => 2, rnum => 3,
         type => string, occurrence => required, opts => []},
       #{name => last_sequence_id, fnum => 3, rnum => 4,
         type => int64, occurrence => optional,
         opts => [{default, -1}]},
       #{name => schema_version, fnum => 4, rnum => 5,
         type => bytes, occurrence => optional, opts => []}]},
     {{msg, 'CommandError'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => error, fnum => 2, rnum => 3,
         type => {enum, 'ServerError'}, occurrence => required,
         opts => []},
       #{name => message, fnum => 3, rnum => 4, type => string,
         occurrence => required, opts => []}]},
     {{msg, 'CommandPing'}, []},
     {{msg, 'CommandPong'}, []},
     {{msg, 'CommandConsumerStats'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => consumer_id, fnum => 4, rnum => 3,
         type => uint64, occurrence => required, opts => []}]},
     {{msg, 'CommandConsumerStatsResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => error_code, fnum => 2, rnum => 3,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => error_message, fnum => 3, rnum => 4,
         type => string, occurrence => optional, opts => []},
       #{name => msgRateOut, fnum => 4, rnum => 5,
         type => double, occurrence => optional, opts => []},
       #{name => msgThroughputOut, fnum => 5, rnum => 6,
         type => double, occurrence => optional, opts => []},
       #{name => msgRateRedeliver, fnum => 6, rnum => 7,
         type => double, occurrence => optional, opts => []},
       #{name => consumerName, fnum => 7, rnum => 8,
         type => string, occurrence => optional, opts => []},
       #{name => availablePermits, fnum => 8, rnum => 9,
         type => uint64, occurrence => optional, opts => []},
       #{name => unackedMessages, fnum => 9, rnum => 10,
         type => uint64, occurrence => optional, opts => []},
       #{name => blockedConsumerOnUnackedMsgs, fnum => 10,
         rnum => 11, type => bool, occurrence => optional,
         opts => []},
       #{name => address, fnum => 11, rnum => 12,
         type => string, occurrence => optional, opts => []},
       #{name => connectedSince, fnum => 12, rnum => 13,
         type => string, occurrence => optional, opts => []},
       #{name => type, fnum => 13, rnum => 14, type => string,
         occurrence => optional, opts => []},
       #{name => msgRateExpired, fnum => 14, rnum => 15,
         type => double, occurrence => optional, opts => []},
       #{name => msgBacklog, fnum => 15, rnum => 16,
         type => uint64, occurrence => optional, opts => []}]},
     {{msg, 'CommandGetLastMessageId'},
      [#{name => consumer_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []}]},
     {{msg, 'CommandGetLastMessageIdResponse'},
      [#{name => last_message_id, fnum => 1, rnum => 2,
         type => {msg, 'MessageIdData'}, occurrence => required,
         opts => []},
       #{name => request_id, fnum => 2, rnum => 3,
         type => uint64, occurrence => required, opts => []},
       #{name => consumer_mark_delete_position, fnum => 3,
         rnum => 4, type => {msg, 'MessageIdData'},
         occurrence => optional, opts => []}]},
     {{msg, 'CommandGetTopicsOfNamespace'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => namespace, fnum => 2, rnum => 3,
         type => string, occurrence => required, opts => []},
       #{name => mode, fnum => 3, rnum => 4,
         type => {enum, 'CommandGetTopicsOfNamespace.Mode'},
         occurrence => optional,
         opts => [{default, 'PERSISTENT'}]}]},
     {{msg, 'CommandGetTopicsOfNamespaceResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => topics, fnum => 2, rnum => 3, type => string,
         occurrence => repeated, opts => []}]},
     {{msg, 'CommandGetSchema'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => topic, fnum => 2, rnum => 3, type => string,
         occurrence => required, opts => []},
       #{name => schema_version, fnum => 3, rnum => 4,
         type => bytes, occurrence => optional, opts => []}]},
     {{msg, 'CommandGetSchemaResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => error_code, fnum => 2, rnum => 3,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => error_message, fnum => 3, rnum => 4,
         type => string, occurrence => optional, opts => []},
       #{name => schema, fnum => 4, rnum => 5,
         type => {msg, 'Schema'}, occurrence => optional,
         opts => []},
       #{name => schema_version, fnum => 5, rnum => 6,
         type => bytes, occurrence => optional, opts => []}]},
     {{msg, 'CommandGetOrCreateSchema'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => topic, fnum => 2, rnum => 3, type => string,
         occurrence => required, opts => []},
       #{name => schema, fnum => 3, rnum => 4,
         type => {msg, 'Schema'}, occurrence => required,
         opts => []}]},
     {{msg, 'CommandGetOrCreateSchemaResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => error_code, fnum => 2, rnum => 3,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => error_message, fnum => 3, rnum => 4,
         type => string, occurrence => optional, opts => []},
       #{name => schema_version, fnum => 4, rnum => 5,
         type => bytes, occurrence => optional, opts => []}]},
     {{msg, 'CommandNewTxn'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txn_ttl_seconds, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => tc_id, fnum => 3, rnum => 4, type => uint64,
         occurrence => optional, opts => [{default, 0}]}]},
     {{msg, 'CommandNewTxnResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => error, fnum => 4, rnum => 5,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 5, rnum => 6, type => string,
         occurrence => optional, opts => []}]},
     {{msg, 'CommandAddPartitionToTxn'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => partitions, fnum => 4, rnum => 5,
         type => string, occurrence => repeated, opts => []}]},
     {{msg, 'CommandAddPartitionToTxnResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => error, fnum => 4, rnum => 5,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 5, rnum => 6, type => string,
         occurrence => optional, opts => []}]},
     {{msg, 'Subscription'},
      [#{name => topic, fnum => 1, rnum => 2, type => string,
         occurrence => required, opts => []},
       #{name => subscription, fnum => 2, rnum => 3,
         type => string, occurrence => required, opts => []}]},
     {{msg, 'CommandAddSubscriptionToTxn'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => subscription, fnum => 4, rnum => 5,
         type => {msg, 'Subscription'}, occurrence => repeated,
         opts => []}]},
     {{msg, 'CommandAddSubscriptionToTxnResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => error, fnum => 4, rnum => 5,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 5, rnum => 6, type => string,
         occurrence => optional, opts => []}]},
     {{msg, 'CommandEndTxn'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txn_action, fnum => 4, rnum => 5,
         type => {enum, 'TxnAction'}, occurrence => optional,
         opts => []},
       #{name => message_id, fnum => 5, rnum => 6,
         type => {msg, 'MessageIdData'}, occurrence => repeated,
         opts => []}]},
     {{msg, 'CommandEndTxnResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => error, fnum => 4, rnum => 5,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 5, rnum => 6, type => string,
         occurrence => optional, opts => []}]},
     {{msg, 'CommandEndTxnOnPartition'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => topic, fnum => 4, rnum => 5, type => string,
         occurrence => optional, opts => []},
       #{name => txn_action, fnum => 5, rnum => 6,
         type => {enum, 'TxnAction'}, occurrence => optional,
         opts => []},
       #{name => message_id, fnum => 6, rnum => 7,
         type => {msg, 'MessageIdData'}, occurrence => repeated,
         opts => []}]},
     {{msg, 'CommandEndTxnOnPartitionResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => error, fnum => 4, rnum => 5,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 5, rnum => 6, type => string,
         occurrence => optional, opts => []}]},
     {{msg, 'CommandEndTxnOnSubscription'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => subscription, fnum => 4, rnum => 5,
         type => {msg, 'Subscription'}, occurrence => optional,
         opts => []},
       #{name => txn_action, fnum => 5, rnum => 6,
         type => {enum, 'TxnAction'}, occurrence => optional,
         opts => []}]},
     {{msg, 'CommandEndTxnOnSubscriptionResponse'},
      [#{name => request_id, fnum => 1, rnum => 2,
         type => uint64, occurrence => required, opts => []},
       #{name => txnid_least_bits, fnum => 2, rnum => 3,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => txnid_most_bits, fnum => 3, rnum => 4,
         type => uint64, occurrence => optional,
         opts => [{default, 0}]},
       #{name => error, fnum => 4, rnum => 5,
         type => {enum, 'ServerError'}, occurrence => optional,
         opts => []},
       #{name => message, fnum => 5, rnum => 6, type => string,
         occurrence => optional, opts => []}]},
     {{msg, 'BaseCommand'},
      [#{name => type, fnum => 1, rnum => 2,
         type => {enum, 'BaseCommand.Type'},
         occurrence => required, opts => []},
       #{name => connect, fnum => 2, rnum => 3,
         type => {msg, 'CommandConnect'}, occurrence => optional,
         opts => []},
       #{name => connected, fnum => 3, rnum => 4,
         type => {msg, 'CommandConnected'},
         occurrence => optional, opts => []},
       #{name => subscribe, fnum => 4, rnum => 5,
         type => {msg, 'CommandSubscribe'},
         occurrence => optional, opts => []},
       #{name => producer, fnum => 5, rnum => 6,
         type => {msg, 'CommandProducer'},
         occurrence => optional, opts => []},
       #{name => send, fnum => 6, rnum => 7,
         type => {msg, 'CommandSend'}, occurrence => optional,
         opts => []},
       #{name => send_receipt, fnum => 7, rnum => 8,
         type => {msg, 'CommandSendReceipt'},
         occurrence => optional, opts => []},
       #{name => send_error, fnum => 8, rnum => 9,
         type => {msg, 'CommandSendError'},
         occurrence => optional, opts => []},
       #{name => message, fnum => 9, rnum => 10,
         type => {msg, 'CommandMessage'}, occurrence => optional,
         opts => []},
       #{name => ack, fnum => 10, rnum => 11,
         type => {msg, 'CommandAck'}, occurrence => optional,
         opts => []},
       #{name => flow, fnum => 11, rnum => 12,
         type => {msg, 'CommandFlow'}, occurrence => optional,
         opts => []},
       #{name => unsubscribe, fnum => 12, rnum => 13,
         type => {msg, 'CommandUnsubscribe'},
         occurrence => optional, opts => []},
       #{name => success, fnum => 13, rnum => 14,
         type => {msg, 'CommandSuccess'}, occurrence => optional,
         opts => []},
       #{name => error, fnum => 14, rnum => 15,
         type => {msg, 'CommandError'}, occurrence => optional,
         opts => []},
       #{name => close_producer, fnum => 15, rnum => 16,
         type => {msg, 'CommandCloseProducer'},
         occurrence => optional, opts => []},
       #{name => close_consumer, fnum => 16, rnum => 17,
         type => {msg, 'CommandCloseConsumer'},
         occurrence => optional, opts => []},
       #{name => producer_success, fnum => 17, rnum => 18,
         type => {msg, 'CommandProducerSuccess'},
         occurrence => optional, opts => []},
       #{name => ping, fnum => 18, rnum => 19,
         type => {msg, 'CommandPing'}, occurrence => optional,
         opts => []},
       #{name => pong, fnum => 19, rnum => 20,
         type => {msg, 'CommandPong'}, occurrence => optional,
         opts => []},
       #{name => redeliverUnacknowledgedMessages, fnum => 20,
         rnum => 21,
         type => {msg, 'CommandRedeliverUnacknowledgedMessages'},
         occurrence => optional, opts => []},
       #{name => partitionMetadata, fnum => 21, rnum => 22,
         type => {msg, 'CommandPartitionedTopicMetadata'},
         occurrence => optional, opts => []},
       #{name => partitionMetadataResponse, fnum => 22,
         rnum => 23,
         type =>
             {msg, 'CommandPartitionedTopicMetadataResponse'},
         occurrence => optional, opts => []},
       #{name => lookupTopic, fnum => 23, rnum => 24,
         type => {msg, 'CommandLookupTopic'},
         occurrence => optional, opts => []},
       #{name => lookupTopicResponse, fnum => 24, rnum => 25,
         type => {msg, 'CommandLookupTopicResponse'},
         occurrence => optional, opts => []},
       #{name => consumerStats, fnum => 25, rnum => 26,
         type => {msg, 'CommandConsumerStats'},
         occurrence => optional, opts => []},
       #{name => consumerStatsResponse, fnum => 26, rnum => 27,
         type => {msg, 'CommandConsumerStatsResponse'},
         occurrence => optional, opts => []},
       #{name => reachedEndOfTopic, fnum => 27, rnum => 28,
         type => {msg, 'CommandReachedEndOfTopic'},
         occurrence => optional, opts => []},
       #{name => seek, fnum => 28, rnum => 29,
         type => {msg, 'CommandSeek'}, occurrence => optional,
         opts => []},
       #{name => getLastMessageId, fnum => 29, rnum => 30,
         type => {msg, 'CommandGetLastMessageId'},
         occurrence => optional, opts => []},
       #{name => getLastMessageIdResponse, fnum => 30,
         rnum => 31,
         type => {msg, 'CommandGetLastMessageIdResponse'},
         occurrence => optional, opts => []},
       #{name => active_consumer_change, fnum => 31,
         rnum => 32,
         type => {msg, 'CommandActiveConsumerChange'},
         occurrence => optional, opts => []},
       #{name => getTopicsOfNamespace, fnum => 32, rnum => 33,
         type => {msg, 'CommandGetTopicsOfNamespace'},
         occurrence => optional, opts => []},
       #{name => getTopicsOfNamespaceResponse, fnum => 33,
         rnum => 34,
         type => {msg, 'CommandGetTopicsOfNamespaceResponse'},
         occurrence => optional, opts => []},
       #{name => getSchema, fnum => 34, rnum => 35,
         type => {msg, 'CommandGetSchema'},
         occurrence => optional, opts => []},
       #{name => getSchemaResponse, fnum => 35, rnum => 36,
         type => {msg, 'CommandGetSchemaResponse'},
         occurrence => optional, opts => []},
       #{name => authChallenge, fnum => 36, rnum => 37,
         type => {msg, 'CommandAuthChallenge'},
         occurrence => optional, opts => []},
       #{name => authResponse, fnum => 37, rnum => 38,
         type => {msg, 'CommandAuthResponse'},
         occurrence => optional, opts => []},
       #{name => ackResponse, fnum => 38, rnum => 39,
         type => {msg, 'CommandAckResponse'},
         occurrence => optional, opts => []},
       #{name => getOrCreateSchema, fnum => 39, rnum => 40,
         type => {msg, 'CommandGetOrCreateSchema'},
         occurrence => optional, opts => []},
       #{name => getOrCreateSchemaResponse, fnum => 40,
         rnum => 41,
         type => {msg, 'CommandGetOrCreateSchemaResponse'},
         occurrence => optional, opts => []},
       #{name => newTxn, fnum => 50, rnum => 42,
         type => {msg, 'CommandNewTxn'}, occurrence => optional,
         opts => []},
       #{name => newTxnResponse, fnum => 51, rnum => 43,
         type => {msg, 'CommandNewTxnResponse'},
         occurrence => optional, opts => []},
       #{name => addPartitionToTxn, fnum => 52, rnum => 44,
         type => {msg, 'CommandAddPartitionToTxn'},
         occurrence => optional, opts => []},
       #{name => addPartitionToTxnResponse, fnum => 53,
         rnum => 45,
         type => {msg, 'CommandAddPartitionToTxnResponse'},
         occurrence => optional, opts => []},
       #{name => addSubscriptionToTxn, fnum => 54, rnum => 46,
         type => {msg, 'CommandAddSubscriptionToTxn'},
         occurrence => optional, opts => []},
       #{name => addSubscriptionToTxnResponse, fnum => 55,
         rnum => 47,
         type => {msg, 'CommandAddSubscriptionToTxnResponse'},
         occurrence => optional, opts => []},
       #{name => endTxn, fnum => 56, rnum => 48,
         type => {msg, 'CommandEndTxn'}, occurrence => optional,
         opts => []},
       #{name => endTxnResponse, fnum => 57, rnum => 49,
         type => {msg, 'CommandEndTxnResponse'},
         occurrence => optional, opts => []},
       #{name => endTxnOnPartition, fnum => 58, rnum => 50,
         type => {msg, 'CommandEndTxnOnPartition'},
         occurrence => optional, opts => []},
       #{name => endTxnOnPartitionResponse, fnum => 59,
         rnum => 51,
         type => {msg, 'CommandEndTxnOnPartitionResponse'},
         occurrence => optional, opts => []},
       #{name => endTxnOnSubscription, fnum => 60, rnum => 52,
         type => {msg, 'CommandEndTxnOnSubscription'},
         occurrence => optional, opts => []},
       #{name => endTxnOnSubscriptionResponse, fnum => 61,
         rnum => 53,
         type => {msg, 'CommandEndTxnOnSubscriptionResponse'},
         occurrence => optional, opts => []}]}].


get_msg_names() ->
    ['Schema',
     'MessageIdData',
     'KeyValue',
     'KeyLongValue',
     'IntRange',
     'EncryptionKeys',
     'MessageMetadata',
     'SingleMessageMetadata',
     'CommandConnect',
     'FeatureFlags',
     'CommandConnected',
     'CommandAuthResponse',
     'CommandAuthChallenge',
     'AuthData',
     'KeySharedMeta',
     'CommandSubscribe',
     'CommandPartitionedTopicMetadata',
     'CommandPartitionedTopicMetadataResponse',
     'CommandLookupTopic',
     'CommandLookupTopicResponse',
     'CommandProducer',
     'CommandSend',
     'CommandSendReceipt',
     'CommandSendError',
     'CommandMessage',
     'CommandAck',
     'CommandAckResponse',
     'CommandActiveConsumerChange',
     'CommandFlow',
     'CommandUnsubscribe',
     'CommandSeek',
     'CommandReachedEndOfTopic',
     'CommandCloseProducer',
     'CommandCloseConsumer',
     'CommandRedeliverUnacknowledgedMessages',
     'CommandSuccess',
     'CommandProducerSuccess',
     'CommandError',
     'CommandPing',
     'CommandPong',
     'CommandConsumerStats',
     'CommandConsumerStatsResponse',
     'CommandGetLastMessageId',
     'CommandGetLastMessageIdResponse',
     'CommandGetTopicsOfNamespace',
     'CommandGetTopicsOfNamespaceResponse',
     'CommandGetSchema',
     'CommandGetSchemaResponse',
     'CommandGetOrCreateSchema',
     'CommandGetOrCreateSchemaResponse',
     'CommandNewTxn',
     'CommandNewTxnResponse',
     'CommandAddPartitionToTxn',
     'CommandAddPartitionToTxnResponse',
     'Subscription',
     'CommandAddSubscriptionToTxn',
     'CommandAddSubscriptionToTxnResponse',
     'CommandEndTxn',
     'CommandEndTxnResponse',
     'CommandEndTxnOnPartition',
     'CommandEndTxnOnPartitionResponse',
     'CommandEndTxnOnSubscription',
     'CommandEndTxnOnSubscriptionResponse',
     'BaseCommand'].


get_group_names() -> [].


get_msg_or_group_names() ->
    ['Schema',
     'MessageIdData',
     'KeyValue',
     'KeyLongValue',
     'IntRange',
     'EncryptionKeys',
     'MessageMetadata',
     'SingleMessageMetadata',
     'CommandConnect',
     'FeatureFlags',
     'CommandConnected',
     'CommandAuthResponse',
     'CommandAuthChallenge',
     'AuthData',
     'KeySharedMeta',
     'CommandSubscribe',
     'CommandPartitionedTopicMetadata',
     'CommandPartitionedTopicMetadataResponse',
     'CommandLookupTopic',
     'CommandLookupTopicResponse',
     'CommandProducer',
     'CommandSend',
     'CommandSendReceipt',
     'CommandSendError',
     'CommandMessage',
     'CommandAck',
     'CommandAckResponse',
     'CommandActiveConsumerChange',
     'CommandFlow',
     'CommandUnsubscribe',
     'CommandSeek',
     'CommandReachedEndOfTopic',
     'CommandCloseProducer',
     'CommandCloseConsumer',
     'CommandRedeliverUnacknowledgedMessages',
     'CommandSuccess',
     'CommandProducerSuccess',
     'CommandError',
     'CommandPing',
     'CommandPong',
     'CommandConsumerStats',
     'CommandConsumerStatsResponse',
     'CommandGetLastMessageId',
     'CommandGetLastMessageIdResponse',
     'CommandGetTopicsOfNamespace',
     'CommandGetTopicsOfNamespaceResponse',
     'CommandGetSchema',
     'CommandGetSchemaResponse',
     'CommandGetOrCreateSchema',
     'CommandGetOrCreateSchemaResponse',
     'CommandNewTxn',
     'CommandNewTxnResponse',
     'CommandAddPartitionToTxn',
     'CommandAddPartitionToTxnResponse',
     'Subscription',
     'CommandAddSubscriptionToTxn',
     'CommandAddSubscriptionToTxnResponse',
     'CommandEndTxn',
     'CommandEndTxnResponse',
     'CommandEndTxnOnPartition',
     'CommandEndTxnOnPartitionResponse',
     'CommandEndTxnOnSubscription',
     'CommandEndTxnOnSubscriptionResponse',
     'BaseCommand'].


get_enum_names() ->
    ['Schema.Type',
     'CompressionType',
     'ServerError',
     'AuthMethod',
     'ProtocolVersion',
     'KeySharedMode',
     'CommandSubscribe.SubType',
     'CommandSubscribe.InitialPosition',
     'CommandPartitionedTopicMetadataResponse.LookupType',
     'CommandLookupTopicResponse.LookupType',
     'CommandAck.AckType',
     'CommandAck.ValidationError',
     'CommandGetTopicsOfNamespace.Mode',
     'TxnAction',
     'BaseCommand.Type'].


fetch_msg_def(MsgName) ->
    case find_msg_def(MsgName) of
        Fs when is_list(Fs) -> Fs;
        error -> erlang:error({no_such_msg, MsgName})
    end.


fetch_enum_def(EnumName) ->
    case find_enum_def(EnumName) of
        Es when is_list(Es) -> Es;
        error -> erlang:error({no_such_enum, EnumName})
    end.


find_msg_def('Schema') ->
    [#{name => name, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => schema_data, fnum => 3, rnum => 3,
       type => bytes, occurrence => required, opts => []},
     #{name => type, fnum => 4, rnum => 4,
       type => {enum, 'Schema.Type'}, occurrence => required,
       opts => []},
     #{name => properties, fnum => 5, rnum => 5,
       type => {msg, 'KeyValue'}, occurrence => repeated,
       opts => []}];
find_msg_def('MessageIdData') ->
    [#{name => ledgerId, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => entryId, fnum => 2, rnum => 3, type => uint64,
       occurrence => required, opts => []},
     #{name => partition, fnum => 3, rnum => 4,
       type => int32, occurrence => optional,
       opts => [{default, -1}]},
     #{name => batch_index, fnum => 4, rnum => 5,
       type => int32, occurrence => optional,
       opts => [{default, -1}]},
     #{name => ack_set, fnum => 5, rnum => 6, type => int64,
       occurrence => repeated, opts => []},
     #{name => batch_size, fnum => 6, rnum => 7,
       type => int32, occurrence => optional, opts => []}];
find_msg_def('KeyValue') ->
    [#{name => key, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => value, fnum => 2, rnum => 3, type => string,
       occurrence => required, opts => []}];
find_msg_def('KeyLongValue') ->
    [#{name => key, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => value, fnum => 2, rnum => 3, type => uint64,
       occurrence => required, opts => []}];
find_msg_def('IntRange') ->
    [#{name => start, fnum => 1, rnum => 2, type => int32,
       occurrence => required, opts => []},
     #{name => 'end', fnum => 2, rnum => 3, type => int32,
       occurrence => required, opts => []}];
find_msg_def('EncryptionKeys') ->
    [#{name => key, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => value, fnum => 2, rnum => 3, type => bytes,
       occurrence => required, opts => []},
     #{name => metadata, fnum => 3, rnum => 4,
       type => {msg, 'KeyValue'}, occurrence => repeated,
       opts => []}];
find_msg_def('MessageMetadata') ->
    [#{name => producer_name, fnum => 1, rnum => 2,
       type => string, occurrence => required, opts => []},
     #{name => sequence_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => publish_time, fnum => 3, rnum => 4,
       type => uint64, occurrence => required, opts => []},
     #{name => properties, fnum => 4, rnum => 5,
       type => {msg, 'KeyValue'}, occurrence => repeated,
       opts => []},
     #{name => replicated_from, fnum => 5, rnum => 6,
       type => string, occurrence => optional, opts => []},
     #{name => partition_key, fnum => 6, rnum => 7,
       type => string, occurrence => optional, opts => []},
     #{name => replicate_to, fnum => 7, rnum => 8,
       type => string, occurrence => repeated, opts => []},
     #{name => compression, fnum => 8, rnum => 9,
       type => {enum, 'CompressionType'},
       occurrence => optional, opts => [{default, 'NONE'}]},
     #{name => uncompressed_size, fnum => 9, rnum => 10,
       type => uint32, occurrence => optional,
       opts => [{default, 0}]},
     #{name => num_messages_in_batch, fnum => 11, rnum => 11,
       type => int32, occurrence => optional,
       opts => [{default, 1}]},
     #{name => event_time, fnum => 12, rnum => 12,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => encryption_keys, fnum => 13, rnum => 13,
       type => {msg, 'EncryptionKeys'}, occurrence => repeated,
       opts => []},
     #{name => encryption_algo, fnum => 14, rnum => 14,
       type => string, occurrence => optional, opts => []},
     #{name => encryption_param, fnum => 15, rnum => 15,
       type => bytes, occurrence => optional, opts => []},
     #{name => schema_version, fnum => 16, rnum => 16,
       type => bytes, occurrence => optional, opts => []},
     #{name => partition_key_b64_encoded, fnum => 17,
       rnum => 17, type => bool, occurrence => optional,
       opts => [{default, false}]},
     #{name => ordering_key, fnum => 18, rnum => 18,
       type => bytes, occurrence => optional, opts => []},
     #{name => deliver_at_time, fnum => 19, rnum => 19,
       type => int64, occurrence => optional, opts => []},
     #{name => marker_type, fnum => 20, rnum => 20,
       type => int32, occurrence => optional, opts => []},
     #{name => txnid_least_bits, fnum => 22, rnum => 21,
       type => uint64, occurrence => optional, opts => []},
     #{name => txnid_most_bits, fnum => 23, rnum => 22,
       type => uint64, occurrence => optional, opts => []},
     #{name => highest_sequence_id, fnum => 24, rnum => 23,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => null_value, fnum => 25, rnum => 24,
       type => bool, occurrence => optional,
       opts => [{default, false}]},
     #{name => uuid, fnum => 26, rnum => 25, type => string,
       occurrence => optional, opts => []},
     #{name => num_chunks_from_msg, fnum => 27, rnum => 26,
       type => int32, occurrence => optional, opts => []},
     #{name => total_chunk_msg_size, fnum => 28, rnum => 27,
       type => int32, occurrence => optional, opts => []},
     #{name => chunk_id, fnum => 29, rnum => 28,
       type => int32, occurrence => optional, opts => []},
     #{name => null_partition_key, fnum => 30, rnum => 29,
       type => bool, occurrence => optional,
       opts => [{default, false}]}];
find_msg_def('SingleMessageMetadata') ->
    [#{name => properties, fnum => 1, rnum => 2,
       type => {msg, 'KeyValue'}, occurrence => repeated,
       opts => []},
     #{name => partition_key, fnum => 2, rnum => 3,
       type => string, occurrence => optional, opts => []},
     #{name => payload_size, fnum => 3, rnum => 4,
       type => int32, occurrence => required, opts => []},
     #{name => compacted_out, fnum => 4, rnum => 5,
       type => bool, occurrence => optional,
       opts => [{default, false}]},
     #{name => event_time, fnum => 5, rnum => 6,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => partition_key_b64_encoded, fnum => 6,
       rnum => 7, type => bool, occurrence => optional,
       opts => [{default, false}]},
     #{name => ordering_key, fnum => 7, rnum => 8,
       type => bytes, occurrence => optional, opts => []},
     #{name => sequence_id, fnum => 8, rnum => 9,
       type => uint64, occurrence => optional, opts => []},
     #{name => null_value, fnum => 9, rnum => 10,
       type => bool, occurrence => optional,
       opts => [{default, false}]},
     #{name => null_partition_key, fnum => 10, rnum => 11,
       type => bool, occurrence => optional,
       opts => [{default, false}]}];
find_msg_def('CommandConnect') ->
    [#{name => client_version, fnum => 1, rnum => 2,
       type => string, occurrence => required, opts => []},
     #{name => auth_method, fnum => 2, rnum => 3,
       type => {enum, 'AuthMethod'}, occurrence => optional,
       opts => []},
     #{name => auth_method_name, fnum => 5, rnum => 4,
       type => string, occurrence => optional, opts => []},
     #{name => auth_data, fnum => 3, rnum => 5,
       type => bytes, occurrence => optional, opts => []},
     #{name => protocol_version, fnum => 4, rnum => 6,
       type => int32, occurrence => optional,
       opts => [{default, 0}]},
     #{name => proxy_to_broker_url, fnum => 6, rnum => 7,
       type => string, occurrence => optional, opts => []},
     #{name => original_principal, fnum => 7, rnum => 8,
       type => string, occurrence => optional, opts => []},
     #{name => original_auth_data, fnum => 8, rnum => 9,
       type => string, occurrence => optional, opts => []},
     #{name => original_auth_method, fnum => 9, rnum => 10,
       type => string, occurrence => optional, opts => []},
     #{name => feature_flags, fnum => 10, rnum => 11,
       type => {msg, 'FeatureFlags'}, occurrence => optional,
       opts => []}];
find_msg_def('FeatureFlags') ->
    [#{name => supports_auth_refresh, fnum => 1, rnum => 2,
       type => bool, occurrence => optional,
       opts => [{default, false}]}];
find_msg_def('CommandConnected') ->
    [#{name => server_version, fnum => 1, rnum => 2,
       type => string, occurrence => required, opts => []},
     #{name => protocol_version, fnum => 2, rnum => 3,
       type => int32, occurrence => optional,
       opts => [{default, 0}]},
     #{name => max_message_size, fnum => 3, rnum => 4,
       type => int32, occurrence => optional, opts => []}];
find_msg_def('CommandAuthResponse') ->
    [#{name => client_version, fnum => 1, rnum => 2,
       type => string, occurrence => optional, opts => []},
     #{name => response, fnum => 2, rnum => 3,
       type => {msg, 'AuthData'}, occurrence => optional,
       opts => []},
     #{name => protocol_version, fnum => 3, rnum => 4,
       type => int32, occurrence => optional,
       opts => [{default, 0}]}];
find_msg_def('CommandAuthChallenge') ->
    [#{name => server_version, fnum => 1, rnum => 2,
       type => string, occurrence => optional, opts => []},
     #{name => challenge, fnum => 2, rnum => 3,
       type => {msg, 'AuthData'}, occurrence => optional,
       opts => []},
     #{name => protocol_version, fnum => 3, rnum => 4,
       type => int32, occurrence => optional,
       opts => [{default, 0}]}];
find_msg_def('AuthData') ->
    [#{name => auth_method_name, fnum => 1, rnum => 2,
       type => string, occurrence => optional, opts => []},
     #{name => auth_data, fnum => 2, rnum => 3,
       type => bytes, occurrence => optional, opts => []}];
find_msg_def('KeySharedMeta') ->
    [#{name => keySharedMode, fnum => 1, rnum => 2,
       type => {enum, 'KeySharedMode'}, occurrence => required,
       opts => []},
     #{name => hashRanges, fnum => 3, rnum => 3,
       type => {msg, 'IntRange'}, occurrence => repeated,
       opts => []},
     #{name => allowOutOfOrderDelivery, fnum => 4, rnum => 4,
       type => bool, occurrence => optional,
       opts => [{default, false}]}];
find_msg_def('CommandSubscribe') ->
    [#{name => topic, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => subscription, fnum => 2, rnum => 3,
       type => string, occurrence => required, opts => []},
     #{name => subType, fnum => 3, rnum => 4,
       type => {enum, 'CommandSubscribe.SubType'},
       occurrence => required, opts => []},
     #{name => consumer_id, fnum => 4, rnum => 5,
       type => uint64, occurrence => required, opts => []},
     #{name => request_id, fnum => 5, rnum => 6,
       type => uint64, occurrence => required, opts => []},
     #{name => consumer_name, fnum => 6, rnum => 7,
       type => string, occurrence => optional, opts => []},
     #{name => priority_level, fnum => 7, rnum => 8,
       type => int32, occurrence => optional, opts => []},
     #{name => durable, fnum => 8, rnum => 9, type => bool,
       occurrence => optional, opts => [{default, true}]},
     #{name => start_message_id, fnum => 9, rnum => 10,
       type => {msg, 'MessageIdData'}, occurrence => optional,
       opts => []},
     #{name => metadata, fnum => 10, rnum => 11,
       type => {msg, 'KeyValue'}, occurrence => repeated,
       opts => []},
     #{name => read_compacted, fnum => 11, rnum => 12,
       type => bool, occurrence => optional, opts => []},
     #{name => schema, fnum => 12, rnum => 13,
       type => {msg, 'Schema'}, occurrence => optional,
       opts => []},
     #{name => initialPosition, fnum => 13, rnum => 14,
       type => {enum, 'CommandSubscribe.InitialPosition'},
       occurrence => optional, opts => [{default, 'Latest'}]},
     #{name => replicate_subscription_state, fnum => 14,
       rnum => 15, type => bool, occurrence => optional,
       opts => []},
     #{name => force_topic_creation, fnum => 15, rnum => 16,
       type => bool, occurrence => optional,
       opts => [{default, true}]},
     #{name => start_message_rollback_duration_sec,
       fnum => 16, rnum => 17, type => uint64,
       occurrence => optional, opts => [{default, 0}]},
     #{name => keySharedMeta, fnum => 17, rnum => 18,
       type => {msg, 'KeySharedMeta'}, occurrence => optional,
       opts => []}];
find_msg_def('CommandPartitionedTopicMetadata') ->
    [#{name => topic, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => original_principal, fnum => 3, rnum => 4,
       type => string, occurrence => optional, opts => []},
     #{name => original_auth_data, fnum => 4, rnum => 5,
       type => string, occurrence => optional, opts => []},
     #{name => original_auth_method, fnum => 5, rnum => 6,
       type => string, occurrence => optional, opts => []}];
find_msg_def('CommandPartitionedTopicMetadataResponse') ->
    [#{name => partitions, fnum => 1, rnum => 2,
       type => uint32, occurrence => optional, opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => response, fnum => 3, rnum => 4,
       type =>
           {enum,
            'CommandPartitionedTopicMetadataResponse.LookupType'},
       occurrence => optional, opts => []},
     #{name => error, fnum => 4, rnum => 5,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 5, rnum => 6, type => string,
       occurrence => optional, opts => []}];
find_msg_def('CommandLookupTopic') ->
    [#{name => topic, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => authoritative, fnum => 3, rnum => 4,
       type => bool, occurrence => optional,
       opts => [{default, false}]},
     #{name => original_principal, fnum => 4, rnum => 5,
       type => string, occurrence => optional, opts => []},
     #{name => original_auth_data, fnum => 5, rnum => 6,
       type => string, occurrence => optional, opts => []},
     #{name => original_auth_method, fnum => 6, rnum => 7,
       type => string, occurrence => optional, opts => []},
     #{name => advertised_listener_name, fnum => 7,
       rnum => 8, type => string, occurrence => optional,
       opts => []}];
find_msg_def('CommandLookupTopicResponse') ->
    [#{name => brokerServiceUrl, fnum => 1, rnum => 2,
       type => string, occurrence => optional, opts => []},
     #{name => brokerServiceUrlTls, fnum => 2, rnum => 3,
       type => string, occurrence => optional, opts => []},
     #{name => response, fnum => 3, rnum => 4,
       type => {enum, 'CommandLookupTopicResponse.LookupType'},
       occurrence => optional, opts => []},
     #{name => request_id, fnum => 4, rnum => 5,
       type => uint64, occurrence => required, opts => []},
     #{name => authoritative, fnum => 5, rnum => 6,
       type => bool, occurrence => optional,
       opts => [{default, false}]},
     #{name => error, fnum => 6, rnum => 7,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 7, rnum => 8, type => string,
       occurrence => optional, opts => []},
     #{name => proxy_through_service_url, fnum => 8,
       rnum => 9, type => bool, occurrence => optional,
       opts => [{default, false}]}];
find_msg_def('CommandProducer') ->
    [#{name => topic, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => producer_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => request_id, fnum => 3, rnum => 4,
       type => uint64, occurrence => required, opts => []},
     #{name => producer_name, fnum => 4, rnum => 5,
       type => string, occurrence => optional, opts => []},
     #{name => encrypted, fnum => 5, rnum => 6, type => bool,
       occurrence => optional, opts => [{default, false}]},
     #{name => metadata, fnum => 6, rnum => 7,
       type => {msg, 'KeyValue'}, occurrence => repeated,
       opts => []},
     #{name => schema, fnum => 7, rnum => 8,
       type => {msg, 'Schema'}, occurrence => optional,
       opts => []},
     #{name => epoch, fnum => 8, rnum => 9, type => uint64,
       occurrence => optional, opts => [{default, 0}]},
     #{name => user_provided_producer_name, fnum => 9,
       rnum => 10, type => bool, occurrence => optional,
       opts => [{default, true}]}];
find_msg_def('CommandSend') ->
    [#{name => producer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => sequence_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => num_messages, fnum => 3, rnum => 4,
       type => int32, occurrence => optional,
       opts => [{default, 1}]},
     #{name => txnid_least_bits, fnum => 4, rnum => 5,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 5, rnum => 6,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => highest_sequence_id, fnum => 6, rnum => 7,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => is_chunk, fnum => 7, rnum => 8, type => bool,
       occurrence => optional, opts => [{default, false}]}];
find_msg_def('CommandSendReceipt') ->
    [#{name => producer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => sequence_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => message_id, fnum => 3, rnum => 4,
       type => {msg, 'MessageIdData'}, occurrence => optional,
       opts => []},
     #{name => highest_sequence_id, fnum => 4, rnum => 5,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]}];
find_msg_def('CommandSendError') ->
    [#{name => producer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => sequence_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => error, fnum => 3, rnum => 4,
       type => {enum, 'ServerError'}, occurrence => required,
       opts => []},
     #{name => message, fnum => 4, rnum => 5, type => string,
       occurrence => required, opts => []}];
find_msg_def('CommandMessage') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => message_id, fnum => 2, rnum => 3,
       type => {msg, 'MessageIdData'}, occurrence => required,
       opts => []},
     #{name => redelivery_count, fnum => 3, rnum => 4,
       type => uint32, occurrence => optional,
       opts => [{default, 0}]},
     #{name => ack_set, fnum => 4, rnum => 5, type => int64,
       occurrence => repeated, opts => []}];
find_msg_def('CommandAck') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => ack_type, fnum => 2, rnum => 3,
       type => {enum, 'CommandAck.AckType'},
       occurrence => required, opts => []},
     #{name => message_id, fnum => 3, rnum => 4,
       type => {msg, 'MessageIdData'}, occurrence => repeated,
       opts => []},
     #{name => validation_error, fnum => 4, rnum => 5,
       type => {enum, 'CommandAck.ValidationError'},
       occurrence => optional, opts => []},
     #{name => properties, fnum => 5, rnum => 6,
       type => {msg, 'KeyLongValue'}, occurrence => repeated,
       opts => []},
     #{name => txnid_least_bits, fnum => 6, rnum => 7,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 7, rnum => 8,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => request_id, fnum => 8, rnum => 9,
       type => uint64, occurrence => optional, opts => []}];
find_msg_def('CommandAckResponse') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => error, fnum => 4, rnum => 5,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 5, rnum => 6, type => string,
       occurrence => optional, opts => []},
     #{name => request_id, fnum => 6, rnum => 7,
       type => uint64, occurrence => optional, opts => []}];
find_msg_def('CommandActiveConsumerChange') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => is_active, fnum => 2, rnum => 3, type => bool,
       occurrence => optional, opts => [{default, false}]}];
find_msg_def('CommandFlow') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => messagePermits, fnum => 2, rnum => 3,
       type => uint32, occurrence => required, opts => []}];
find_msg_def('CommandUnsubscribe') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []}];
find_msg_def('CommandSeek') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => message_id, fnum => 3, rnum => 4,
       type => {msg, 'MessageIdData'}, occurrence => optional,
       opts => []},
     #{name => message_publish_time, fnum => 4, rnum => 5,
       type => uint64, occurrence => optional, opts => []}];
find_msg_def('CommandReachedEndOfTopic') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []}];
find_msg_def('CommandCloseProducer') ->
    [#{name => producer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []}];
find_msg_def('CommandCloseConsumer') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []}];
find_msg_def('CommandRedeliverUnacknowledgedMessages') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => message_ids, fnum => 2, rnum => 3,
       type => {msg, 'MessageIdData'}, occurrence => repeated,
       opts => []}];
find_msg_def('CommandSuccess') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => schema, fnum => 2, rnum => 3,
       type => {msg, 'Schema'}, occurrence => optional,
       opts => []}];
find_msg_def('CommandProducerSuccess') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => producer_name, fnum => 2, rnum => 3,
       type => string, occurrence => required, opts => []},
     #{name => last_sequence_id, fnum => 3, rnum => 4,
       type => int64, occurrence => optional,
       opts => [{default, -1}]},
     #{name => schema_version, fnum => 4, rnum => 5,
       type => bytes, occurrence => optional, opts => []}];
find_msg_def('CommandError') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => error, fnum => 2, rnum => 3,
       type => {enum, 'ServerError'}, occurrence => required,
       opts => []},
     #{name => message, fnum => 3, rnum => 4, type => string,
       occurrence => required, opts => []}];
find_msg_def('CommandPing') -> [];
find_msg_def('CommandPong') -> [];
find_msg_def('CommandConsumerStats') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => consumer_id, fnum => 4, rnum => 3,
       type => uint64, occurrence => required, opts => []}];
find_msg_def('CommandConsumerStatsResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => error_code, fnum => 2, rnum => 3,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => error_message, fnum => 3, rnum => 4,
       type => string, occurrence => optional, opts => []},
     #{name => msgRateOut, fnum => 4, rnum => 5,
       type => double, occurrence => optional, opts => []},
     #{name => msgThroughputOut, fnum => 5, rnum => 6,
       type => double, occurrence => optional, opts => []},
     #{name => msgRateRedeliver, fnum => 6, rnum => 7,
       type => double, occurrence => optional, opts => []},
     #{name => consumerName, fnum => 7, rnum => 8,
       type => string, occurrence => optional, opts => []},
     #{name => availablePermits, fnum => 8, rnum => 9,
       type => uint64, occurrence => optional, opts => []},
     #{name => unackedMessages, fnum => 9, rnum => 10,
       type => uint64, occurrence => optional, opts => []},
     #{name => blockedConsumerOnUnackedMsgs, fnum => 10,
       rnum => 11, type => bool, occurrence => optional,
       opts => []},
     #{name => address, fnum => 11, rnum => 12,
       type => string, occurrence => optional, opts => []},
     #{name => connectedSince, fnum => 12, rnum => 13,
       type => string, occurrence => optional, opts => []},
     #{name => type, fnum => 13, rnum => 14, type => string,
       occurrence => optional, opts => []},
     #{name => msgRateExpired, fnum => 14, rnum => 15,
       type => double, occurrence => optional, opts => []},
     #{name => msgBacklog, fnum => 15, rnum => 16,
       type => uint64, occurrence => optional, opts => []}];
find_msg_def('CommandGetLastMessageId') ->
    [#{name => consumer_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []}];
find_msg_def('CommandGetLastMessageIdResponse') ->
    [#{name => last_message_id, fnum => 1, rnum => 2,
       type => {msg, 'MessageIdData'}, occurrence => required,
       opts => []},
     #{name => request_id, fnum => 2, rnum => 3,
       type => uint64, occurrence => required, opts => []},
     #{name => consumer_mark_delete_position, fnum => 3,
       rnum => 4, type => {msg, 'MessageIdData'},
       occurrence => optional, opts => []}];
find_msg_def('CommandGetTopicsOfNamespace') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => namespace, fnum => 2, rnum => 3,
       type => string, occurrence => required, opts => []},
     #{name => mode, fnum => 3, rnum => 4,
       type => {enum, 'CommandGetTopicsOfNamespace.Mode'},
       occurrence => optional,
       opts => [{default, 'PERSISTENT'}]}];
find_msg_def('CommandGetTopicsOfNamespaceResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => topics, fnum => 2, rnum => 3, type => string,
       occurrence => repeated, opts => []}];
find_msg_def('CommandGetSchema') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => topic, fnum => 2, rnum => 3, type => string,
       occurrence => required, opts => []},
     #{name => schema_version, fnum => 3, rnum => 4,
       type => bytes, occurrence => optional, opts => []}];
find_msg_def('CommandGetSchemaResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => error_code, fnum => 2, rnum => 3,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => error_message, fnum => 3, rnum => 4,
       type => string, occurrence => optional, opts => []},
     #{name => schema, fnum => 4, rnum => 5,
       type => {msg, 'Schema'}, occurrence => optional,
       opts => []},
     #{name => schema_version, fnum => 5, rnum => 6,
       type => bytes, occurrence => optional, opts => []}];
find_msg_def('CommandGetOrCreateSchema') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => topic, fnum => 2, rnum => 3, type => string,
       occurrence => required, opts => []},
     #{name => schema, fnum => 3, rnum => 4,
       type => {msg, 'Schema'}, occurrence => required,
       opts => []}];
find_msg_def('CommandGetOrCreateSchemaResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => error_code, fnum => 2, rnum => 3,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => error_message, fnum => 3, rnum => 4,
       type => string, occurrence => optional, opts => []},
     #{name => schema_version, fnum => 4, rnum => 5,
       type => bytes, occurrence => optional, opts => []}];
find_msg_def('CommandNewTxn') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txn_ttl_seconds, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => tc_id, fnum => 3, rnum => 4, type => uint64,
       occurrence => optional, opts => [{default, 0}]}];
find_msg_def('CommandNewTxnResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => error, fnum => 4, rnum => 5,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 5, rnum => 6, type => string,
       occurrence => optional, opts => []}];
find_msg_def('CommandAddPartitionToTxn') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => partitions, fnum => 4, rnum => 5,
       type => string, occurrence => repeated, opts => []}];
find_msg_def('CommandAddPartitionToTxnResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => error, fnum => 4, rnum => 5,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 5, rnum => 6, type => string,
       occurrence => optional, opts => []}];
find_msg_def('Subscription') ->
    [#{name => topic, fnum => 1, rnum => 2, type => string,
       occurrence => required, opts => []},
     #{name => subscription, fnum => 2, rnum => 3,
       type => string, occurrence => required, opts => []}];
find_msg_def('CommandAddSubscriptionToTxn') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => subscription, fnum => 4, rnum => 5,
       type => {msg, 'Subscription'}, occurrence => repeated,
       opts => []}];
find_msg_def('CommandAddSubscriptionToTxnResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => error, fnum => 4, rnum => 5,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 5, rnum => 6, type => string,
       occurrence => optional, opts => []}];
find_msg_def('CommandEndTxn') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txn_action, fnum => 4, rnum => 5,
       type => {enum, 'TxnAction'}, occurrence => optional,
       opts => []},
     #{name => message_id, fnum => 5, rnum => 6,
       type => {msg, 'MessageIdData'}, occurrence => repeated,
       opts => []}];
find_msg_def('CommandEndTxnResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => error, fnum => 4, rnum => 5,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 5, rnum => 6, type => string,
       occurrence => optional, opts => []}];
find_msg_def('CommandEndTxnOnPartition') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => topic, fnum => 4, rnum => 5, type => string,
       occurrence => optional, opts => []},
     #{name => txn_action, fnum => 5, rnum => 6,
       type => {enum, 'TxnAction'}, occurrence => optional,
       opts => []},
     #{name => message_id, fnum => 6, rnum => 7,
       type => {msg, 'MessageIdData'}, occurrence => repeated,
       opts => []}];
find_msg_def('CommandEndTxnOnPartitionResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => error, fnum => 4, rnum => 5,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 5, rnum => 6, type => string,
       occurrence => optional, opts => []}];
find_msg_def('CommandEndTxnOnSubscription') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => subscription, fnum => 4, rnum => 5,
       type => {msg, 'Subscription'}, occurrence => optional,
       opts => []},
     #{name => txn_action, fnum => 5, rnum => 6,
       type => {enum, 'TxnAction'}, occurrence => optional,
       opts => []}];
find_msg_def('CommandEndTxnOnSubscriptionResponse') ->
    [#{name => request_id, fnum => 1, rnum => 2,
       type => uint64, occurrence => required, opts => []},
     #{name => txnid_least_bits, fnum => 2, rnum => 3,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => txnid_most_bits, fnum => 3, rnum => 4,
       type => uint64, occurrence => optional,
       opts => [{default, 0}]},
     #{name => error, fnum => 4, rnum => 5,
       type => {enum, 'ServerError'}, occurrence => optional,
       opts => []},
     #{name => message, fnum => 5, rnum => 6, type => string,
       occurrence => optional, opts => []}];
find_msg_def('BaseCommand') ->
    [#{name => type, fnum => 1, rnum => 2,
       type => {enum, 'BaseCommand.Type'},
       occurrence => required, opts => []},
     #{name => connect, fnum => 2, rnum => 3,
       type => {msg, 'CommandConnect'}, occurrence => optional,
       opts => []},
     #{name => connected, fnum => 3, rnum => 4,
       type => {msg, 'CommandConnected'},
       occurrence => optional, opts => []},
     #{name => subscribe, fnum => 4, rnum => 5,
       type => {msg, 'CommandSubscribe'},
       occurrence => optional, opts => []},
     #{name => producer, fnum => 5, rnum => 6,
       type => {msg, 'CommandProducer'},
       occurrence => optional, opts => []},
     #{name => send, fnum => 6, rnum => 7,
       type => {msg, 'CommandSend'}, occurrence => optional,
       opts => []},
     #{name => send_receipt, fnum => 7, rnum => 8,
       type => {msg, 'CommandSendReceipt'},
       occurrence => optional, opts => []},
     #{name => send_error, fnum => 8, rnum => 9,
       type => {msg, 'CommandSendError'},
       occurrence => optional, opts => []},
     #{name => message, fnum => 9, rnum => 10,
       type => {msg, 'CommandMessage'}, occurrence => optional,
       opts => []},
     #{name => ack, fnum => 10, rnum => 11,
       type => {msg, 'CommandAck'}, occurrence => optional,
       opts => []},
     #{name => flow, fnum => 11, rnum => 12,
       type => {msg, 'CommandFlow'}, occurrence => optional,
       opts => []},
     #{name => unsubscribe, fnum => 12, rnum => 13,
       type => {msg, 'CommandUnsubscribe'},
       occurrence => optional, opts => []},
     #{name => success, fnum => 13, rnum => 14,
       type => {msg, 'CommandSuccess'}, occurrence => optional,
       opts => []},
     #{name => error, fnum => 14, rnum => 15,
       type => {msg, 'CommandError'}, occurrence => optional,
       opts => []},
     #{name => close_producer, fnum => 15, rnum => 16,
       type => {msg, 'CommandCloseProducer'},
       occurrence => optional, opts => []},
     #{name => close_consumer, fnum => 16, rnum => 17,
       type => {msg, 'CommandCloseConsumer'},
       occurrence => optional, opts => []},
     #{name => producer_success, fnum => 17, rnum => 18,
       type => {msg, 'CommandProducerSuccess'},
       occurrence => optional, opts => []},
     #{name => ping, fnum => 18, rnum => 19,
       type => {msg, 'CommandPing'}, occurrence => optional,
       opts => []},
     #{name => pong, fnum => 19, rnum => 20,
       type => {msg, 'CommandPong'}, occurrence => optional,
       opts => []},
     #{name => redeliverUnacknowledgedMessages, fnum => 20,
       rnum => 21,
       type => {msg, 'CommandRedeliverUnacknowledgedMessages'},
       occurrence => optional, opts => []},
     #{name => partitionMetadata, fnum => 21, rnum => 22,
       type => {msg, 'CommandPartitionedTopicMetadata'},
       occurrence => optional, opts => []},
     #{name => partitionMetadataResponse, fnum => 22,
       rnum => 23,
       type =>
           {msg, 'CommandPartitionedTopicMetadataResponse'},
       occurrence => optional, opts => []},
     #{name => lookupTopic, fnum => 23, rnum => 24,
       type => {msg, 'CommandLookupTopic'},
       occurrence => optional, opts => []},
     #{name => lookupTopicResponse, fnum => 24, rnum => 25,
       type => {msg, 'CommandLookupTopicResponse'},
       occurrence => optional, opts => []},
     #{name => consumerStats, fnum => 25, rnum => 26,
       type => {msg, 'CommandConsumerStats'},
       occurrence => optional, opts => []},
     #{name => consumerStatsResponse, fnum => 26, rnum => 27,
       type => {msg, 'CommandConsumerStatsResponse'},
       occurrence => optional, opts => []},
     #{name => reachedEndOfTopic, fnum => 27, rnum => 28,
       type => {msg, 'CommandReachedEndOfTopic'},
       occurrence => optional, opts => []},
     #{name => seek, fnum => 28, rnum => 29,
       type => {msg, 'CommandSeek'}, occurrence => optional,
       opts => []},
     #{name => getLastMessageId, fnum => 29, rnum => 30,
       type => {msg, 'CommandGetLastMessageId'},
       occurrence => optional, opts => []},
     #{name => getLastMessageIdResponse, fnum => 30,
       rnum => 31,
       type => {msg, 'CommandGetLastMessageIdResponse'},
       occurrence => optional, opts => []},
     #{name => active_consumer_change, fnum => 31,
       rnum => 32,
       type => {msg, 'CommandActiveConsumerChange'},
       occurrence => optional, opts => []},
     #{name => getTopicsOfNamespace, fnum => 32, rnum => 33,
       type => {msg, 'CommandGetTopicsOfNamespace'},
       occurrence => optional, opts => []},
     #{name => getTopicsOfNamespaceResponse, fnum => 33,
       rnum => 34,
       type => {msg, 'CommandGetTopicsOfNamespaceResponse'},
       occurrence => optional, opts => []},
     #{name => getSchema, fnum => 34, rnum => 35,
       type => {msg, 'CommandGetSchema'},
       occurrence => optional, opts => []},
     #{name => getSchemaResponse, fnum => 35, rnum => 36,
       type => {msg, 'CommandGetSchemaResponse'},
       occurrence => optional, opts => []},
     #{name => authChallenge, fnum => 36, rnum => 37,
       type => {msg, 'CommandAuthChallenge'},
       occurrence => optional, opts => []},
     #{name => authResponse, fnum => 37, rnum => 38,
       type => {msg, 'CommandAuthResponse'},
       occurrence => optional, opts => []},
     #{name => ackResponse, fnum => 38, rnum => 39,
       type => {msg, 'CommandAckResponse'},
       occurrence => optional, opts => []},
     #{name => getOrCreateSchema, fnum => 39, rnum => 40,
       type => {msg, 'CommandGetOrCreateSchema'},
       occurrence => optional, opts => []},
     #{name => getOrCreateSchemaResponse, fnum => 40,
       rnum => 41,
       type => {msg, 'CommandGetOrCreateSchemaResponse'},
       occurrence => optional, opts => []},
     #{name => newTxn, fnum => 50, rnum => 42,
       type => {msg, 'CommandNewTxn'}, occurrence => optional,
       opts => []},
     #{name => newTxnResponse, fnum => 51, rnum => 43,
       type => {msg, 'CommandNewTxnResponse'},
       occurrence => optional, opts => []},
     #{name => addPartitionToTxn, fnum => 52, rnum => 44,
       type => {msg, 'CommandAddPartitionToTxn'},
       occurrence => optional, opts => []},
     #{name => addPartitionToTxnResponse, fnum => 53,
       rnum => 45,
       type => {msg, 'CommandAddPartitionToTxnResponse'},
       occurrence => optional, opts => []},
     #{name => addSubscriptionToTxn, fnum => 54, rnum => 46,
       type => {msg, 'CommandAddSubscriptionToTxn'},
       occurrence => optional, opts => []},
     #{name => addSubscriptionToTxnResponse, fnum => 55,
       rnum => 47,
       type => {msg, 'CommandAddSubscriptionToTxnResponse'},
       occurrence => optional, opts => []},
     #{name => endTxn, fnum => 56, rnum => 48,
       type => {msg, 'CommandEndTxn'}, occurrence => optional,
       opts => []},
     #{name => endTxnResponse, fnum => 57, rnum => 49,
       type => {msg, 'CommandEndTxnResponse'},
       occurrence => optional, opts => []},
     #{name => endTxnOnPartition, fnum => 58, rnum => 50,
       type => {msg, 'CommandEndTxnOnPartition'},
       occurrence => optional, opts => []},
     #{name => endTxnOnPartitionResponse, fnum => 59,
       rnum => 51,
       type => {msg, 'CommandEndTxnOnPartitionResponse'},
       occurrence => optional, opts => []},
     #{name => endTxnOnSubscription, fnum => 60, rnum => 52,
       type => {msg, 'CommandEndTxnOnSubscription'},
       occurrence => optional, opts => []},
     #{name => endTxnOnSubscriptionResponse, fnum => 61,
       rnum => 53,
       type => {msg, 'CommandEndTxnOnSubscriptionResponse'},
       occurrence => optional, opts => []}];
find_msg_def(_) -> error.


find_enum_def('Schema.Type') ->
    [{'None', 0},
     {'String', 1},
     {'Json', 2},
     {'Protobuf', 3},
     {'Avro', 4},
     {'Bool', 5},
     {'Int8', 6},
     {'Int16', 7},
     {'Int32', 8},
     {'Int64', 9},
     {'Float', 10},
     {'Double', 11},
     {'Date', 12},
     {'Time', 13},
     {'Timestamp', 14},
     {'KeyValue', 15},
     {'Instant', 16},
     {'LocalDate', 17},
     {'LocalTime', 18},
     {'LocalDateTime', 19},
     {'ProtobufNative', 20}];
find_enum_def('CompressionType') ->
    [{'NONE', 0},
     {'LZ4', 1},
     {'ZLIB', 2},
     {'ZSTD', 3},
     {'SNAPPY', 4}];
find_enum_def('ServerError') ->
    [{'UnknownError', 0},
     {'MetadataError', 1},
     {'PersistenceError', 2},
     {'AuthenticationError', 3},
     {'AuthorizationError', 4},
     {'ConsumerBusy', 5},
     {'ServiceNotReady', 6},
     {'ProducerBlockedQuotaExceededError', 7},
     {'ProducerBlockedQuotaExceededException', 8},
     {'ChecksumError', 9},
     {'UnsupportedVersionError', 10},
     {'TopicNotFound', 11},
     {'SubscriptionNotFound', 12},
     {'ConsumerNotFound', 13},
     {'TooManyRequests', 14},
     {'TopicTerminatedError', 15},
     {'ProducerBusy', 16},
     {'InvalidTopicName', 17},
     {'IncompatibleSchema', 18},
     {'ConsumerAssignError', 19},
     {'TransactionCoordinatorNotFound', 20},
     {'InvalidTxnStatus', 21},
     {'NotAllowedError', 22},
     {'TransactionConflict', 23},
     {'TransactionNotFound', 24}];
find_enum_def('AuthMethod') ->
    [{'AuthMethodNone', 0},
     {'AuthMethodYcaV1', 1},
     {'AuthMethodAthens', 2}];
find_enum_def('ProtocolVersion') ->
    [{v0, 0},
     {v1, 1},
     {v2, 2},
     {v3, 3},
     {v4, 4},
     {v5, 5},
     {v6, 6},
     {v7, 7},
     {v8, 8},
     {v9, 9},
     {v10, 10},
     {v11, 11},
     {v12, 12},
     {v13, 13},
     {v14, 14},
     {v15, 15}];
find_enum_def('KeySharedMode') ->
    [{'AUTO_SPLIT', 0}, {'STICKY', 1}];
find_enum_def('CommandSubscribe.SubType') ->
    [{'Exclusive', 0},
     {'Shared', 1},
     {'Failover', 2},
     {'Key_Shared', 3}];
find_enum_def('CommandSubscribe.InitialPosition') ->
    [{'Latest', 0}, {'Earliest', 1}];
find_enum_def('CommandPartitionedTopicMetadataResponse.LookupType') ->
    [{'Success', 0}, {'Failed', 1}];
find_enum_def('CommandLookupTopicResponse.LookupType') ->
    [{'Redirect', 0}, {'Connect', 1}, {'Failed', 2}];
find_enum_def('CommandAck.AckType') ->
    [{'Individual', 0}, {'Cumulative', 1}];
find_enum_def('CommandAck.ValidationError') ->
    [{'UncompressedSizeCorruption', 0},
     {'DecompressionError', 1},
     {'ChecksumMismatch', 2},
     {'BatchDeSerializeError', 3},
     {'DecryptionError', 4}];
find_enum_def('CommandGetTopicsOfNamespace.Mode') ->
    [{'PERSISTENT', 0}, {'NON_PERSISTENT', 1}, {'ALL', 2}];
find_enum_def('TxnAction') ->
    [{'COMMIT', 0}, {'ABORT', 1}];
find_enum_def('BaseCommand.Type') ->
    [{'CONNECT', 2},
     {'CONNECTED', 3},
     {'SUBSCRIBE', 4},
     {'PRODUCER', 5},
     {'SEND', 6},
     {'SEND_RECEIPT', 7},
     {'SEND_ERROR', 8},
     {'MESSAGE', 9},
     {'ACK', 10},
     {'FLOW', 11},
     {'UNSUBSCRIBE', 12},
     {'SUCCESS', 13},
     {'ERROR', 14},
     {'CLOSE_PRODUCER', 15},
     {'CLOSE_CONSUMER', 16},
     {'PRODUCER_SUCCESS', 17},
     {'PING', 18},
     {'PONG', 19},
     {'REDELIVER_UNACKNOWLEDGED_MESSAGES', 20},
     {'PARTITIONED_METADATA', 21},
     {'PARTITIONED_METADATA_RESPONSE', 22},
     {'LOOKUP', 23},
     {'LOOKUP_RESPONSE', 24},
     {'CONSUMER_STATS', 25},
     {'CONSUMER_STATS_RESPONSE', 26},
     {'REACHED_END_OF_TOPIC', 27},
     {'SEEK', 28},
     {'GET_LAST_MESSAGE_ID', 29},
     {'GET_LAST_MESSAGE_ID_RESPONSE', 30},
     {'ACTIVE_CONSUMER_CHANGE', 31},
     {'GET_TOPICS_OF_NAMESPACE', 32},
     {'GET_TOPICS_OF_NAMESPACE_RESPONSE', 33},
     {'GET_SCHEMA', 34},
     {'GET_SCHEMA_RESPONSE', 35},
     {'AUTH_CHALLENGE', 36},
     {'AUTH_RESPONSE', 37},
     {'ACK_RESPONSE', 38},
     {'GET_OR_CREATE_SCHEMA', 39},
     {'GET_OR_CREATE_SCHEMA_RESPONSE', 40},
     {'NEW_TXN', 50},
     {'NEW_TXN_RESPONSE', 51},
     {'ADD_PARTITION_TO_TXN', 52},
     {'ADD_PARTITION_TO_TXN_RESPONSE', 53},
     {'ADD_SUBSCRIPTION_TO_TXN', 54},
     {'ADD_SUBSCRIPTION_TO_TXN_RESPONSE', 55},
     {'END_TXN', 56},
     {'END_TXN_RESPONSE', 57},
     {'END_TXN_ON_PARTITION', 58},
     {'END_TXN_ON_PARTITION_RESPONSE', 59},
     {'END_TXN_ON_SUBSCRIPTION', 60},
     {'END_TXN_ON_SUBSCRIPTION_RESPONSE', 61}];
find_enum_def(_) -> error.


enum_symbol_by_value('Schema.Type', Value) ->
    'enum_symbol_by_value_Schema.Type'(Value);
enum_symbol_by_value('CompressionType', Value) ->
    enum_symbol_by_value_CompressionType(Value);
enum_symbol_by_value('ServerError', Value) ->
    enum_symbol_by_value_ServerError(Value);
enum_symbol_by_value('AuthMethod', Value) ->
    enum_symbol_by_value_AuthMethod(Value);
enum_symbol_by_value('ProtocolVersion', Value) ->
    enum_symbol_by_value_ProtocolVersion(Value);
enum_symbol_by_value('KeySharedMode', Value) ->
    enum_symbol_by_value_KeySharedMode(Value);
enum_symbol_by_value('CommandSubscribe.SubType',
                     Value) ->
    'enum_symbol_by_value_CommandSubscribe.SubType'(Value);
enum_symbol_by_value('CommandSubscribe.InitialPosition',
                     Value) ->
    'enum_symbol_by_value_CommandSubscribe.InitialPosition'(Value);
enum_symbol_by_value('CommandPartitionedTopicMetadataResponse.LookupType',
                     Value) ->
    'enum_symbol_by_value_CommandPartitionedTopicMetadataResponse.LookupType'(Value);
enum_symbol_by_value('CommandLookupTopicResponse.LookupType',
                     Value) ->
    'enum_symbol_by_value_CommandLookupTopicResponse.LookupType'(Value);
enum_symbol_by_value('CommandAck.AckType', Value) ->
    'enum_symbol_by_value_CommandAck.AckType'(Value);
enum_symbol_by_value('CommandAck.ValidationError',
                     Value) ->
    'enum_symbol_by_value_CommandAck.ValidationError'(Value);
enum_symbol_by_value('CommandGetTopicsOfNamespace.Mode',
                     Value) ->
    'enum_symbol_by_value_CommandGetTopicsOfNamespace.Mode'(Value);
enum_symbol_by_value('TxnAction', Value) ->
    enum_symbol_by_value_TxnAction(Value);
enum_symbol_by_value('BaseCommand.Type', Value) ->
    'enum_symbol_by_value_BaseCommand.Type'(Value).


enum_value_by_symbol('Schema.Type', Sym) ->
    'enum_value_by_symbol_Schema.Type'(Sym);
enum_value_by_symbol('CompressionType', Sym) ->
    enum_value_by_symbol_CompressionType(Sym);
enum_value_by_symbol('ServerError', Sym) ->
    enum_value_by_symbol_ServerError(Sym);
enum_value_by_symbol('AuthMethod', Sym) ->
    enum_value_by_symbol_AuthMethod(Sym);
enum_value_by_symbol('ProtocolVersion', Sym) ->
    enum_value_by_symbol_ProtocolVersion(Sym);
enum_value_by_symbol('KeySharedMode', Sym) ->
    enum_value_by_symbol_KeySharedMode(Sym);
enum_value_by_symbol('CommandSubscribe.SubType', Sym) ->
    'enum_value_by_symbol_CommandSubscribe.SubType'(Sym);
enum_value_by_symbol('CommandSubscribe.InitialPosition',
                     Sym) ->
    'enum_value_by_symbol_CommandSubscribe.InitialPosition'(Sym);
enum_value_by_symbol('CommandPartitionedTopicMetadataResponse.LookupType',
                     Sym) ->
    'enum_value_by_symbol_CommandPartitionedTopicMetadataResponse.LookupType'(Sym);
enum_value_by_symbol('CommandLookupTopicResponse.LookupType',
                     Sym) ->
    'enum_value_by_symbol_CommandLookupTopicResponse.LookupType'(Sym);
enum_value_by_symbol('CommandAck.AckType', Sym) ->
    'enum_value_by_symbol_CommandAck.AckType'(Sym);
enum_value_by_symbol('CommandAck.ValidationError',
                     Sym) ->
    'enum_value_by_symbol_CommandAck.ValidationError'(Sym);
enum_value_by_symbol('CommandGetTopicsOfNamespace.Mode',
                     Sym) ->
    'enum_value_by_symbol_CommandGetTopicsOfNamespace.Mode'(Sym);
enum_value_by_symbol('TxnAction', Sym) ->
    enum_value_by_symbol_TxnAction(Sym);
enum_value_by_symbol('BaseCommand.Type', Sym) ->
    'enum_value_by_symbol_BaseCommand.Type'(Sym).


'enum_symbol_by_value_Schema.Type'(0) -> 'None';
'enum_symbol_by_value_Schema.Type'(1) -> 'String';
'enum_symbol_by_value_Schema.Type'(2) -> 'Json';
'enum_symbol_by_value_Schema.Type'(3) -> 'Protobuf';
'enum_symbol_by_value_Schema.Type'(4) -> 'Avro';
'enum_symbol_by_value_Schema.Type'(5) -> 'Bool';
'enum_symbol_by_value_Schema.Type'(6) -> 'Int8';
'enum_symbol_by_value_Schema.Type'(7) -> 'Int16';
'enum_symbol_by_value_Schema.Type'(8) -> 'Int32';
'enum_symbol_by_value_Schema.Type'(9) -> 'Int64';
'enum_symbol_by_value_Schema.Type'(10) -> 'Float';
'enum_symbol_by_value_Schema.Type'(11) -> 'Double';
'enum_symbol_by_value_Schema.Type'(12) -> 'Date';
'enum_symbol_by_value_Schema.Type'(13) -> 'Time';
'enum_symbol_by_value_Schema.Type'(14) -> 'Timestamp';
'enum_symbol_by_value_Schema.Type'(15) -> 'KeyValue';
'enum_symbol_by_value_Schema.Type'(16) -> 'Instant';
'enum_symbol_by_value_Schema.Type'(17) -> 'LocalDate';
'enum_symbol_by_value_Schema.Type'(18) -> 'LocalTime';
'enum_symbol_by_value_Schema.Type'(19) ->
    'LocalDateTime';
'enum_symbol_by_value_Schema.Type'(20) ->
    'ProtobufNative'.


'enum_value_by_symbol_Schema.Type'('None') -> 0;
'enum_value_by_symbol_Schema.Type'('String') -> 1;
'enum_value_by_symbol_Schema.Type'('Json') -> 2;
'enum_value_by_symbol_Schema.Type'('Protobuf') -> 3;
'enum_value_by_symbol_Schema.Type'('Avro') -> 4;
'enum_value_by_symbol_Schema.Type'('Bool') -> 5;
'enum_value_by_symbol_Schema.Type'('Int8') -> 6;
'enum_value_by_symbol_Schema.Type'('Int16') -> 7;
'enum_value_by_symbol_Schema.Type'('Int32') -> 8;
'enum_value_by_symbol_Schema.Type'('Int64') -> 9;
'enum_value_by_symbol_Schema.Type'('Float') -> 10;
'enum_value_by_symbol_Schema.Type'('Double') -> 11;
'enum_value_by_symbol_Schema.Type'('Date') -> 12;
'enum_value_by_symbol_Schema.Type'('Time') -> 13;
'enum_value_by_symbol_Schema.Type'('Timestamp') -> 14;
'enum_value_by_symbol_Schema.Type'('KeyValue') -> 15;
'enum_value_by_symbol_Schema.Type'('Instant') -> 16;
'enum_value_by_symbol_Schema.Type'('LocalDate') -> 17;
'enum_value_by_symbol_Schema.Type'('LocalTime') -> 18;
'enum_value_by_symbol_Schema.Type'('LocalDateTime') ->
    19;
'enum_value_by_symbol_Schema.Type'('ProtobufNative') ->
    20.

enum_symbol_by_value_CompressionType(0) -> 'NONE';
enum_symbol_by_value_CompressionType(1) -> 'LZ4';
enum_symbol_by_value_CompressionType(2) -> 'ZLIB';
enum_symbol_by_value_CompressionType(3) -> 'ZSTD';
enum_symbol_by_value_CompressionType(4) -> 'SNAPPY'.


enum_value_by_symbol_CompressionType('NONE') -> 0;
enum_value_by_symbol_CompressionType('LZ4') -> 1;
enum_value_by_symbol_CompressionType('ZLIB') -> 2;
enum_value_by_symbol_CompressionType('ZSTD') -> 3;
enum_value_by_symbol_CompressionType('SNAPPY') -> 4.

enum_symbol_by_value_ServerError(0) -> 'UnknownError';
enum_symbol_by_value_ServerError(1) -> 'MetadataError';
enum_symbol_by_value_ServerError(2) ->
    'PersistenceError';
enum_symbol_by_value_ServerError(3) ->
    'AuthenticationError';
enum_symbol_by_value_ServerError(4) ->
    'AuthorizationError';
enum_symbol_by_value_ServerError(5) -> 'ConsumerBusy';
enum_symbol_by_value_ServerError(6) ->
    'ServiceNotReady';
enum_symbol_by_value_ServerError(7) ->
    'ProducerBlockedQuotaExceededError';
enum_symbol_by_value_ServerError(8) ->
    'ProducerBlockedQuotaExceededException';
enum_symbol_by_value_ServerError(9) -> 'ChecksumError';
enum_symbol_by_value_ServerError(10) ->
    'UnsupportedVersionError';
enum_symbol_by_value_ServerError(11) -> 'TopicNotFound';
enum_symbol_by_value_ServerError(12) ->
    'SubscriptionNotFound';
enum_symbol_by_value_ServerError(13) ->
    'ConsumerNotFound';
enum_symbol_by_value_ServerError(14) ->
    'TooManyRequests';
enum_symbol_by_value_ServerError(15) ->
    'TopicTerminatedError';
enum_symbol_by_value_ServerError(16) -> 'ProducerBusy';
enum_symbol_by_value_ServerError(17) ->
    'InvalidTopicName';
enum_symbol_by_value_ServerError(18) ->
    'IncompatibleSchema';
enum_symbol_by_value_ServerError(19) ->
    'ConsumerAssignError';
enum_symbol_by_value_ServerError(20) ->
    'TransactionCoordinatorNotFound';
enum_symbol_by_value_ServerError(21) ->
    'InvalidTxnStatus';
enum_symbol_by_value_ServerError(22) ->
    'NotAllowedError';
enum_symbol_by_value_ServerError(23) ->
    'TransactionConflict';
enum_symbol_by_value_ServerError(24) ->
    'TransactionNotFound'.


enum_value_by_symbol_ServerError('UnknownError') -> 0;
enum_value_by_symbol_ServerError('MetadataError') -> 1;
enum_value_by_symbol_ServerError('PersistenceError') ->
    2;
enum_value_by_symbol_ServerError('AuthenticationError') ->
    3;
enum_value_by_symbol_ServerError('AuthorizationError') ->
    4;
enum_value_by_symbol_ServerError('ConsumerBusy') -> 5;
enum_value_by_symbol_ServerError('ServiceNotReady') ->
    6;
enum_value_by_symbol_ServerError('ProducerBlockedQuotaExceededError') ->
    7;
enum_value_by_symbol_ServerError('ProducerBlockedQuotaExceededException') ->
    8;
enum_value_by_symbol_ServerError('ChecksumError') -> 9;
enum_value_by_symbol_ServerError('UnsupportedVersionError') ->
    10;
enum_value_by_symbol_ServerError('TopicNotFound') -> 11;
enum_value_by_symbol_ServerError('SubscriptionNotFound') ->
    12;
enum_value_by_symbol_ServerError('ConsumerNotFound') ->
    13;
enum_value_by_symbol_ServerError('TooManyRequests') ->
    14;
enum_value_by_symbol_ServerError('TopicTerminatedError') ->
    15;
enum_value_by_symbol_ServerError('ProducerBusy') -> 16;
enum_value_by_symbol_ServerError('InvalidTopicName') ->
    17;
enum_value_by_symbol_ServerError('IncompatibleSchema') ->
    18;
enum_value_by_symbol_ServerError('ConsumerAssignError') ->
    19;
enum_value_by_symbol_ServerError('TransactionCoordinatorNotFound') ->
    20;
enum_value_by_symbol_ServerError('InvalidTxnStatus') ->
    21;
enum_value_by_symbol_ServerError('NotAllowedError') ->
    22;
enum_value_by_symbol_ServerError('TransactionConflict') ->
    23;
enum_value_by_symbol_ServerError('TransactionNotFound') ->
    24.

enum_symbol_by_value_AuthMethod(0) -> 'AuthMethodNone';
enum_symbol_by_value_AuthMethod(1) -> 'AuthMethodYcaV1';
enum_symbol_by_value_AuthMethod(2) ->
    'AuthMethodAthens'.


enum_value_by_symbol_AuthMethod('AuthMethodNone') -> 0;
enum_value_by_symbol_AuthMethod('AuthMethodYcaV1') -> 1;
enum_value_by_symbol_AuthMethod('AuthMethodAthens') ->
    2.

enum_symbol_by_value_ProtocolVersion(0) -> v0;
enum_symbol_by_value_ProtocolVersion(1) -> v1;
enum_symbol_by_value_ProtocolVersion(2) -> v2;
enum_symbol_by_value_ProtocolVersion(3) -> v3;
enum_symbol_by_value_ProtocolVersion(4) -> v4;
enum_symbol_by_value_ProtocolVersion(5) -> v5;
enum_symbol_by_value_ProtocolVersion(6) -> v6;
enum_symbol_by_value_ProtocolVersion(7) -> v7;
enum_symbol_by_value_ProtocolVersion(8) -> v8;
enum_symbol_by_value_ProtocolVersion(9) -> v9;
enum_symbol_by_value_ProtocolVersion(10) -> v10;
enum_symbol_by_value_ProtocolVersion(11) -> v11;
enum_symbol_by_value_ProtocolVersion(12) -> v12;
enum_symbol_by_value_ProtocolVersion(13) -> v13;
enum_symbol_by_value_ProtocolVersion(14) -> v14;
enum_symbol_by_value_ProtocolVersion(15) -> v15.


enum_value_by_symbol_ProtocolVersion(v0) -> 0;
enum_value_by_symbol_ProtocolVersion(v1) -> 1;
enum_value_by_symbol_ProtocolVersion(v2) -> 2;
enum_value_by_symbol_ProtocolVersion(v3) -> 3;
enum_value_by_symbol_ProtocolVersion(v4) -> 4;
enum_value_by_symbol_ProtocolVersion(v5) -> 5;
enum_value_by_symbol_ProtocolVersion(v6) -> 6;
enum_value_by_symbol_ProtocolVersion(v7) -> 7;
enum_value_by_symbol_ProtocolVersion(v8) -> 8;
enum_value_by_symbol_ProtocolVersion(v9) -> 9;
enum_value_by_symbol_ProtocolVersion(v10) -> 10;
enum_value_by_symbol_ProtocolVersion(v11) -> 11;
enum_value_by_symbol_ProtocolVersion(v12) -> 12;
enum_value_by_symbol_ProtocolVersion(v13) -> 13;
enum_value_by_symbol_ProtocolVersion(v14) -> 14;
enum_value_by_symbol_ProtocolVersion(v15) -> 15.

enum_symbol_by_value_KeySharedMode(0) -> 'AUTO_SPLIT';
enum_symbol_by_value_KeySharedMode(1) -> 'STICKY'.


enum_value_by_symbol_KeySharedMode('AUTO_SPLIT') -> 0;
enum_value_by_symbol_KeySharedMode('STICKY') -> 1.

'enum_symbol_by_value_CommandSubscribe.SubType'(0) ->
    'Exclusive';
'enum_symbol_by_value_CommandSubscribe.SubType'(1) ->
    'Shared';
'enum_symbol_by_value_CommandSubscribe.SubType'(2) ->
    'Failover';
'enum_symbol_by_value_CommandSubscribe.SubType'(3) ->
    'Key_Shared'.


'enum_value_by_symbol_CommandSubscribe.SubType'('Exclusive') ->
    0;
'enum_value_by_symbol_CommandSubscribe.SubType'('Shared') ->
    1;
'enum_value_by_symbol_CommandSubscribe.SubType'('Failover') ->
    2;
'enum_value_by_symbol_CommandSubscribe.SubType'('Key_Shared') ->
    3.

'enum_symbol_by_value_CommandSubscribe.InitialPosition'(0) ->
    'Latest';
'enum_symbol_by_value_CommandSubscribe.InitialPosition'(1) ->
    'Earliest'.


'enum_value_by_symbol_CommandSubscribe.InitialPosition'('Latest') ->
    0;
'enum_value_by_symbol_CommandSubscribe.InitialPosition'('Earliest') ->
    1.

'enum_symbol_by_value_CommandPartitionedTopicMetadataResponse.LookupType'(0) ->
    'Success';
'enum_symbol_by_value_CommandPartitionedTopicMetadataResponse.LookupType'(1) ->
    'Failed'.


'enum_value_by_symbol_CommandPartitionedTopicMetadataResponse.LookupType'('Success') ->
    0;
'enum_value_by_symbol_CommandPartitionedTopicMetadataResponse.LookupType'('Failed') ->
    1.

'enum_symbol_by_value_CommandLookupTopicResponse.LookupType'(0) ->
    'Redirect';
'enum_symbol_by_value_CommandLookupTopicResponse.LookupType'(1) ->
    'Connect';
'enum_symbol_by_value_CommandLookupTopicResponse.LookupType'(2) ->
    'Failed'.


'enum_value_by_symbol_CommandLookupTopicResponse.LookupType'('Redirect') ->
    0;
'enum_value_by_symbol_CommandLookupTopicResponse.LookupType'('Connect') ->
    1;
'enum_value_by_symbol_CommandLookupTopicResponse.LookupType'('Failed') ->
    2.

'enum_symbol_by_value_CommandAck.AckType'(0) ->
    'Individual';
'enum_symbol_by_value_CommandAck.AckType'(1) ->
    'Cumulative'.


'enum_value_by_symbol_CommandAck.AckType'('Individual') ->
    0;
'enum_value_by_symbol_CommandAck.AckType'('Cumulative') ->
    1.

'enum_symbol_by_value_CommandAck.ValidationError'(0) ->
    'UncompressedSizeCorruption';
'enum_symbol_by_value_CommandAck.ValidationError'(1) ->
    'DecompressionError';
'enum_symbol_by_value_CommandAck.ValidationError'(2) ->
    'ChecksumMismatch';
'enum_symbol_by_value_CommandAck.ValidationError'(3) ->
    'BatchDeSerializeError';
'enum_symbol_by_value_CommandAck.ValidationError'(4) ->
    'DecryptionError'.


'enum_value_by_symbol_CommandAck.ValidationError'('UncompressedSizeCorruption') ->
    0;
'enum_value_by_symbol_CommandAck.ValidationError'('DecompressionError') ->
    1;
'enum_value_by_symbol_CommandAck.ValidationError'('ChecksumMismatch') ->
    2;
'enum_value_by_symbol_CommandAck.ValidationError'('BatchDeSerializeError') ->
    3;
'enum_value_by_symbol_CommandAck.ValidationError'('DecryptionError') ->
    4.

'enum_symbol_by_value_CommandGetTopicsOfNamespace.Mode'(0) ->
    'PERSISTENT';
'enum_symbol_by_value_CommandGetTopicsOfNamespace.Mode'(1) ->
    'NON_PERSISTENT';
'enum_symbol_by_value_CommandGetTopicsOfNamespace.Mode'(2) ->
    'ALL'.


'enum_value_by_symbol_CommandGetTopicsOfNamespace.Mode'('PERSISTENT') ->
    0;
'enum_value_by_symbol_CommandGetTopicsOfNamespace.Mode'('NON_PERSISTENT') ->
    1;
'enum_value_by_symbol_CommandGetTopicsOfNamespace.Mode'('ALL') ->
    2.

enum_symbol_by_value_TxnAction(0) -> 'COMMIT';
enum_symbol_by_value_TxnAction(1) -> 'ABORT'.


enum_value_by_symbol_TxnAction('COMMIT') -> 0;
enum_value_by_symbol_TxnAction('ABORT') -> 1.

'enum_symbol_by_value_BaseCommand.Type'(2) -> 'CONNECT';
'enum_symbol_by_value_BaseCommand.Type'(3) ->
    'CONNECTED';
'enum_symbol_by_value_BaseCommand.Type'(4) ->
    'SUBSCRIBE';
'enum_symbol_by_value_BaseCommand.Type'(5) ->
    'PRODUCER';
'enum_symbol_by_value_BaseCommand.Type'(6) -> 'SEND';
'enum_symbol_by_value_BaseCommand.Type'(7) ->
    'SEND_RECEIPT';
'enum_symbol_by_value_BaseCommand.Type'(8) ->
    'SEND_ERROR';
'enum_symbol_by_value_BaseCommand.Type'(9) -> 'MESSAGE';
'enum_symbol_by_value_BaseCommand.Type'(10) -> 'ACK';
'enum_symbol_by_value_BaseCommand.Type'(11) -> 'FLOW';
'enum_symbol_by_value_BaseCommand.Type'(12) ->
    'UNSUBSCRIBE';
'enum_symbol_by_value_BaseCommand.Type'(13) ->
    'SUCCESS';
'enum_symbol_by_value_BaseCommand.Type'(14) -> 'ERROR';
'enum_symbol_by_value_BaseCommand.Type'(15) ->
    'CLOSE_PRODUCER';
'enum_symbol_by_value_BaseCommand.Type'(16) ->
    'CLOSE_CONSUMER';
'enum_symbol_by_value_BaseCommand.Type'(17) ->
    'PRODUCER_SUCCESS';
'enum_symbol_by_value_BaseCommand.Type'(18) -> 'PING';
'enum_symbol_by_value_BaseCommand.Type'(19) -> 'PONG';
'enum_symbol_by_value_BaseCommand.Type'(20) ->
    'REDELIVER_UNACKNOWLEDGED_MESSAGES';
'enum_symbol_by_value_BaseCommand.Type'(21) ->
    'PARTITIONED_METADATA';
'enum_symbol_by_value_BaseCommand.Type'(22) ->
    'PARTITIONED_METADATA_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(23) -> 'LOOKUP';
'enum_symbol_by_value_BaseCommand.Type'(24) ->
    'LOOKUP_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(25) ->
    'CONSUMER_STATS';
'enum_symbol_by_value_BaseCommand.Type'(26) ->
    'CONSUMER_STATS_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(27) ->
    'REACHED_END_OF_TOPIC';
'enum_symbol_by_value_BaseCommand.Type'(28) -> 'SEEK';
'enum_symbol_by_value_BaseCommand.Type'(29) ->
    'GET_LAST_MESSAGE_ID';
'enum_symbol_by_value_BaseCommand.Type'(30) ->
    'GET_LAST_MESSAGE_ID_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(31) ->
    'ACTIVE_CONSUMER_CHANGE';
'enum_symbol_by_value_BaseCommand.Type'(32) ->
    'GET_TOPICS_OF_NAMESPACE';
'enum_symbol_by_value_BaseCommand.Type'(33) ->
    'GET_TOPICS_OF_NAMESPACE_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(34) ->
    'GET_SCHEMA';
'enum_symbol_by_value_BaseCommand.Type'(35) ->
    'GET_SCHEMA_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(36) ->
    'AUTH_CHALLENGE';
'enum_symbol_by_value_BaseCommand.Type'(37) ->
    'AUTH_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(38) ->
    'ACK_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(39) ->
    'GET_OR_CREATE_SCHEMA';
'enum_symbol_by_value_BaseCommand.Type'(40) ->
    'GET_OR_CREATE_SCHEMA_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(50) ->
    'NEW_TXN';
'enum_symbol_by_value_BaseCommand.Type'(51) ->
    'NEW_TXN_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(52) ->
    'ADD_PARTITION_TO_TXN';
'enum_symbol_by_value_BaseCommand.Type'(53) ->
    'ADD_PARTITION_TO_TXN_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(54) ->
    'ADD_SUBSCRIPTION_TO_TXN';
'enum_symbol_by_value_BaseCommand.Type'(55) ->
    'ADD_SUBSCRIPTION_TO_TXN_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(56) ->
    'END_TXN';
'enum_symbol_by_value_BaseCommand.Type'(57) ->
    'END_TXN_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(58) ->
    'END_TXN_ON_PARTITION';
'enum_symbol_by_value_BaseCommand.Type'(59) ->
    'END_TXN_ON_PARTITION_RESPONSE';
'enum_symbol_by_value_BaseCommand.Type'(60) ->
    'END_TXN_ON_SUBSCRIPTION';
'enum_symbol_by_value_BaseCommand.Type'(61) ->
    'END_TXN_ON_SUBSCRIPTION_RESPONSE'.


'enum_value_by_symbol_BaseCommand.Type'('CONNECT') -> 2;
'enum_value_by_symbol_BaseCommand.Type'('CONNECTED') ->
    3;
'enum_value_by_symbol_BaseCommand.Type'('SUBSCRIBE') ->
    4;
'enum_value_by_symbol_BaseCommand.Type'('PRODUCER') ->
    5;
'enum_value_by_symbol_BaseCommand.Type'('SEND') -> 6;
'enum_value_by_symbol_BaseCommand.Type'('SEND_RECEIPT') ->
    7;
'enum_value_by_symbol_BaseCommand.Type'('SEND_ERROR') ->
    8;
'enum_value_by_symbol_BaseCommand.Type'('MESSAGE') -> 9;
'enum_value_by_symbol_BaseCommand.Type'('ACK') -> 10;
'enum_value_by_symbol_BaseCommand.Type'('FLOW') -> 11;
'enum_value_by_symbol_BaseCommand.Type'('UNSUBSCRIBE') ->
    12;
'enum_value_by_symbol_BaseCommand.Type'('SUCCESS') ->
    13;
'enum_value_by_symbol_BaseCommand.Type'('ERROR') -> 14;
'enum_value_by_symbol_BaseCommand.Type'('CLOSE_PRODUCER') ->
    15;
'enum_value_by_symbol_BaseCommand.Type'('CLOSE_CONSUMER') ->
    16;
'enum_value_by_symbol_BaseCommand.Type'('PRODUCER_SUCCESS') ->
    17;
'enum_value_by_symbol_BaseCommand.Type'('PING') -> 18;
'enum_value_by_symbol_BaseCommand.Type'('PONG') -> 19;
'enum_value_by_symbol_BaseCommand.Type'('REDELIVER_UNACKNOWLEDGED_MESSAGES') ->
    20;
'enum_value_by_symbol_BaseCommand.Type'('PARTITIONED_METADATA') ->
    21;
'enum_value_by_symbol_BaseCommand.Type'('PARTITIONED_METADATA_RESPONSE') ->
    22;
'enum_value_by_symbol_BaseCommand.Type'('LOOKUP') -> 23;
'enum_value_by_symbol_BaseCommand.Type'('LOOKUP_RESPONSE') ->
    24;
'enum_value_by_symbol_BaseCommand.Type'('CONSUMER_STATS') ->
    25;
'enum_value_by_symbol_BaseCommand.Type'('CONSUMER_STATS_RESPONSE') ->
    26;
'enum_value_by_symbol_BaseCommand.Type'('REACHED_END_OF_TOPIC') ->
    27;
'enum_value_by_symbol_BaseCommand.Type'('SEEK') -> 28;
'enum_value_by_symbol_BaseCommand.Type'('GET_LAST_MESSAGE_ID') ->
    29;
'enum_value_by_symbol_BaseCommand.Type'('GET_LAST_MESSAGE_ID_RESPONSE') ->
    30;
'enum_value_by_symbol_BaseCommand.Type'('ACTIVE_CONSUMER_CHANGE') ->
    31;
'enum_value_by_symbol_BaseCommand.Type'('GET_TOPICS_OF_NAMESPACE') ->
    32;
'enum_value_by_symbol_BaseCommand.Type'('GET_TOPICS_OF_NAMESPACE_RESPONSE') ->
    33;
'enum_value_by_symbol_BaseCommand.Type'('GET_SCHEMA') ->
    34;
'enum_value_by_symbol_BaseCommand.Type'('GET_SCHEMA_RESPONSE') ->
    35;
'enum_value_by_symbol_BaseCommand.Type'('AUTH_CHALLENGE') ->
    36;
'enum_value_by_symbol_BaseCommand.Type'('AUTH_RESPONSE') ->
    37;
'enum_value_by_symbol_BaseCommand.Type'('ACK_RESPONSE') ->
    38;
'enum_value_by_symbol_BaseCommand.Type'('GET_OR_CREATE_SCHEMA') ->
    39;
'enum_value_by_symbol_BaseCommand.Type'('GET_OR_CREATE_SCHEMA_RESPONSE') ->
    40;
'enum_value_by_symbol_BaseCommand.Type'('NEW_TXN') ->
    50;
'enum_value_by_symbol_BaseCommand.Type'('NEW_TXN_RESPONSE') ->
    51;
'enum_value_by_symbol_BaseCommand.Type'('ADD_PARTITION_TO_TXN') ->
    52;
'enum_value_by_symbol_BaseCommand.Type'('ADD_PARTITION_TO_TXN_RESPONSE') ->
    53;
'enum_value_by_symbol_BaseCommand.Type'('ADD_SUBSCRIPTION_TO_TXN') ->
    54;
'enum_value_by_symbol_BaseCommand.Type'('ADD_SUBSCRIPTION_TO_TXN_RESPONSE') ->
    55;
'enum_value_by_symbol_BaseCommand.Type'('END_TXN') ->
    56;
'enum_value_by_symbol_BaseCommand.Type'('END_TXN_RESPONSE') ->
    57;
'enum_value_by_symbol_BaseCommand.Type'('END_TXN_ON_PARTITION') ->
    58;
'enum_value_by_symbol_BaseCommand.Type'('END_TXN_ON_PARTITION_RESPONSE') ->
    59;
'enum_value_by_symbol_BaseCommand.Type'('END_TXN_ON_SUBSCRIPTION') ->
    60;
'enum_value_by_symbol_BaseCommand.Type'('END_TXN_ON_SUBSCRIPTION_RESPONSE') ->
    61.


get_service_names() -> [].


get_service_def(_) -> error.


get_rpc_names(_) -> error.


find_rpc_def(_, _) -> error.



-spec fetch_rpc_def(_, _) -> no_return().
fetch_rpc_def(ServiceName, RpcName) ->
    erlang:error({no_such_rpc, ServiceName, RpcName}).


%% Convert a a fully qualified (ie with package name) service name
%% as a binary to a service name as an atom.
-spec fqbin_to_service_name(_) -> no_return().
fqbin_to_service_name(X) ->
    error({gpb_error, {badservice, X}}).


%% Convert a service name as an atom to a fully qualified
%% (ie with package name) name as a binary.
-spec service_name_to_fqbin(_) -> no_return().
service_name_to_fqbin(X) ->
    error({gpb_error, {badservice, X}}).


%% Convert a a fully qualified (ie with package name) service name
%% and an rpc name, both as binaries to a service name and an rpc
%% name, as atoms.
-spec fqbins_to_service_and_rpc_name(_, _) -> no_return().
fqbins_to_service_and_rpc_name(S, R) ->
    error({gpb_error, {badservice_or_rpc, {S, R}}}).


%% Convert a service name and an rpc name, both as atoms,
%% to a fully qualified (ie with package name) service name and
%% an rpc name as binaries.
-spec service_and_rpc_name_to_fqbins(_, _) -> no_return().
service_and_rpc_name_to_fqbins(S, R) ->
    error({gpb_error, {badservice_or_rpc, {S, R}}}).


fqbin_to_msg_name(<<"pulsar.proto.Schema">>) -> 'Schema';
fqbin_to_msg_name(<<"pulsar.proto.MessageIdData">>) -> 'MessageIdData';
fqbin_to_msg_name(<<"pulsar.proto.KeyValue">>) -> 'KeyValue';
fqbin_to_msg_name(<<"pulsar.proto.KeyLongValue">>) -> 'KeyLongValue';
fqbin_to_msg_name(<<"pulsar.proto.IntRange">>) -> 'IntRange';
fqbin_to_msg_name(<<"pulsar.proto.EncryptionKeys">>) -> 'EncryptionKeys';
fqbin_to_msg_name(<<"pulsar.proto.MessageMetadata">>) -> 'MessageMetadata';
fqbin_to_msg_name(<<"pulsar.proto.SingleMessageMetadata">>) -> 'SingleMessageMetadata';
fqbin_to_msg_name(<<"pulsar.proto.CommandConnect">>) -> 'CommandConnect';
fqbin_to_msg_name(<<"pulsar.proto.FeatureFlags">>) -> 'FeatureFlags';
fqbin_to_msg_name(<<"pulsar.proto.CommandConnected">>) -> 'CommandConnected';
fqbin_to_msg_name(<<"pulsar.proto.CommandAuthResponse">>) -> 'CommandAuthResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandAuthChallenge">>) -> 'CommandAuthChallenge';
fqbin_to_msg_name(<<"pulsar.proto.AuthData">>) -> 'AuthData';
fqbin_to_msg_name(<<"pulsar.proto.KeySharedMeta">>) -> 'KeySharedMeta';
fqbin_to_msg_name(<<"pulsar.proto.CommandSubscribe">>) -> 'CommandSubscribe';
fqbin_to_msg_name(<<"pulsar.proto.CommandPartitionedTopicMetadata">>) ->
    'CommandPartitionedTopicMetadata';
fqbin_to_msg_name(<<"pulsar.proto.CommandPartitionedTopicMetadataResponse">>) ->
    'CommandPartitionedTopicMetadataResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandLookupTopic">>) -> 'CommandLookupTopic';
fqbin_to_msg_name(<<"pulsar.proto.CommandLookupTopicResponse">>) ->
    'CommandLookupTopicResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandProducer">>) -> 'CommandProducer';
fqbin_to_msg_name(<<"pulsar.proto.CommandSend">>) -> 'CommandSend';
fqbin_to_msg_name(<<"pulsar.proto.CommandSendReceipt">>) -> 'CommandSendReceipt';
fqbin_to_msg_name(<<"pulsar.proto.CommandSendError">>) -> 'CommandSendError';
fqbin_to_msg_name(<<"pulsar.proto.CommandMessage">>) -> 'CommandMessage';
fqbin_to_msg_name(<<"pulsar.proto.CommandAck">>) -> 'CommandAck';
fqbin_to_msg_name(<<"pulsar.proto.CommandAckResponse">>) -> 'CommandAckResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandActiveConsumerChange">>) ->
    'CommandActiveConsumerChange';
fqbin_to_msg_name(<<"pulsar.proto.CommandFlow">>) -> 'CommandFlow';
fqbin_to_msg_name(<<"pulsar.proto.CommandUnsubscribe">>) -> 'CommandUnsubscribe';
fqbin_to_msg_name(<<"pulsar.proto.CommandSeek">>) -> 'CommandSeek';
fqbin_to_msg_name(<<"pulsar.proto.CommandReachedEndOfTopic">>) ->
    'CommandReachedEndOfTopic';
fqbin_to_msg_name(<<"pulsar.proto.CommandCloseProducer">>) -> 'CommandCloseProducer';
fqbin_to_msg_name(<<"pulsar.proto.CommandCloseConsumer">>) -> 'CommandCloseConsumer';
fqbin_to_msg_name(<<"pulsar.proto.CommandRedeliverUnacknowledgedMessages">>) ->
    'CommandRedeliverUnacknowledgedMessages';
fqbin_to_msg_name(<<"pulsar.proto.CommandSuccess">>) -> 'CommandSuccess';
fqbin_to_msg_name(<<"pulsar.proto.CommandProducerSuccess">>) -> 'CommandProducerSuccess';
fqbin_to_msg_name(<<"pulsar.proto.CommandError">>) -> 'CommandError';
fqbin_to_msg_name(<<"pulsar.proto.CommandPing">>) -> 'CommandPing';
fqbin_to_msg_name(<<"pulsar.proto.CommandPong">>) -> 'CommandPong';
fqbin_to_msg_name(<<"pulsar.proto.CommandConsumerStats">>) -> 'CommandConsumerStats';
fqbin_to_msg_name(<<"pulsar.proto.CommandConsumerStatsResponse">>) ->
    'CommandConsumerStatsResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandGetLastMessageId">>) -> 'CommandGetLastMessageId';
fqbin_to_msg_name(<<"pulsar.proto.CommandGetLastMessageIdResponse">>) ->
    'CommandGetLastMessageIdResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandGetTopicsOfNamespace">>) ->
    'CommandGetTopicsOfNamespace';
fqbin_to_msg_name(<<"pulsar.proto.CommandGetTopicsOfNamespaceResponse">>) ->
    'CommandGetTopicsOfNamespaceResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandGetSchema">>) -> 'CommandGetSchema';
fqbin_to_msg_name(<<"pulsar.proto.CommandGetSchemaResponse">>) ->
    'CommandGetSchemaResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandGetOrCreateSchema">>) ->
    'CommandGetOrCreateSchema';
fqbin_to_msg_name(<<"pulsar.proto.CommandGetOrCreateSchemaResponse">>) ->
    'CommandGetOrCreateSchemaResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandNewTxn">>) -> 'CommandNewTxn';
fqbin_to_msg_name(<<"pulsar.proto.CommandNewTxnResponse">>) -> 'CommandNewTxnResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandAddPartitionToTxn">>) ->
    'CommandAddPartitionToTxn';
fqbin_to_msg_name(<<"pulsar.proto.CommandAddPartitionToTxnResponse">>) ->
    'CommandAddPartitionToTxnResponse';
fqbin_to_msg_name(<<"pulsar.proto.Subscription">>) -> 'Subscription';
fqbin_to_msg_name(<<"pulsar.proto.CommandAddSubscriptionToTxn">>) ->
    'CommandAddSubscriptionToTxn';
fqbin_to_msg_name(<<"pulsar.proto.CommandAddSubscriptionToTxnResponse">>) ->
    'CommandAddSubscriptionToTxnResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandEndTxn">>) -> 'CommandEndTxn';
fqbin_to_msg_name(<<"pulsar.proto.CommandEndTxnResponse">>) -> 'CommandEndTxnResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandEndTxnOnPartition">>) ->
    'CommandEndTxnOnPartition';
fqbin_to_msg_name(<<"pulsar.proto.CommandEndTxnOnPartitionResponse">>) ->
    'CommandEndTxnOnPartitionResponse';
fqbin_to_msg_name(<<"pulsar.proto.CommandEndTxnOnSubscription">>) ->
    'CommandEndTxnOnSubscription';
fqbin_to_msg_name(<<"pulsar.proto.CommandEndTxnOnSubscriptionResponse">>) ->
    'CommandEndTxnOnSubscriptionResponse';
fqbin_to_msg_name(<<"pulsar.proto.BaseCommand">>) -> 'BaseCommand';
fqbin_to_msg_name(E) -> error({gpb_error, {badmsg, E}}).


msg_name_to_fqbin('Schema') -> <<"pulsar.proto.Schema">>;
msg_name_to_fqbin('MessageIdData') -> <<"pulsar.proto.MessageIdData">>;
msg_name_to_fqbin('KeyValue') -> <<"pulsar.proto.KeyValue">>;
msg_name_to_fqbin('KeyLongValue') -> <<"pulsar.proto.KeyLongValue">>;
msg_name_to_fqbin('IntRange') -> <<"pulsar.proto.IntRange">>;
msg_name_to_fqbin('EncryptionKeys') -> <<"pulsar.proto.EncryptionKeys">>;
msg_name_to_fqbin('MessageMetadata') -> <<"pulsar.proto.MessageMetadata">>;
msg_name_to_fqbin('SingleMessageMetadata') -> <<"pulsar.proto.SingleMessageMetadata">>;
msg_name_to_fqbin('CommandConnect') -> <<"pulsar.proto.CommandConnect">>;
msg_name_to_fqbin('FeatureFlags') -> <<"pulsar.proto.FeatureFlags">>;
msg_name_to_fqbin('CommandConnected') -> <<"pulsar.proto.CommandConnected">>;
msg_name_to_fqbin('CommandAuthResponse') -> <<"pulsar.proto.CommandAuthResponse">>;
msg_name_to_fqbin('CommandAuthChallenge') -> <<"pulsar.proto.CommandAuthChallenge">>;
msg_name_to_fqbin('AuthData') -> <<"pulsar.proto.AuthData">>;
msg_name_to_fqbin('KeySharedMeta') -> <<"pulsar.proto.KeySharedMeta">>;
msg_name_to_fqbin('CommandSubscribe') -> <<"pulsar.proto.CommandSubscribe">>;
msg_name_to_fqbin('CommandPartitionedTopicMetadata') ->
    <<"pulsar.proto.CommandPartitionedTopicMetadata">>;
msg_name_to_fqbin('CommandPartitionedTopicMetadataResponse') ->
    <<"pulsar.proto.CommandPartitionedTopicMetadataResponse">>;
msg_name_to_fqbin('CommandLookupTopic') -> <<"pulsar.proto.CommandLookupTopic">>;
msg_name_to_fqbin('CommandLookupTopicResponse') ->
    <<"pulsar.proto.CommandLookupTopicResponse">>;
msg_name_to_fqbin('CommandProducer') -> <<"pulsar.proto.CommandProducer">>;
msg_name_to_fqbin('CommandSend') -> <<"pulsar.proto.CommandSend">>;
msg_name_to_fqbin('CommandSendReceipt') -> <<"pulsar.proto.CommandSendReceipt">>;
msg_name_to_fqbin('CommandSendError') -> <<"pulsar.proto.CommandSendError">>;
msg_name_to_fqbin('CommandMessage') -> <<"pulsar.proto.CommandMessage">>;
msg_name_to_fqbin('CommandAck') -> <<"pulsar.proto.CommandAck">>;
msg_name_to_fqbin('CommandAckResponse') -> <<"pulsar.proto.CommandAckResponse">>;
msg_name_to_fqbin('CommandActiveConsumerChange') ->
    <<"pulsar.proto.CommandActiveConsumerChange">>;
msg_name_to_fqbin('CommandFlow') -> <<"pulsar.proto.CommandFlow">>;
msg_name_to_fqbin('CommandUnsubscribe') -> <<"pulsar.proto.CommandUnsubscribe">>;
msg_name_to_fqbin('CommandSeek') -> <<"pulsar.proto.CommandSeek">>;
msg_name_to_fqbin('CommandReachedEndOfTopic') ->
    <<"pulsar.proto.CommandReachedEndOfTopic">>;
msg_name_to_fqbin('CommandCloseProducer') -> <<"pulsar.proto.CommandCloseProducer">>;
msg_name_to_fqbin('CommandCloseConsumer') -> <<"pulsar.proto.CommandCloseConsumer">>;
msg_name_to_fqbin('CommandRedeliverUnacknowledgedMessages') ->
    <<"pulsar.proto.CommandRedeliverUnacknowledgedMessages">>;
msg_name_to_fqbin('CommandSuccess') -> <<"pulsar.proto.CommandSuccess">>;
msg_name_to_fqbin('CommandProducerSuccess') -> <<"pulsar.proto.CommandProducerSuccess">>;
msg_name_to_fqbin('CommandError') -> <<"pulsar.proto.CommandError">>;
msg_name_to_fqbin('CommandPing') -> <<"pulsar.proto.CommandPing">>;
msg_name_to_fqbin('CommandPong') -> <<"pulsar.proto.CommandPong">>;
msg_name_to_fqbin('CommandConsumerStats') -> <<"pulsar.proto.CommandConsumerStats">>;
msg_name_to_fqbin('CommandConsumerStatsResponse') ->
    <<"pulsar.proto.CommandConsumerStatsResponse">>;
msg_name_to_fqbin('CommandGetLastMessageId') -> <<"pulsar.proto.CommandGetLastMessageId">>;
msg_name_to_fqbin('CommandGetLastMessageIdResponse') ->
    <<"pulsar.proto.CommandGetLastMessageIdResponse">>;
msg_name_to_fqbin('CommandGetTopicsOfNamespace') ->
    <<"pulsar.proto.CommandGetTopicsOfNamespace">>;
msg_name_to_fqbin('CommandGetTopicsOfNamespaceResponse') ->
    <<"pulsar.proto.CommandGetTopicsOfNamespaceResponse">>;
msg_name_to_fqbin('CommandGetSchema') -> <<"pulsar.proto.CommandGetSchema">>;
msg_name_to_fqbin('CommandGetSchemaResponse') ->
    <<"pulsar.proto.CommandGetSchemaResponse">>;
msg_name_to_fqbin('CommandGetOrCreateSchema') ->
    <<"pulsar.proto.CommandGetOrCreateSchema">>;
msg_name_to_fqbin('CommandGetOrCreateSchemaResponse') ->
    <<"pulsar.proto.CommandGetOrCreateSchemaResponse">>;
msg_name_to_fqbin('CommandNewTxn') -> <<"pulsar.proto.CommandNewTxn">>;
msg_name_to_fqbin('CommandNewTxnResponse') -> <<"pulsar.proto.CommandNewTxnResponse">>;
msg_name_to_fqbin('CommandAddPartitionToTxn') ->
    <<"pulsar.proto.CommandAddPartitionToTxn">>;
msg_name_to_fqbin('CommandAddPartitionToTxnResponse') ->
    <<"pulsar.proto.CommandAddPartitionToTxnResponse">>;
msg_name_to_fqbin('Subscription') -> <<"pulsar.proto.Subscription">>;
msg_name_to_fqbin('CommandAddSubscriptionToTxn') ->
    <<"pulsar.proto.CommandAddSubscriptionToTxn">>;
msg_name_to_fqbin('CommandAddSubscriptionToTxnResponse') ->
    <<"pulsar.proto.CommandAddSubscriptionToTxnResponse">>;
msg_name_to_fqbin('CommandEndTxn') -> <<"pulsar.proto.CommandEndTxn">>;
msg_name_to_fqbin('CommandEndTxnResponse') -> <<"pulsar.proto.CommandEndTxnResponse">>;
msg_name_to_fqbin('CommandEndTxnOnPartition') ->
    <<"pulsar.proto.CommandEndTxnOnPartition">>;
msg_name_to_fqbin('CommandEndTxnOnPartitionResponse') ->
    <<"pulsar.proto.CommandEndTxnOnPartitionResponse">>;
msg_name_to_fqbin('CommandEndTxnOnSubscription') ->
    <<"pulsar.proto.CommandEndTxnOnSubscription">>;
msg_name_to_fqbin('CommandEndTxnOnSubscriptionResponse') ->
    <<"pulsar.proto.CommandEndTxnOnSubscriptionResponse">>;
msg_name_to_fqbin('BaseCommand') -> <<"pulsar.proto.BaseCommand">>;
msg_name_to_fqbin(E) -> error({gpb_error, {badmsg, E}}).


fqbin_to_enum_name(<<"pulsar.proto.Schema.Type">>) -> 'Schema.Type';
fqbin_to_enum_name(<<"pulsar.proto.CompressionType">>) -> 'CompressionType';
fqbin_to_enum_name(<<"pulsar.proto.ServerError">>) -> 'ServerError';
fqbin_to_enum_name(<<"pulsar.proto.AuthMethod">>) -> 'AuthMethod';
fqbin_to_enum_name(<<"pulsar.proto.ProtocolVersion">>) -> 'ProtocolVersion';
fqbin_to_enum_name(<<"pulsar.proto.KeySharedMode">>) -> 'KeySharedMode';
fqbin_to_enum_name(<<"pulsar.proto.CommandSubscribe.SubType">>) ->
    'CommandSubscribe.SubType';
fqbin_to_enum_name(<<"pulsar.proto.CommandSubscribe.InitialPosition">>) ->
    'CommandSubscribe.InitialPosition';
fqbin_to_enum_name(<<"pulsar.proto.CommandPartitionedTopicMetadataResponse.LookupType">>) ->
    'CommandPartitionedTopicMetadataResponse.LookupType';
fqbin_to_enum_name(<<"pulsar.proto.CommandLookupTopicResponse.LookupType">>) ->
    'CommandLookupTopicResponse.LookupType';
fqbin_to_enum_name(<<"pulsar.proto.CommandAck.AckType">>) -> 'CommandAck.AckType';
fqbin_to_enum_name(<<"pulsar.proto.CommandAck.ValidationError">>) ->
    'CommandAck.ValidationError';
fqbin_to_enum_name(<<"pulsar.proto.CommandGetTopicsOfNamespace.Mode">>) ->
    'CommandGetTopicsOfNamespace.Mode';
fqbin_to_enum_name(<<"pulsar.proto.TxnAction">>) -> 'TxnAction';
fqbin_to_enum_name(<<"pulsar.proto.BaseCommand.Type">>) -> 'BaseCommand.Type';
fqbin_to_enum_name(E) ->
    error({gpb_error, {badenum, E}}).


enum_name_to_fqbin('Schema.Type') -> <<"pulsar.proto.Schema.Type">>;
enum_name_to_fqbin('CompressionType') -> <<"pulsar.proto.CompressionType">>;
enum_name_to_fqbin('ServerError') -> <<"pulsar.proto.ServerError">>;
enum_name_to_fqbin('AuthMethod') -> <<"pulsar.proto.AuthMethod">>;
enum_name_to_fqbin('ProtocolVersion') -> <<"pulsar.proto.ProtocolVersion">>;
enum_name_to_fqbin('KeySharedMode') -> <<"pulsar.proto.KeySharedMode">>;
enum_name_to_fqbin('CommandSubscribe.SubType') ->
    <<"pulsar.proto.CommandSubscribe.SubType">>;
enum_name_to_fqbin('CommandSubscribe.InitialPosition') ->
    <<"pulsar.proto.CommandSubscribe.InitialPosition">>;
enum_name_to_fqbin('CommandPartitionedTopicMetadataResponse.LookupType') ->
    <<"pulsar.proto.CommandPartitionedTopicMetadataResponse.LookupType">>;
enum_name_to_fqbin('CommandLookupTopicResponse.LookupType') ->
    <<"pulsar.proto.CommandLookupTopicResponse.LookupType">>;
enum_name_to_fqbin('CommandAck.AckType') -> <<"pulsar.proto.CommandAck.AckType">>;
enum_name_to_fqbin('CommandAck.ValidationError') ->
    <<"pulsar.proto.CommandAck.ValidationError">>;
enum_name_to_fqbin('CommandGetTopicsOfNamespace.Mode') ->
    <<"pulsar.proto.CommandGetTopicsOfNamespace.Mode">>;
enum_name_to_fqbin('TxnAction') -> <<"pulsar.proto.TxnAction">>;
enum_name_to_fqbin('BaseCommand.Type') -> <<"pulsar.proto.BaseCommand.Type">>;
enum_name_to_fqbin(E) ->
    error({gpb_error, {badenum, E}}).


get_package_name() -> 'pulsar.proto'.


%% Whether or not the message names
%% are prepended with package name or not.
uses_packages() -> false.


source_basename() -> "PulsarApi.proto".


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned with extension,
%% see get_all_proto_names/0 for a version that returns
%% the basenames sans extension
get_all_source_basenames() -> ["PulsarApi.proto"].


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned sans .proto extension,
%% to make it easier to use them with the various get_xyz_containment
%% functions.
get_all_proto_names() -> ["PulsarApi"].


get_msg_containment("PulsarApi") ->
    ['AuthData',
     'BaseCommand',
     'CommandAck',
     'CommandAckResponse',
     'CommandActiveConsumerChange',
     'CommandAddPartitionToTxn',
     'CommandAddPartitionToTxnResponse',
     'CommandAddSubscriptionToTxn',
     'CommandAddSubscriptionToTxnResponse',
     'CommandAuthChallenge',
     'CommandAuthResponse',
     'CommandCloseConsumer',
     'CommandCloseProducer',
     'CommandConnect',
     'CommandConnected',
     'CommandConsumerStats',
     'CommandConsumerStatsResponse',
     'CommandEndTxn',
     'CommandEndTxnOnPartition',
     'CommandEndTxnOnPartitionResponse',
     'CommandEndTxnOnSubscription',
     'CommandEndTxnOnSubscriptionResponse',
     'CommandEndTxnResponse',
     'CommandError',
     'CommandFlow',
     'CommandGetLastMessageId',
     'CommandGetLastMessageIdResponse',
     'CommandGetOrCreateSchema',
     'CommandGetOrCreateSchemaResponse',
     'CommandGetSchema',
     'CommandGetSchemaResponse',
     'CommandGetTopicsOfNamespace',
     'CommandGetTopicsOfNamespaceResponse',
     'CommandLookupTopic',
     'CommandLookupTopicResponse',
     'CommandMessage',
     'CommandNewTxn',
     'CommandNewTxnResponse',
     'CommandPartitionedTopicMetadata',
     'CommandPartitionedTopicMetadataResponse',
     'CommandPing',
     'CommandPong',
     'CommandProducer',
     'CommandProducerSuccess',
     'CommandReachedEndOfTopic',
     'CommandRedeliverUnacknowledgedMessages',
     'CommandSeek',
     'CommandSend',
     'CommandSendError',
     'CommandSendReceipt',
     'CommandSubscribe',
     'CommandSuccess',
     'CommandUnsubscribe',
     'EncryptionKeys',
     'FeatureFlags',
     'IntRange',
     'KeyLongValue',
     'KeySharedMeta',
     'KeyValue',
     'MessageIdData',
     'MessageMetadata',
     'Schema',
     'SingleMessageMetadata',
     'Subscription'];
get_msg_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_pkg_containment("PulsarApi") -> undefined;
get_pkg_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_service_containment("PulsarApi") -> [];
get_service_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_rpc_containment("PulsarApi") -> [];
get_rpc_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_enum_containment("PulsarApi") ->
    ['AuthMethod',
     'BaseCommand.Type',
     'CommandAck.AckType',
     'CommandAck.ValidationError',
     'CommandGetTopicsOfNamespace.Mode',
     'CommandLookupTopicResponse.LookupType',
     'CommandPartitionedTopicMetadataResponse.LookupType',
     'CommandSubscribe.InitialPosition',
     'CommandSubscribe.SubType',
     'CompressionType',
     'KeySharedMode',
     'ProtocolVersion',
     'Schema.Type',
     'ServerError',
     'TxnAction'];
get_enum_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.SingleMessageMetadata">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.Schema">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.MessageMetadata">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.MessageIdData">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.KeySharedMeta">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandPartitionedTopicMetadata">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandGetSchema">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandGetOrCreateSchema">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.AuthData">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandSendError">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandProducer">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandError">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandCloseProducer">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandCloseConsumer">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.FeatureFlags">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.EncryptionKeys">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandSuccess">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandRedeliverUnacknowledgedMessages">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandReachedEndOfTopic">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandProducerSuccess">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandLookupTopic">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandConsumerStats">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandSendReceipt">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandSend">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandGetLastMessageId">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandConnected">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandConnect">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.BaseCommand">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.KeyValue">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.KeyLongValue">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.IntRange">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandUnsubscribe">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandSubscribe">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandPartitionedTopicMetadataResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandNewTxnResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandMessage">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandLookupTopicResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandGetTopicsOfNamespaceResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandGetTopicsOfNamespace">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandGetSchemaResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandGetOrCreateSchemaResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandGetLastMessageIdResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandEndTxnResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandEndTxnOnSubscriptionResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandEndTxnOnPartitionResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandConsumerStatsResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandAuthResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandAuthChallenge">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandAddSubscriptionToTxnResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandAddPartitionToTxnResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandActiveConsumerChange">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandAckResponse">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandPong">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandPing">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandFlow">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandSeek">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandAck">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.Subscription">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandNewTxn">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandEndTxnOnSubscription">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandEndTxnOnPartition">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandEndTxn">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandAddSubscriptionToTxn">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(<<"pulsar.proto.CommandAddPartitionToTxn">>) -> "PulsarApi";
get_proto_by_msg_name_as_fqbin(E) ->
    error({gpb_error, {badmsg, E}}).


-spec get_proto_by_service_name_as_fqbin(_) -> no_return().
get_proto_by_service_name_as_fqbin(E) ->
    error({gpb_error, {badservice, E}}).


get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.ServerError">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.CommandAck.ValidationError">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.AuthMethod">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.Schema.Type">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.KeySharedMode">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.CompressionType">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.CommandSubscribe.SubType">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.CommandPartitionedTopicMetadataResponse.LookupType">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.CommandLookupTopicResponse.LookupType">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.CommandGetTopicsOfNamespace.Mode">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.CommandAck.AckType">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.BaseCommand.Type">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.TxnAction">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.ProtocolVersion">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(<<"pulsar.proto.CommandSubscribe.InitialPosition">>) -> "PulsarApi";
get_proto_by_enum_name_as_fqbin(E) ->
    error({gpb_error, {badenum, E}}).


-spec get_protos_by_pkg_name_as_fqbin(_) -> no_return().
get_protos_by_pkg_name_as_fqbin(E) ->
    error({gpb_error, {badpkg, E}}).



gpb_version_as_string() ->
    "4.10.0".

gpb_version_as_list() ->
    [4,10,0].
